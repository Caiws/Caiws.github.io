"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5647],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>h});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function s(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var l=n.createContext({}),c=function(e){var t=n.useContext(l),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(o),h=r,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||a;return o?n.createElement(m,i(i({ref:t},p),{},{components:o})):n.createElement(m,i({ref:t},p))}));function h(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=o.length,i=new Array(a);i[0]=u;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<a;c++)i[c]=o[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},5650:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=o(7462),r=(o(7294),o(3905));const a={},i=void 0,s={unversionedId:"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions",id:"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions",title:"Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions",description:"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09",source:"@site/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions.md",sourceDirName:"Books/EffectiveJava3/Chapter-10",slug:"/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions",permalink:"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chapter-10-Introduction",permalink:"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Introduction"},next:{title:"Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors",permalink:"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors"}},l={},c=[{value:"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09",id:"chapter-10-exceptions\u5f02\u5e38",level:2},{value:"Item 69: Use exceptions only for exceptional conditions\uff08\u4ec5\u5728\u786e\u6709\u5f02\u5e38\u6761\u4ef6\u4e0b\u4f7f\u7528\u5f02\u5e38\uff09",id:"item-69-use-exceptions-only-for-exceptional-conditions\u4ec5\u5728\u786e\u6709\u5f02\u5e38\u6761\u4ef6\u4e0b\u4f7f\u7528\u5f02\u5e38",level:3}],p={toc:c};function d(e){let{components:t,...o}=e;return(0,r.kt)("wrapper",(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"chapter-10-exceptions\u5f02\u5e38"},"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09"),(0,r.kt)("h3",{id:"item-69-use-exceptions-only-for-exceptional-conditions\u4ec5\u5728\u786e\u6709\u5f02\u5e38\u6761\u4ef6\u4e0b\u4f7f\u7528\u5f02\u5e38"},"Item 69: Use exceptions only for exceptional conditions\uff08\u4ec5\u5728\u786e\u6709\u5f02\u5e38\u6761\u4ef6\u4e0b\u4f7f\u7528\u5f02\u5e38\uff09"),(0,r.kt)("p",null,"Someday, if you are unlucky, you may stumble across a piece of code that looks something like this:"),(0,r.kt)("p",null,"\u4f60\u53ef\u80fd\u4f1a\u5076\u7136\u53d1\u73b0\u8fd9\u6837\u4e00\u6bb5\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"// Horrible abuse of exceptions. Don't ever do this!\ntry {\n    int i = 0;\n    while(true)\n        range[i++].climb();\n    }\n    catch (ArrayIndexOutOfBoundsException e) {\n}\n")),(0,r.kt)("p",null,"What does this code do? It\u2019s not at all obvious from inspection, and that\u2019s reason enough not to use it (Item 67). It turns out to be a horribly ill-conceived idiom for looping through the elements of an array. The infinite loop terminates by throwing, catching, and ignoring an ArrayIndexOutOfBoundsException when it attempts to access the first array element outside the bounds of the array. It\u2019s supposed to be equivalent to the standard idiom for looping through an array, which is instantly recognizable to any Java programmer:"),(0,r.kt)("p",null,"\u8fd9\u6bb5\u4ee3\u7801\u662f\u505a\u4ec0\u4e48\u7684\uff1f\u4ece\u8868\u9762\u4e0a\u770b\uff0c\u4e00\u70b9\u4e5f\u4e0d\u660e\u663e\uff0c\u8fd9\u8db3\u4ee5\u6210\u4e3a\u4e0d\u4f7f\u7528\u5b83\u7684\u5145\u5206\u7406\u7531\uff08",(0,r.kt)("a",{parentName:"p",href:"./Chapter-9-Item-67-Optimize-judiciously"},"Item-67"),"\uff09\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8fd9\u662f\u4e00\u4e2a\u7528\u4e8e\u904d\u5386\u6570\u7ec4\u7684\u5143\u7d20\u7684\u975e\u5e38\u7cdf\u7cd5\u7684\u4e60\u60ef\u7528\u6cd5\u3002\u5f53\u8bd5\u56fe\u8bbf\u95ee\u6570\u7ec4\u8fb9\u754c\u4e4b\u5916\u7684\u6570\u7ec4\u5143\u7d20\u65f6\uff0c\u901a\u8fc7\u629b\u51fa\u3001\u6355\u83b7\u548c\u5ffd\u7565 ArrayIndexOutOfBoundsException \u6765\u7ec8\u6b62\u65e0\u9650\u5faa\u73af\u3002\u5982\u4e0b\u5faa\u73af\u904d\u5386\u6570\u7ec4\u7684\u6807\u51c6\u4e60\u60ef\u7528\u6cd5\uff0c\u4efb\u4f55 Java \u7a0b\u5e8f\u5458\u90fd\u53ef\u4ee5\u7acb\u5373\u8bc6\u522b\u5b83\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"for (Mountain m : range)\n    m.climb();\n")),(0,r.kt)("p",null,"So why would anyone use the exception-based loop in preference to the tried and true? It\u2019s a misguided attempt to improve performance based on the faulty reasoning that, since the VM checks the bounds of all array accesses, the normal loop termination test\u2014hidden by the compiler but still present in the for-each loop\u2014is redundant and should be avoided. There are three things wrong with this reasoning:"),(0,r.kt)("p",null,"\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u4f1a\u6709\u4eba\u4f7f\u7528\u57fa\u4e8e\u5f02\u5e38\u7684\u5faa\u73af\u800c\u4e0d\u4f7f\u7528\u4e60\u60ef\u7684\u5faa\u73af\u6a21\u5f0f\u5462\uff1f\u7531\u4e8e VM \u68c0\u67e5\u6240\u6709\u6570\u7ec4\u8bbf\u95ee\u7684\u8fb9\u754c\uff0c\u6240\u4ee5\u8bef\u8ba4\u4e3a\u6b63\u5e38\u7684\u5faa\u73af\u7ec8\u6b62\u6d4b\u8bd5\u88ab\u7f16\u8bd1\u5668\u9690\u85cf\u4e86\uff0c\u4f46\u5728 for-each \u5faa\u73af\u4e2d\u4ecd\u7136\u53ef\u89c1\uff0c\u8fd9\u65e0\u7591\u662f\u591a\u4f59\u7684\uff0c\u5e94\u8be5\u907f\u514d\uff0c\u56e0\u6b64\u5229\u7528\u9519\u8bef\u5224\u65ad\u673a\u5236\u6765\u63d0\u9ad8\u6027\u80fd\u662f\u9519\u8bef\u7684\u3002\u8fd9\u79cd\u601d\u8def\u6709\u4e09\u70b9\u8bef\u533a\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Because exceptions are designed for exceptional circumstances, there is little incentive for JVM implementors to make them as fast as explicit tests.")),(0,r.kt)("p",null,"\u56e0\u4e3a\u5f02\u5e38\u662f\u4e3a\u7279\u6b8a\u60c5\u51b5\u8bbe\u8ba1\u7684\uff0c\u6240\u4ee5 JVM \u5b9e\u73b0\u51e0\u4e4e\u4e0d\u4f1a\u8ba9\u5b83\u4eec\u50cf\u663e\u5f0f\u6d4b\u8bd5\u4e00\u6837\u5feb\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Placing code inside a try-catch block inhibits certain optimizations that JVM implementations might otherwise perform.")),(0,r.kt)("p",null,"\u5c06\u4ee3\u7801\u653e\u5728 try-catch \u5757\u4e2d\u4f1a\u6291\u5236 JVM \u53ef\u80fd\u6267\u884c\u7684\u67d0\u4e9b\u4f18\u5316\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The standard idiom for looping through an array doesn\u2019t necessarily result in redundant checks. Many JVM implementations optimize them away.")),(0,r.kt)("p",null,"\u904d\u5386\u6570\u7ec4\u7684\u6807\u51c6\u4e60\u60ef\u7528\u6cd5\u4e0d\u4e00\u5b9a\u4f1a\u5bfc\u81f4\u5197\u4f59\u68c0\u67e5\u3002\u8bb8\u591a JVM \u5b9e\u73b0\u5bf9\u5b83\u4eec\u8fdb\u884c\u4e86\u4f18\u5316\u3002"),(0,r.kt)("p",null,"In fact, the exception-based idiom is far slower than the standard one. On my machine, the exception-based idiom is about twice as slow as the standard one for arrays of one hundred elements."),(0,r.kt)("p",null,"\u4e8b\u5b9e\u4e0a\uff0c\u57fa\u4e8e\u5f02\u5e38\u7684\u7528\u6cd5\u6bd4\u6807\u51c6\u7528\u6cd5\u6162\u5f97\u591a\u3002\u5728\u6211\u7684\u673a\u5668\u4e0a\uff0c\u7528 100 \u4e2a\u5143\u7d20\u7684\u6570\u7ec4\u6d4b\u8bd5\uff0c\u57fa\u4e8e\u5f02\u5e38\u7684\u7528\u6cd5\u4e0e\u6807\u51c6\u7528\u6cd5\u76f8\u6bd4\u901f\u5ea6\u5927\u7ea6\u6162\u4e86\u4e24\u500d\u3002"),(0,r.kt)("p",null,"Not only does the exception-based loop obfuscate the purpose of the code and reduce its performance, but it\u2019s not guaranteed to work. If there is a bug in the loop, the use of exceptions for flow control can mask the bug, greatly complicating the debugging process. Suppose the computation in the body of the loop invokes a method that performs an out-of-bounds access to some unrelated array. If a reasonable loop idiom were used, the bug would generate an uncaught exception, resulting in immediate thread termination with a full stack trace. If the misguided exception-based loop were used, the bug-related exception would be caught and misinterpreted as a normal loop termination."),(0,r.kt)("p",null,"\u57fa\u4e8e\u5f02\u5e38\u7684\u5faa\u73af\u4e0d\u4ec5\u6df7\u6dc6\u4e86\u4ee3\u7801\u7684\u76ee\u7684\uff0c\u964d\u4f4e\u4e86\u4ee3\u7801\u7684\u6027\u80fd\uff0c\u800c\u4e14\u4e0d\u80fd\u4fdd\u8bc1\u5b83\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002\u5982\u679c\u5faa\u73af\u4e2d\u5b58\u5728 bug\uff0c\u4f7f\u7528\u5f02\u5e38\u8fdb\u884c\u6d41\u7a0b\u63a7\u5236\u4f1a\u63a9\u76d6\u8be5 bug\uff0c\u4ece\u800c\u5927\u5927\u589e\u52a0\u8c03\u8bd5\u8fc7\u7a0b\u7684\u590d\u6742\u6027\u3002\u5047\u8bbe\u5faa\u73af\u4f53\u4e2d\u7684\u8ba1\u7b97\u6b65\u9aa4\u8c03\u7528\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5bf9\u4e00\u4e9b\u4e0d\u76f8\u5173\u7684\u6570\u7ec4\u6267\u884c\u8d8a\u754c\u8bbf\u95ee\u3002\u5982\u679c\u4f7f\u7528\u5408\u7406\u7684\u5faa\u73af\u4e60\u60ef\u7528\u6cd5\uff0c\u8be5 bug \u5c06\u751f\u6210\u4e00\u4e2a\u672a\u6355\u83b7\u7684\u5f02\u5e38\uff0c\u5bfc\u81f4\u7ebf\u7a0b\u7acb\u5373\u7ec8\u6b62\uff0c\u5e76\u5e26\u6709\u5b8c\u6574\u7684\u5806\u6808\u8ddf\u8e2a\u3002\u76f8\u53cd\uff0c\u5982\u679c\u4f7f\u7528\u4e86\u57fa\u4e8e\u5f02\u5e38\u7684\u5faa\u73af\uff0c\u5f53\u6355\u83b7\u4e0e bug \u76f8\u5173\u7684\u5f02\u5e38\u65f6\uff0c\u4f1a\u5c06\u5176\u8bef\u5224\u4e3a\u6b63\u5e38\u7684\u5faa\u73af\u7ec8\u6b62\u6761\u4ef6\u3002"),(0,r.kt)("p",null,"The moral of this story is simple: ",(0,r.kt)("strong",{parentName:"p"},"Exceptions are, as their name implies, to be used only for exceptional conditions; they should never be used for ordinary control flow.")," More generally, use standard, easily recognizable idioms in preference to overly clever techniques that purport to offer better performance. Even if the performance advantage is real, it may not remain in the face of steadily improving platform implementations. The subtle bugs and maintenance headaches that come from overly clever techniques, however, are sure to remain."),(0,r.kt)("p",null,"\u8fd9\u4e2a\u6848\u4f8b\u7684\u5bd3\u610f\u5f88\u7b80\u5355\uff1a",(0,r.kt)("strong",{parentName:"p"},"\u987e\u540d\u601d\u4e49\uff0c\u5f02\u5e38\u53ea\u9002\u7528\u4e8e\u786e\u6709\u5f02\u5e38\u7684\u60c5\u51b5\uff1b\u5b83\u4eec\u4e0d\u5e94\u8be5\u7528\u4e8e\u4e00\u822c\u7684\u63a7\u5236\u6d41\u7a0b\u3002")," \u66f4\u8fdb\u4e00\u6b65\u8bf4\uff0c\u4f7f\u7528\u6807\u51c6\u7684\u3001\u6613\u4e8e\u8bc6\u522b\u7684\u4e60\u60ef\u7528\u6cd5\uff0c\u800c\u4e0d\u662f\u58f0\u79f0\u80fd\u591f\u63d0\u4f9b\u66f4\u597d\u6027\u80fd\u7684\u8fc7\u4e8e\u6296\u673a\u7075\u7684\u6280\u672f\u3002\u5373\u4f7f\u6027\u80fd\u4f18\u52bf\u662f\u771f\u5b9e\u5b58\u5728\u7684\uff0c\u4f46\u5728\u7a33\u6b65\u6539\u8fdb\u5e73\u53f0\u5b9e\u73b0\u7684\u524d\u63d0\u4e0b\uff0c\u8fd9\u79cd\u4f18\u52bf\u4e5f\u5e76\u4e0d\u53ef\u9760\u3002\u800c\u4e14\uff0c\u6765\u81ea\u6296\u673a\u7075\u7684\u6280\u672f\u5b58\u5728\u7684\u7ec6\u5fae\u7f3a\u9677\u548c\u7ef4\u62a4\u95ee\u9898\u80af\u5b9a\u4f1a\u7ee7\u7eed\u5b58\u5728\u3002"),(0,r.kt)("p",null,"This principle also has implications for API design. ",(0,r.kt)("strong",{parentName:"p"},"A well-designed API must not force its clients to use exceptions for ordinary control flow.")," A class with a \u201cstate-dependent\u201d method that can be invoked only under certain unpredictable conditions should generally have a separate \u201cstate-testing\u201d method indicating whether it is appropriate to invoke the state-dependent method. For example, the Iterator interface has the state-dependent method next and the corresponding state-testing method hasNext. This enables the standard idiom for iterating over a collection with a traditional for loop (as well as the for-each loop, where the hasNext method is used internally):"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u539f\u5219\u5bf9 API \u8bbe\u8ba1\u4e5f\u6709\u5f71\u54cd\u3002\u4e00\u4e2a\u8bbe\u8ba1\u826f\u597d\u7684 API \u4e0d\u80fd\u8feb\u4f7f\u5176\u5ba2\u6237\u7aef\u4e3a\u4e00\u822c\u7684\u63a7\u5236\u6d41\u7a0b\u4f7f\u7528\u5f02\u5e38\u3002\u53ea\u6709\u5728\u67d0\u4e9b\u4e0d\u53ef\u9884\u77e5\u7684\u6761\u4ef6\u4e0b\u624d\u80fd\u8c03\u7528\u5177\u6709\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u7684\u7c7b\uff0c\u901a\u5e38\u5e94\u8be5\u6709\u4e00\u4e2a\u5355\u72ec\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\uff0c\u8868\u660e\u662f\u5426\u9002\u5408\u8c03\u7528\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u3002\u4f8b\u5982\uff0cIterator \u63a5\u53e3\u5177\u6709\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u7684 next \u65b9\u6cd5\u548c\u5bf9\u5e94\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5 hasNext\u3002\u8fd9\u4f7f\u5f97\u4f20\u7edf for \u5faa\u73af\uff08\u5728 for-each \u5faa\u73af\u5185\u90e8\u4e5f\u4f7f\u7528\u4e86 hasNext \u65b9\u6cd5\uff09\u5728\u96c6\u5408\u4e0a\u8fdb\u884c\u8fed\u4ee3\u6210\u4e3a\u6807\u51c6\u4e60\u60ef\u7528\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"for (Iterator<Foo> i = collection.iterator(); i.hasNext(); ) {\n    Foo foo = i.next();\n    ...\n}\n")),(0,r.kt)("p",null,"If Iterator lacked the hasNext method, clients would be forced to do this instead:"),(0,r.kt)("p",null,"\u5982\u679c Iterator \u7f3a\u5c11 hasNext \u65b9\u6cd5\uff0c\u5ba2\u6237\u7aef\u5c06\u88ab\u8feb\u8fd9\u6837\u505a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"// Do not use this hideous code for iteration over a collection!\ntry {\n    Iterator<Foo> i = collection.iterator();\n    while(true) {\n        Foo foo = i.next();\n        ...\n    }\n}\ncatch (NoSuchElementException e) {\n}\n")),(0,r.kt)("p",null,"This should look very familiar after the array iteration example that began this item. In addition to being wordy and misleading, the exception-based loop is likely to perform poorly and can mask bugs in unrelated parts of the system."),(0,r.kt)("p",null,"\u8fd9\u4e0e\u4e00\u5f00\u59cb\u4e3e\u4f8b\u7684\u5bf9\u6570\u7ec4\u8fdb\u884c\u8fed\u4ee3\u7684\u4f8b\u5b50\u975e\u5e38\u76f8\u4f3c\uff0c\u9664\u4e86\u5197\u957f\u548c\u8bef\u5bfc\u4e4b\u5916\uff0c\u57fa\u4e8e\u5f02\u5e38\u7684\u5faa\u73af\u6267\u884c\u6548\u679c\u53ef\u80fd\u5f88\u5dee\uff0c\u5e76\u4e14\u4f1a\u63a9\u76d6\u7cfb\u7edf\u4e2d\u4e0d\u76f8\u5173\u90e8\u5206\u7684 bug\u3002"),(0,r.kt)("p",null,"An alternative to providing a separate state-testing method is to have the statedependent method return an empty optional (Item 55) or a distinguished value such as null if it cannot perform the desired computation."),(0,r.kt)("p",null,"\u63d0\u4f9b\u5355\u72ec\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u7684\u53e6\u4e00\u79cd\u65b9\u5f0f\uff0c\u5c31\u662f\u8ba9\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684 Optional \u5bf9\u8c61\uff08",(0,r.kt)("a",{parentName:"p",href:"./Chapter-8-Item-55-Return-optionals-judiciously"},"Item-55"),"\uff09\uff0c\u6216\u8005\u5728\u5b83\u4e0d\u80fd\u6267\u884c\u6240\u9700\u7684\u8ba1\u7b97\u65f6\u8fd4\u56de\u4e00\u4e2a\u53ef\u8bc6\u522b\u7684\u503c\uff0c\u6bd4\u5982 null\u3002"),(0,r.kt)("p",null,"Here are some guidelines to help you choose between a state-testing method and an optional or distinguished return value. If an object is to be accessed concurrently without external synchronization or is subject to externally induced state transitions, you must use an optional or distinguished return value, as the object\u2019s state could change in the interval between the invocation of a state-testing method and its state-dependent method. Performance concerns may dictate that an optional or distinguished return value be used if a separate statetesting method would duplicate the work of the state-dependent method. All other things being equal, a state-testing method is mildly preferable to a distinguished return value. It offers slightly better readability, and incorrect use may be easier to detect: if you forget to call a state-testing method, the statedependent method will throw an exception, making the bug obvious; if you forget to check for a distinguished return value, the bug may be subtle. This is not an issue for optional return values."),(0,r.kt)("p",null,"\u6709\u4e00\u4e9b\u6307\u5bfc\u539f\u5219\uff0c\u5e2e\u52a9\u4f60\u5728\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u3001Optional\u3001\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\u4e4b\u95f4\u8fdb\u884c\u9009\u62e9\u3002\uff081\uff09\u5982\u679c\u8981\u5728\u6ca1\u6709\u5916\u90e8\u540c\u6b65\u7684\u60c5\u51b5\u4e0b\u5e76\u53d1\u5730\u8bbf\u95ee\u5bf9\u8c61\uff0c\u6216\u8005\u53d7\u5236\u4e8e\u5916\u90e8\u6761\u4ef6\u7684\u72b6\u6001\u8f6c\u6362\uff0c\u5219\u5fc5\u987b\u4f7f\u7528 Optional \u6216\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\uff0c\u56e0\u4e3a\u5bf9\u8c61\u7684\u72b6\u6001\u53ef\u80fd\u5728\u8c03\u7528\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u4e0e\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u7684\u95f4\u9694\u4e2d\u53d1\u751f\u53d8\u5316\u3002\uff082\uff09\u5982\u679c\u4e00\u4e2a\u5355\u72ec\u7684\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u91cd\u590d\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u7684\u5de5\u4f5c\uff0c\u4ece\u6027\u80fd\u95ee\u9898\u8003\u8651\uff0c\u53ef\u80fd\u8981\u6c42\u4f7f\u7528 Optional \u6216\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\u3002\uff083\uff09\u5728\u6240\u6709\u5176\u4ed6\u6761\u4ef6\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\u7565\u4f18\u4e8e\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\u3002\u5b83\u63d0\u4f9b\u4e86\u8f83\u597d\u7684\u53ef\u8bfb\u6027\uff0c\u800c\u4e14\u4e0d\u6b63\u786e\u7684\u4f7f\u7528\u53ef\u80fd\u66f4\u5bb9\u6613\u88ab\u68c0\u6d4b\uff1a\u5982\u679c\u4f60\u5fd8\u8bb0\u8c03\u7528\u300c\u72b6\u6001\u6d4b\u8bd5\u300d\u65b9\u6cd5\uff0c\u300c\u72b6\u6001\u4f9d\u8d56\u300d\u65b9\u6cd5\u5c06\u629b\u51fa\u5f02\u5e38\uff0c\u4f7f\u9519\u8bef\u663e\u800c\u6613\u89c1\uff1b\uff084\uff09\u5982\u679c\u4f60\u5fd8\u8bb0\u68c0\u67e5\u4e00\u4e2a\u53ef\u8bc6\u522b\u7684\u8fd4\u56de\u503c\uff0c\u90a3\u4e48\u8fd9\u4e2a bug \u53ef\u80fd\u5f88\u96be\u53d1\u73b0\u3002\u4f46\u662f\u8fd9\u5bf9\u4e8e\u8fd4\u56de Optional \u5bf9\u8c61\u7684\u65b9\u5f0f\u6765\u8bf4\u4e0d\u662f\u95ee\u9898\u3002"),(0,r.kt)("p",null,"In summary, exceptions are designed for exceptional conditions. Don\u2019t use them for ordinary control flow, and don\u2019t write APIs that force others to do so."),(0,r.kt)("p",null,"\u603b\u4e4b\uff0c\u5f02\u5e38\u662f\u4e3a\u786e\u6709\u5f02\u5e38\u7684\u60c5\u51b5\u8bbe\u8ba1\u7684\u3002\u4e0d\u8981\u5c06\u5b83\u4eec\u7528\u4e8e\u4e00\u822c\u7684\u63a7\u5236\u6d41\u7a0b\uff0c\u4e5f\u4e0d\u8981\u7f16\u5199\u5f3a\u5236\u5176\u4ed6\u4eba\u8fd9\u6837\u505a\u7684 API\u3002"),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"./Chapter-10/Chapter-10-Introduction"},"Back to contents of the chapter\uff08\u8fd4\u56de\u7ae0\u8282\u76ee\u5f55\uff09"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Next Item\uff08\u4e0b\u4e00\u6761\u76ee\uff09\uff1a",(0,r.kt)("a",{parentName:"strong",href:"./Chapter-10/Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors"},"Item 70: Use checked exceptions for recoverable conditions and runtime exceptions for programming errors\uff08\u5bf9\u53ef\u6062\u590d\u60c5\u51b5\u4f7f\u7528 checked \u5f02\u5e38\uff0c\u5bf9\u7f16\u7a0b\u9519\u8bef\u4f7f\u7528\u8fd0\u884c\u65f6\u5f02\u5e38\uff09")))))}d.isMDXComponent=!0}}]);