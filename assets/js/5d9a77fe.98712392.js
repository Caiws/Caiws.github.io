"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5353],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),u=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},p=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(n),m=r,f=p["".concat(l,".").concat(m)]||p[m]||d[m]||i;return n?a.createElement(f,s(s({ref:t},c),{},{components:n})):a.createElement(f,s({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=p;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:r,s[1]=o;for(var u=2;u<i;u++)s[u]=n[u];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}p.displayName="MDXCreateElement"},8097:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});var a=n(7462),r=(n(7294),n(3905));const i={},s=void 0,o={unversionedId:"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals",id:"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals",title:"Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals",description:"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09",source:"@site/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals.md",sourceDirName:"Books/EffectiveJava3/Chapter-6",slug:"/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals",permalink:"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chapter-6-Item-34-Use-enums-instead-of-int-constants",permalink:"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-34-Use-enums-instead-of-int-constants"},next:{title:"Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields",permalink:"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields"}},l={},u=[{value:"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09",id:"chapter-6-enums-and-annotations\u679a\u4e3e\u548c\u6ce8\u89e3",level:2},{value:"Item 35: Use instance fields instead of ordinals\uff08\u4f7f\u7528\u5b9e\u4f8b\u5b57\u6bb5\u66ff\u4ee3\u5e8f\u6570\uff09",id:"item-35-use-instance-fields-instead-of-ordinals\u4f7f\u7528\u5b9e\u4f8b\u5b57\u6bb5\u66ff\u4ee3\u5e8f\u6570",level:3}],c={toc:u};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"chapter-6-enums-and-annotations\u679a\u4e3e\u548c\u6ce8\u89e3"},"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09"),(0,r.kt)("h3",{id:"item-35-use-instance-fields-instead-of-ordinals\u4f7f\u7528\u5b9e\u4f8b\u5b57\u6bb5\u66ff\u4ee3\u5e8f\u6570"},"Item 35: Use instance fields instead of ordinals\uff08\u4f7f\u7528\u5b9e\u4f8b\u5b57\u6bb5\u66ff\u4ee3\u5e8f\u6570\uff09"),(0,r.kt)("p",null,"Many enums are naturally associated with a single int value. All enums have an ordinal method, which returns the numerical position of each enum constant in its type. You may be tempted to derive an associated int value from the ordinal:"),(0,r.kt)("p",null,"\u8bb8\u591a\u679a\u4e3e\u5929\u7136\u5730\u4e0e\u5355\u4e2a int \u503c\u76f8\u5173\u8054\u3002\u6240\u6709\u679a\u4e3e\u90fd\u6709\u4e00\u4e2a ordinal \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u8fd4\u56de\u679a\u4e3e\u7c7b\u578b\u4e2d\u6bcf\u4e2a\u679a\u4e3e\u5e38\u6570\u7684\u6570\u503c\u4f4d\u7f6e\u3002\u4f60\u53ef\u80fd\u60f3\u4ece\u5e8f\u53f7\u4e2d\u83b7\u5f97\u4e00\u4e2a\u5173\u8054\u7684 int \u503c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"// Abuse of ordinal to derive an associated value - DON'T DO THIS\npublic enum Ensemble {\n    SOLO, DUET, TRIO, QUARTET, QUINTET,SEXTET, SEPTET, OCTET, NONET, DECTET;\n\n    public int numberOfMusicians() { return ordinal() + 1; }\n}\n")),(0,r.kt)("p",null,"While this enum works, it is a maintenance nightmare. If the constants are reordered, the numberOfMusicians method will break. If you want to add a second enum constant associated with an int value that you\u2019ve already used, you\u2019re out of luck. For example, it might be nice to add a constant for double quartet, which, like an octet, consists of eight musicians, but there is no way to do it."),(0,r.kt)("p",null,"\u867d\u7136\u8fd9\u4e2a\u679a\u4e3e\u53ef\u4ee5\u5de5\u4f5c\uff0c\u4f46\u7ef4\u62a4\u5374\u662f\u5669\u68a6\u3002\u5982\u679c\u5e38\u91cf\u88ab\u91cd\u65b0\u6392\u5e8f\uff0cnumberOfMusicians \u65b9\u6cd5\u5c06\u88ab\u7834\u574f\u3002\u6216\u8005\u4f60\u60f3\u6dfb\u52a0\u4e00\u4e2a\u4e0e\u5df2\u7ecf\u4f7f\u7528\u8fc7\u7684 int \u503c\u76f8\u5173\u8054\u7684\u7b2c\u4e8c\u4e2a\u679a\u4e3e\u5e38\u91cf\uff0c\u90a3\u4e48\u4f60\u5c31\u6ca1\u6709\u90a3\u4e48\u5e78\u8fd0\u4e86\u3002\u4f8b\u5982\uff0c\u4e3a\u53cc\u56db\u91cd\u594f\u589e\u52a0\u4e00\u4e2a\u5e38\u91cf\u53ef\u80fd\u4f1a\u5f88\u597d\uff0c\u5c31\u50cf\u516b\u91cd\u594f\u4e00\u6837\uff0c\u7531\u516b\u4e2a\u97f3\u4e50\u5bb6\u7ec4\u6210\uff0c\u4f46\u662f\u6ca1\u6709\u529e\u6cd5\u505a\u5230\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u8bd1\u6ce8\uff1a\u300cIf you want to add a second enum constant associated with an int value that you\u2019ve already used\u300d\u662f\u6307\u6bcf\u4e2a\u5e38\u91cf\u5982\u679c\u4e0d\u7528\u5b9e\u4f8b\u5b57\u6bb5\u7684\u65b9\u5f0f\uff0c\u5c31\u53ea\u80fd\u6709\u4e00\u4e2a\u5e8f\u53f7\u503c\u3002\u5b9e\u4f8b\u5b57\u6bb5\u53ef\u4ee5\u5c06\u81ea\u5b9a\u4e49\u7684\u503c\u5bf9\u5e94\u591a\u4e2a\u5e38\u91cf\uff0c\u4f8b\u5982\uff1aSOLO(3), DUET(3), TRIO(3)\uff0c\u53ef\u4ee5\u90fd\u8bbe\u7f6e\u4e3a\u5e8f\u53f7 3")),(0,r.kt)("p",null,"Also, you can\u2019t add a constant for an int value without adding constants for all intervening int values. For example, suppose you want to add a constant representing a triple quartet, which consists of twelve musicians. There is no standard term for an ensemble consisting of eleven musicians, so you are forced to add a dummy constant for the unused int value (11). At best, this is ugly. If many int values are unused, it\u2019s impractical. Luckily, there is a simple solution to these problems. ",(0,r.kt)("strong",{parentName:"p"},"Never derive a value associated with an enum from its ordinal; store it in an instance field instead:")),(0,r.kt)("p",null,"\u6b64\u5916\uff0c\u5982\u679c\u4e0d\u4e3a\u6240\u6709\u63d2\u5165\u7684 int \u503c\u6dfb\u52a0\u5e38\u91cf\uff0c\u5c31\u4e0d\u80fd\u4e3a int \u503c\u6dfb\u52a0\u5e38\u91cf\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4f60\u60f3\u6dfb\u52a0\u4e00\u4e2a\u5e38\u91cf\u6765\u8868\u793a\u4e00\u4e2a\u7531 12 \u4f4d\u97f3\u4e50\u5bb6\u7ec4\u6210\u7684\u4e09\u91cd\u56db\u91cd\u594f\u3002\u5bf9\u4e8e 11 \u4f4d\u97f3\u4e50\u5bb6\u7ec4\u6210\u7684\u5408\u594f\uff0c\u7531\u4e8e\u6ca1\u6709\u6807\u51c6\u672f\u8bed\uff0c\u56e0\u6b64\u4f60\u5fc5\u987b\u4e3a\u672a\u4f7f\u7528\u7684 int \u503c\uff0811\uff09\u6dfb\u52a0\u4e00\u4e2a\u865a\u62df\u5e38\u91cf\u3002\u5f80\u597d\u7684\u8bf4\uff0c\u8fd9\u4ec5\u4ec5\u662f\u4e11\u964b\u7684\u3002\u5982\u679c\u8bb8\u591a int \u503c\u672a\u4f7f\u7528\uff0c\u5219\u4e0d\u5207\u5b9e\u9645\u3002\u5e78\u8fd0\u7684\u662f\uff0c\u8fd9\u4e9b\u95ee\u9898\u6709\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\u3002",(0,r.kt)("strong",{parentName:"p"},"\u4e0d\u8981\u4ece\u679a\u4e3e\u7684\u5e8f\u6570\u6d3e\u751f\u4e0e\u679a\u4e3e\u5173\u8054\u7684\u503c\uff1b\u800c\u662f\u5c06\u5176\u5b58\u50a8\u5728\u5b9e\u4f8b\u5b57\u6bb5\u4e2d\uff1a")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"public enum Ensemble {\n    SOLO(1), DUET(2), TRIO(3), QUARTET(4), QUINTET(5),SEXTET(6), SEPTET(7), OCTET(8), DOUBLE_QUARTET(8),NONET(9), DECTET(10),TRIPLE_QUARTET(12);\n\n    private final int numberOfMusicians;\n\n    Ensemble(int size) { this.numberOfMusicians = size; }\n\n    public int numberOfMusicians() { return numberOfMusicians; }\n}\n")),(0,r.kt)("p",null,"The Enum specification has this to say about ordinal: \u201cMost programmers will have no use for this method. It is designed for use by general-purpose enumbased data structures such as EnumSet and EnumMap.\u201d Unless you are writing code with this character, you are best off avoiding the ordinal method entirely."),(0,r.kt)("p",null,"\u679a\u4e3e\u89c4\u8303\u5bf9 ordinal \u65b9\u6cd5\u7684\u8bc4\u4ef7\u662f\u8fd9\u6837\u7684\uff1a\u300c\u5927\u591a\u6570\u7a0b\u5e8f\u5458\u90fd\u4e0d\u4f1a\u53bb\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\u5b83\u662f\u4e3a\u57fa\u4e8e\u679a\u4e3e\u7684\u901a\u7528\u6570\u636e\u7ed3\u6784\uff08\u5982 EnumSet \u548c EnumMap\uff09\u800c\u8bbe\u8ba1\u7684\u300d\u3002\u9664\u975e\u4f60\u4f7f\u7528\u8fd9\u4e2a\u6570\u636e\u7ed3\u6784\u7f16\u5199\u4ee3\u7801\uff0c\u5426\u5219\u6700\u597d\u5b8c\u5168\u907f\u514d\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002"),(0,r.kt)("hr",null),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"./Chapter-6-Introduction"},"Back to contents of the chapter\uff08\u8fd4\u56de\u7ae0\u8282\u76ee\u5f55\uff09"))),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Previous Item\uff08\u4e0a\u4e00\u6761\u76ee\uff09\uff1a",(0,r.kt)("a",{parentName:"strong",href:"./Chapter-6-Item-34-Use-enums-instead-of-int-constants"},"Item 34: Use enums instead of int constants\uff08\u7528\u679a\u4e3e\u7c7b\u578b\u4ee3\u66ff int \u5e38\u91cf\uff09"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"Next Item\uff08\u4e0b\u4e00\u6761\u76ee\uff09\uff1a",(0,r.kt)("a",{parentName:"strong",href:"./Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields"},"Item 36: Use EnumSet instead of bit fields\uff08\u7528 EnumSet \u66ff\u4ee3\u4f4d\u5b57\u6bb5\uff09")))))}d.isMDXComponent=!0}}]);