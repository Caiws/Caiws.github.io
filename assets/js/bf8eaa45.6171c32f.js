"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8821],{3905:(n,t,e)=>{e.d(t,{Zo:()=>u,kt:()=>c});var a=e(7294);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function l(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function i(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?l(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):l(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function s(n,t){if(null==n)return{};var e,a,r=function(n,t){if(null==n)return{};var e,a,r={},l=Object.keys(n);for(a=0;a<l.length;a++)e=l[a],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(n);for(a=0;a<l.length;a++)e=l[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var o=a.createContext({}),p=function(n){var t=a.useContext(o),e=t;return n&&(e="function"==typeof n?n(t):i(i({},t),n)),e},u=function(n){var t=p(n.components);return a.createElement(o.Provider,{value:t},n.children)},g={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,l=n.originalType,o=n.parentName,u=s(n,["components","mdxType","originalType","parentName"]),m=p(e),c=r,y=m["".concat(o,".").concat(c)]||m[c]||g[c]||l;return e?a.createElement(y,i(i({ref:t},u),{},{components:e})):a.createElement(y,i({ref:t},u))}));function c(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var l=e.length,i=new Array(l);i[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=n,s.mdxType="string"==typeof n?n:r,i[1]=s;for(var p=2;p<l;p++)i[p]=e[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,e)}m.displayName="MDXCreateElement"},2850:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>g,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=e(7462),r=(e(7294),e(3905));const l={},i="\u7b2c\u4e8c\u5341\u4e00\u7ae0 \u6570\u7ec4",s={unversionedId:"Books/OnJava8/Arrays",id:"Books/OnJava8/Arrays",title:"\u7b2c\u4e8c\u5341\u4e00\u7ae0 \u6570\u7ec4",description:"\u5728 \u521d\u59cb\u5316\u548c\u6e05\u7406 \u4e00\u7ae0\u7684\u6700\u540e\uff0c\u4f60\u5df2\u7ecf\u5b66\u8fc7\u5982\u4f55\u5b9a\u4e49\u548c\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u7ec4\u3002",source:"@site/docs/Books/OnJava8/21-Arrays.md",sourceDirName:"Books/OnJava8",slug:"/Books/OnJava8/Arrays",permalink:"/docs/Books/OnJava8/Arrays",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/OnJava8/21-Arrays.md",tags:[],version:"current",sidebarPosition:21,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u7b2c\u4e8c\u5341\u7ae0 \u6cdb\u578b",permalink:"/docs/Books/OnJava8/Generics"},next:{title:"\u7b2c\u4e8c\u5341\u4e8c\u7ae0 \u679a\u4e3e",permalink:"/docs/Books/OnJava8/Enumerations"}},o={},p=[{value:"\u6570\u7ec4\u7279\u6027",id:"\u6570\u7ec4\u7279\u6027",level:2},{value:"\u7528\u4e8e\u663e\u793a\u6570\u7ec4\u7684\u5b9e\u7528\u7a0b\u5e8f",id:"\u7528\u4e8e\u663e\u793a\u6570\u7ec4\u7684\u5b9e\u7528\u7a0b\u5e8f",level:3},{value:"\u4e00\u7b49\u5bf9\u8c61",id:"\u4e00\u7b49\u5bf9\u8c61",level:2},{value:"\u8fd4\u56de\u6570\u7ec4",id:"\u8fd4\u56de\u6570\u7ec4",level:2},{value:"\u591a\u7ef4\u6570\u7ec4",id:"\u591a\u7ef4\u6570\u7ec4",level:2},{value:"\u6cdb\u578b\u6570\u7ec4",id:"\u6cdb\u578b\u6570\u7ec4",level:2},{value:"Arrays\u7684fill\u65b9\u6cd5",id:"arrays\u7684fill\u65b9\u6cd5",level:2},{value:"Arrays\u7684setAll\u65b9\u6cd5",id:"arrays\u7684setall\u65b9\u6cd5",level:2},{value:"\u589e\u91cf\u751f\u6210",id:"\u589e\u91cf\u751f\u6210",level:2},{value:"\u968f\u673a\u751f\u6210",id:"\u968f\u673a\u751f\u6210",level:2},{value:"\u6cdb\u578b\u548c\u57fa\u672c\u6570\u7ec4",id:"\u6cdb\u578b\u548c\u57fa\u672c\u6570\u7ec4",level:2},{value:"\u6570\u7ec4\u5143\u7d20\u4fee\u6539",id:"\u6570\u7ec4\u5143\u7d20\u4fee\u6539",level:2},{value:"\u6570\u7ec4\u5e76\u884c",id:"\u6570\u7ec4\u5e76\u884c",level:2},{value:"Arrays\u5de5\u5177\u7c7b",id:"arrays\u5de5\u5177\u7c7b",level:2},{value:"\u6570\u7ec4\u62f7\u8d1d",id:"\u6570\u7ec4\u62f7\u8d1d",level:2},{value:"\u6570\u7ec4\u6bd4\u8f83",id:"\u6570\u7ec4\u6bd4\u8f83",level:2},{value:"\u6d41\u548c\u6570\u7ec4",id:"\u6d41\u548c\u6570\u7ec4",level:2},{value:"\u6570\u7ec4\u6392\u5e8f",id:"\u6570\u7ec4\u6392\u5e8f",level:2},{value:"Arrays.sort \u7684\u4f7f\u7528",id:"arrayssort-\u7684\u4f7f\u7528",level:2},{value:"\u5e76\u884c\u6392\u5e8f",id:"\u5e76\u884c\u6392\u5e8f",level:2},{value:"binarySearch\u4e8c\u5206\u67e5\u627e",id:"binarysearch\u4e8c\u5206\u67e5\u627e",level:2},{value:"parallelPrefix\u5e76\u884c\u524d\u7f00",id:"parallelprefix\u5e76\u884c\u524d\u7f00",level:2},{value:"\u672c\u7ae0\u5c0f\u7ed3",id:"\u672c\u7ae0\u5c0f\u7ed3",level:2}],u={toc:p};function g(n){let{components:t,...e}=n;return(0,r.kt)("wrapper",(0,a.Z)({},u,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u7b2c\u4e8c\u5341\u4e00\u7ae0-\u6570\u7ec4"},"\u7b2c\u4e8c\u5341\u4e00\u7ae0 \u6570\u7ec4"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u5728 ",(0,r.kt)("a",{parentName:"p",href:"./Housekeeping"},"\u521d\u59cb\u5316\u548c\u6e05\u7406")," \u4e00\u7ae0\u7684\u6700\u540e\uff0c\u4f60\u5df2\u7ecf\u5b66\u8fc7\u5982\u4f55\u5b9a\u4e49\u548c\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u7ec4\u3002")),(0,r.kt)("p",null,"\u7b80\u5355\u6765\u770b\uff0c\u6570\u7ec4\u9700\u8981\u4f60\u53bb\u521b\u5efa\u548c\u521d\u59cb\u5316\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u4e0b\u6807\u5bf9\u6570\u7ec4\u5143\u7d20\u8fdb\u884c\u8bbf\u95ee\uff0c\u6570\u7ec4\u7684\u5927\u5c0f\u4e0d\u4f1a\u6539\u53d8\u3002\u5927\u591a\u6570\u65f6\u5019\u4f60\u53ea\u9700\u8981\u77e5\u9053\u8fd9\u4e9b\uff0c\u4f46\u6709\u65f6\u5019\u4f60\u5fc5\u987b\u5728\u6570\u7ec4\u4e0a\u8fdb\u884c\u66f4\u590d\u6742\u7684\u64cd\u4f5c\uff0c\u4f60\u4e5f\u53ef\u80fd\u9700\u8981\u5728\u6570\u7ec4\u548c\u66f4\u52a0\u7075\u6d3b\u7684 ",(0,r.kt)("strong",{parentName:"p"},"\u96c6\u5408")," (Collection)\u4e4b\u95f4\u505a\u51fa\u8bc4\u4f30\u3002\u56e0\u6b64\u672c\u7ae0\u6211\u4eec\u5c06\u5bf9\u6570\u7ec4\u8fdb\u884c\u66f4\u52a0\u6df1\u5165\u7684\u5206\u6790\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6ce8\u610f\uff1a")," \u968f\u7740 Java Collection \u548c Stream \u7c7b\u4e2d\u9ad8\u7ea7\u529f\u80fd\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u65e5\u5e38\u7f16\u7a0b\u4e2d\u4f7f\u7528\u6570\u7ec4\u7684\u9700\u6c42\u4e5f\u5728\u53d8\u5c11\uff0c\u6240\u4ee5\u4f60\u6682\u4e14\u53ef\u4ee5\u653e\u5fc3\u5730\u7565\u8bfb\u751a\u81f3\u8df3\u8fc7\u8fd9\u4e00\u7ae0\u3002\u4f46\u662f\uff0c\u5373\u4f7f\u4f60\u81ea\u5df1\u907f\u514d\u4f7f\u7528\u6570\u7ec4\uff0c\u4e5f\u603b\u4f1a\u6709\u9700\u8981\u9605\u8bfb\u522b\u4eba\u6570\u7ec4\u4ee3\u7801\u7684\u90a3\u4e00\u5929\u3002\u90a3\u65f6\u5019\uff0c\u672c\u7ae0\u4f9d\u7136\u5728\u8fd9\u91cc\u7b49\u7740\u4f60\u6765\u7ffb\u9605\u3002"),(0,r.kt)("h2",{id:"\u6570\u7ec4\u7279\u6027"},"\u6570\u7ec4\u7279\u6027"),(0,r.kt)("p",null,"\u660e\u660e\u8fd8\u6709\u5f88\u591a\u5176\u4ed6\u7684\u529e\u6cd5\u6765\u4fdd\u5b58\u5bf9\u8c61\uff0c\u90a3\u4e48\u662f\u4ec0\u4e48\u4ee4\u6570\u7ec4\u5982\u6b64\u7279\u522b\uff1f"),(0,r.kt)("p",null,"\u5c06\u6570\u7ec4\u548c\u5176\u4ed6\u7c7b\u578b\u7684\u96c6\u5408\u533a\u5206\u5f00\u6765\u7684\u539f\u56e0\u6709\u4e09\uff1a\u6548\u7387\uff0c\u7c7b\u578b\uff0c\u4fdd\u5b58\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u80fd\u529b\u3002\u5728 Java \u4e2d\uff0c\u4f7f\u7528\u6570\u7ec4\u5b58\u50a8\u548c\u968f\u673a\u8bbf\u95ee\u5bf9\u8c61\u5f15\u7528\u5e8f\u5217\u662f\u975e\u5e38\u9ad8\u6548\u7684\u3002\u6570\u7ec4\u662f\u7b80\u5355\u7684\u7ebf\u6027\u5e8f\u5217\uff0c\u8fd9\u4f7f\u5f97\u5bf9\u5143\u7d20\u7684\u8bbf\u95ee\u53d8\u5f97\u975e\u5e38\u5feb\u3002\u7136\u800c\u8fd9\u79cd\u9ad8\u901f\u4e5f\u662f\u6709\u4ee3\u4ef7\u7684\uff0c\u4ee3\u4ef7\u5c31\u662f\u6570\u7ec4\u5bf9\u8c61\u7684\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u4e14\u5728\u8be5\u6570\u7ec4\u7684\u751f\u5b58\u671f\u5185\u4e0d\u80fd\u66f4\u6539\u3002"),(0,r.kt)("p",null,"\u901f\u5ea6\u901a\u5e38\u5e76\u4e0d\u662f\u95ee\u9898\uff0c\u5982\u679c\u6709\u95ee\u9898\uff0c\u4f60\u4fdd\u5b58\u548c\u68c0\u7d22\u5bf9\u8c61\u7684\u65b9\u5f0f\u4e5f\u5f88\u5c11\u662f\u7f6a\u9b41\u7978\u9996\u3002\u4f60\u5e94\u8be5\u603b\u662f\u4ece ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," (\u6765\u81ea ",(0,r.kt)("a",{parentName:"p",href:"./Collections"},"\u96c6\u5408"),")\u5f00\u59cb\uff0c\u5b83\u5c06\u6570\u7ec4\u5c01\u88c5\u8d77\u6765\u3002\u5fc5\u8981\u65f6\uff0c\u5b83\u4f1a\u81ea\u52a8\u5206\u914d\u66f4\u591a\u7684\u6570\u7ec4\u7a7a\u95f4\uff0c\u521b\u5efa\u65b0\u6570\u7ec4\uff0c\u5e76\u5c06\u65e7\u6570\u7ec4\u4e2d\u7684\u5f15\u7528\u79fb\u52a8\u5230\u65b0\u6570\u7ec4\u3002\u8fd9\u79cd\u7075\u6d3b\u6027\u9700\u8981\u5f00\u9500\uff0c\u6240\u4ee5\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \u7684\u6548\u7387\u4e0d\u5982\u6570\u7ec4\u3002\u5728\u6781\u5c11\u7684\u60c5\u51b5\u4e0b\u6548\u7387\u4f1a\u6210\u4e3a\u95ee\u9898\uff0c\u6240\u4ee5\u8fd9\u79cd\u65f6\u5019\u4f60\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528\u6570\u7ec4\u3002"),(0,r.kt)("p",null,"\u6570\u7ec4\u548c\u96c6\u5408(Collections)\u90fd\u4e0d\u80fd\u6ee5\u7528\u3002\u4e0d\u7ba1\u4f60\u4f7f\u7528\u6570\u7ec4\u8fd8\u662f\u96c6\u5408\uff0c\u5982\u679c\u4f60\u8d8a\u754c\uff0c\u4f60\u90fd\u4f1a\u5f97\u5230\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"RuntimeException")," \u7684\u5f02\u5e38\u63d0\u9192\uff0c\u8fd9\u8868\u660e\u4f60\u7684\u7a0b\u5e8f\u4e2d\u5b58\u5728\u9519\u8bef\u3002"),(0,r.kt)("p",null,"\u5728\u6cdb\u578b\u524d\uff0c\u5176\u4ed6\u7684\u96c6\u5408\u7c7b\u4ee5\u4e00\u79cd\u5bbd\u6cdb\u7684\u65b9\u5f0f\u5904\u7406\u5bf9\u8c61\uff08\u5c31\u597d\u50cf\u5b83\u4eec\u6ca1\u6709\u7279\u5b9a\u7c7b\u578b\u4e00\u6837\uff09\u3002\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u4e9b\u96c6\u5408\u7c7b\u628a\u4fdd\u5b58\u5bf9\u8c61\u7684\u7c7b\u578b\u9ed8\u8ba4\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Object"),"\uff0c\u4e5f\u5c31\u662f Java \u4e2d\u6240\u6709\u7c7b\u7684\u57fa\u7c7b\u3002\u800c\u6570\u7ec4\u662f\u4f18\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"\u9884\u6cdb\u578b")," (pre-generic)\u96c6\u5408\u7c7b\u7684\uff0c\u56e0\u4e3a\u4f60\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\u5c31\u53ef\u4ee5\u4fdd\u5b58\u7279\u5b9a\u7c7b\u578b\u7684\u6570\u636e\u3002\u8fd9\u610f\u5473\u7740\u4f60\u83b7\u5f97\u4e86\u4e00\u4e2a\u7f16\u8bd1\u65f6\u7684\u7c7b\u578b\u68c0\u67e5\uff0c\u800c\u8fd9\u53ef\u4ee5\u9632\u6b62\u4f60\u63d2\u5165\u9519\u8bef\u7684\u6570\u636e\u7c7b\u578b\uff0c\u6216\u8005\u641e\u9519\u4f60\u6b63\u5728\u63d0\u53d6\u7684\u6570\u636e\u7c7b\u578b\u3002"),(0,r.kt)("p",null,"\u5f53\u7136\uff0c\u4e0d\u7ba1\u5728\u7f16\u8bd1\u65f6\u8fd8\u662f\u8fd0\u884c\u65f6\uff0cJava\u90fd\u4f1a\u963b\u6b62\u4f60\u72af\u5411\u5bf9\u8c61\u53d1\u9001\u4e0d\u6b63\u786e\u6d88\u606f\u7684\u9519\u8bef\u3002\u7136\u800c\u4e0d\u7ba1\u600e\u6837\uff0c\u4f7f\u7528\u6570\u7ec4\u90fd\u4e0d\u4f1a\u6709\u66f4\u5927\u7684\u98ce\u9669\u3002\u6bd4\u8f83\u597d\u7684\u5730\u65b9\u5728\u4e8e\uff0c\u5982\u679c\u7f16\u8bd1\u5668\u62a5\u9519\uff0c\u6700\u7ec8\u7684\u7528\u6237\u66f4\u5bb9\u6613\u7406\u89e3\u629b\u51fa\u5f02\u5e38\u7684\u542b\u4e49\u3002"),(0,r.kt)("p",null,"\u4e00\u4e2a\u6570\u7ec4\u53ef\u4ee5\u4fdd\u5b58\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u800c\u4e00\u4e2a\u9884\u6cdb\u578b\u7684\u96c6\u5408\u4e0d\u53ef\u4ee5\u3002\u7136\u800c\u5bf9\u4e8e\u6cdb\u578b\u800c\u8a00\uff0c\u96c6\u5408\u53ef\u4ee5\u6307\u5b9a\u548c\u68c0\u67e5\u4ed6\u4eec\u4fdd\u5b58\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u800c\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},"\u81ea\u52a8\u88c5\u7bb1")," (autoboxing)\u673a\u5236\uff0c\u96c6\u5408\u8868\u73b0\u5730\u5c31\u50cf\u5b83\u4eec\u53ef\u4ee5\u4fdd\u5b58\u57fa\u672c\u6570\u636e\u7c7b\u578b\u4e00\u6837\uff0c\u56e0\u4e3a\u8fd9\u79cd\u8f6c\u6362\u662f\u81ea\u52a8\u7684\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u7ed9\u51fa\u4e00\u4f8b\u7528\u4e8e\u6bd4\u8f83\u6570\u7ec4\u548c\u6cdb\u578b\u96c6\u5408\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// arrays/CollectionComparison.java\n// (c)2017 MindView LLC: see Copyright.txt\n// We make no guarantees that this code is fit for any purpose.\n// Visit http://OnJava8.com for more book information.\nimport java.util.*;\nimport onjava.*;\nimport static onjava.ArrayShow.*;\n\nclass BerylliumSphere {\n  private static long counter;\n  private final long id = counter++;\n  @Override\n  public String toString() {\n    return "Sphere " + id;\n  }\n}\n\npublic class CollectionComparison {\n  public static void main(String[] args) {\n    BerylliumSphere[] spheres =\n      new BerylliumSphere[10];\n    for(int i = 0; i < 5; i++)\n      spheres[i] = new BerylliumSphere();\n    show(spheres);\n    System.out.println(spheres[4]);\n\n    List<BerylliumSphere> sphereList = Suppliers.create(\n      ArrayList::new, BerylliumSphere::new, 5);\n    System.out.println(sphereList);\n    System.out.println(sphereList.get(4));\n\n    int[] integers = { 0, 1, 2, 3, 4, 5 };\n    show(integers);\n    System.out.println(integers[4]);\n\n    List<Integer> intList = new ArrayList<>(\n      Arrays.asList(0, 1, 2, 3, 4, 5));\n    intList.add(97);\n    System.out.println(intList);\n    System.out.println(intList.get(4));\n  }\n}\n/* Output:\n[Sphere 0, Sphere 1, Sphere 2, Sphere 3, Sphere 4,\nnull, null, null, null, null]\nSphere 4\n[Sphere 5, Sphere 6, Sphere 7, Sphere 8, Sphere 9]\nSphere 9\n[0, 1, 2, 3, 4, 5]\n4\n[0, 1, 2, 3, 4, 5, 97]\n4\n*/\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Suppliers.create()")," \u65b9\u6cd5\u5728",(0,r.kt)("a",{parentName:"p",href:"./Generics"},"\u6cdb\u578b"),"\u4e00\u7ae0\u4e2d\u88ab\u5b9a\u4e49\u3002\u4e0a\u9762\u4e24\u79cd\u4fdd\u5b58\u5bf9\u8c61\u7684\u65b9\u5f0f\u90fd\u662f\u6709\u7c7b\u578b\u68c0\u67e5\u7684\uff0c\u552f\u4e00\u6bd4\u8f83\u660e\u663e\u7684\u533a\u522b\u5c31\u662f\u6570\u7ec4\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"[ ]")," \u6765\u968f\u673a\u5b58\u53d6\u5143\u7d20\uff0c\u800c\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"List")," \u4f7f\u7528\u8bf8\u5982 ",(0,r.kt)("inlineCode",{parentName:"p"},"add()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u7b49\u65b9\u6cd5\u3002\u6570\u7ec4\u548c ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \u4e4b\u95f4\u7684\u76f8\u4f3c\u662f\u8bbe\u8ba1\u8005\u6709\u610f\u4e3a\u4e4b\uff0c\u6240\u4ee5\u5728\u6982\u5ff5\u4e0a\uff0c\u4e24\u8005\u5f88\u5bb9\u6613\u5207\u6362\u3002\u4f46\u662f\u5c31\u50cf\u4f60\u5728",(0,r.kt)("a",{parentName:"p",href:"./Collections"},"\u96c6\u5408"),"\u4e2d\u770b\u5230\u7684\uff0c\u96c6\u5408\u7684\u529f\u80fd\u660e\u663e\u591a\u4e8e\u6570\u7ec4\u3002\u968f\u7740 Java \u81ea\u52a8\u88c5\u7bb1\u6280\u672f\u7684\u51fa\u73b0\uff0c\u901a\u8fc7\u96c6\u5408\u4f7f\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b\u51e0\u4e4e\u548c\u901a\u8fc7\u6570\u7ec4\u4e00\u6837\u7b80\u5355\u3002\u6570\u7ec4\u552f\u4e00\u5269\u4e0b\u7684\u4f18\u52bf\u5c31\u662f\u6548\u7387\u3002\u7136\u800c\uff0c\u5f53\u4f60\u89e3\u51b3\u4e00\u4e2a\u66f4\u52a0\u666e\u904d\u7684\u95ee\u9898\u65f6\uff0c\u6570\u7ec4\u53ef\u80fd\u9650\u5236\u592a\u591a\uff0c\u8fd9\u79cd\u60c5\u5f62\u4e0b\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528\u96c6\u5408\u7c7b\u3002"),(0,r.kt)("h3",{id:"\u7528\u4e8e\u663e\u793a\u6570\u7ec4\u7684\u5b9e\u7528\u7a0b\u5e8f"},"\u7528\u4e8e\u663e\u793a\u6570\u7ec4\u7684\u5b9e\u7528\u7a0b\u5e8f"),(0,r.kt)("p",null,"\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5904\u5904\u90fd\u8981\u663e\u793a\u6570\u7ec4\u3002Java \u63d0\u4f9b\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Arrays.toString()")," \u6765\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a\u53ef\u8bfb\u5b57\u7b26\u4e32\uff0c\u7136\u540e\u53ef\u4ee5\u5728\u63a7\u5236\u53f0\u4e0a\u663e\u793a\u3002\u7136\u800c\u8fd9\u79cd\u65b9\u5f0f\u89c6\u89c9\u4e0a\u566a\u97f3\u592a\u5927\uff0c\u6240\u4ee5\u6211\u4eec\u521b\u5efa\u4e00\u4e2a\u5c0f\u7684\u5e93\u6765\u5b8c\u6210\u8fd9\u9879\u5de5\u4f5c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// onjava/ArrayShow.java\n// (c)2017 MindView LLC: see Copyright.txt\n// We make no guarantees that this code is fit for any purpose.\n// Visit http://OnJava8.com for more book information.\npackage onjava;\nimport java.util.*;\n\npublic interface ArrayShow {\n  static void show(Object[] a) {\n    System.out.println(Arrays.toString(a));\n  }\n  static void show(boolean[] a) {\n    System.out.println(Arrays.toString(a));\n  }\n  static void show(byte[] a) {\n    System.out.println(Arrays.toString(a));\n  }\n  static void show(char[] a) {\n    System.out.println(Arrays.toString(a));\n  }\n  static void show(short[] a) {\n    System.out.println(Arrays.toString(a));\n  }\n  static void show(int[] a) {\n    System.out.println(Arrays.toString(a));\n  }\n  static void show(long[] a) {\n    System.out.println(Arrays.toString(a));\n  }\n  static void show(float[] a) {\n    System.out.println(Arrays.toString(a));\n  }\n  static void show(double[] a) {\n    System.out.println(Arrays.toString(a));\n  }\n  // Start with a description:\n  static void show(String info, Object[] a) {\n    System.out.print(info + ": ");\n    show(a);\n  }\n  static void show(String info, boolean[] a) {\n    System.out.print(info + ": ");\n    show(a);\n  }\n  static void show(String info, byte[] a) {\n    System.out.print(info + ": ");\n    show(a);\n  }\n  static void show(String info, char[] a) {\n    System.out.print(info + ": ");\n    show(a);\n  }\n  static void show(String info, short[] a) {\n    System.out.print(info + ": ");\n    show(a);\n  }\n  static void show(String info, int[] a) {\n    System.out.print(info + ": ");\n    show(a);\n  }\n  static void show(String info, long[] a) {\n    System.out.print(info + ": ");\n    show(a);\n  }\n  static void show(String info, float[] a) {\n    System.out.print(info + ": ");\n    show(a);\n  }\n  static void show(String info, double[] a) {\n    System.out.print(info + ": ");\n    show(a);\n  }\n}\n')),(0,r.kt)("p",null,"\u7b2c\u4e00\u4e2a\u65b9\u6cd5\u9002\u7528\u4e8e\u5bf9\u8c61\u6570\u7ec4\uff0c\u5305\u62ec\u90a3\u4e9b\u5305\u88c5\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u6570\u7ec4\u3002\u6240\u6709\u7684\u65b9\u6cd5\u91cd\u8f7d\u5bf9\u4e8e\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u662f\u5fc5\u8981\u7684\u3002"),(0,r.kt)("p",null,"\u7b2c\u4e8c\u7ec4\u91cd\u8f7d\u65b9\u6cd5\u53ef\u4ee5\u8ba9\u4f60\u663e\u793a\u5e26\u6709\u4fe1\u606f ",(0,r.kt)("strong",{parentName:"p"},"\u5b57\u7b26\u4e32")," \u524d\u7f00\u7684\u6570\u7ec4\u3002"),(0,r.kt)("p",null,"\u4e3a\u4e86\u7b80\u5355\u8d77\u89c1\uff0c\u4f60\u901a\u5e38\u53ef\u4ee5\u9759\u6001\u5730\u5bfc\u5165\u5b83\u4eec\u3002"),(0,r.kt)("h2",{id:"\u4e00\u7b49\u5bf9\u8c61"},"\u4e00\u7b49\u5bf9\u8c61"),(0,r.kt)("p",null,"\u4e0d\u7ba1\u4f60\u4f7f\u7528\u7684\u4ec0\u4e48\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u96c6\u5b9e\u9645\u4e0a\u90fd\u662f\u5bf9\u5806\u4e2d\u771f\u6b63\u5bf9\u8c61\u7684\u5f15\u7528\u3002\u6570\u7ec4\u662f\u4fdd\u5b58\u6307\u5411\u5176\u4ed6\u5bf9\u8c61\u7684\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u6570\u7ec4\u53ef\u4ee5\u9690\u5f0f\u5730\u521b\u5efa\uff0c\u4f5c\u4e3a\u6570\u7ec4\u521d\u59cb\u5316\u8bed\u6cd5\u7684\u4e00\u90e8\u5206\uff0c\u4e5f\u53ef\u4ee5\u663e\u5f0f\u5730\u521b\u5efa\uff0c\u6bd4\u5982\u4f7f\u7528\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"new")," \u8868\u8fbe\u5f0f\u3002\u6570\u7ec4\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\uff08\u4e8b\u5b9e\u4e0a\uff0c\u4f60\u552f\u4e00\u53ef\u4ee5\u4f7f\u7528\u7684\u65b9\u6cd5\uff09\u5c31\u662f\u53ea\u8bfb\u7684 ",(0,r.kt)("strong",{parentName:"p"},"length")," \u6210\u5458\u51fd\u6570\uff0c\u5b83\u80fd\u544a\u8bc9\u4f60\u6570\u7ec4\u5bf9\u8c61\u4e2d\u53ef\u4ee5\u5b58\u50a8\u591a\u5c11\u5143\u7d20\u3002",(0,r.kt)("strong",{parentName:"p"},"[ ]")," \u8bed\u6cd5\u662f\u4f60\u8bbf\u95ee\u6570\u7ec4\u5bf9\u8c61\u7684\u552f\u4e00\u65b9\u5f0f\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u7684\u4f8b\u5b50\u603b\u7ed3\u4e86\u521d\u59cb\u5316\u6570\u7ec4\u7684\u591a\u79cd\u65b9\u5f0f\uff0c\u5e76\u4e14\u5c55\u793a\u4e86\u5982\u4f55\u7ed9\u4e0d\u540c\u7684\u6570\u7ec4\u5bf9\u8c61\u5206\u914d\u6570\u7ec4\u5f15\u7528\u3002\u540c\u65f6\u4e5f\u53ef\u4ee5\u770b\u51fa\u5bf9\u8c61\u6570\u7ec4\u548c\u57fa\u5143\u6570\u7ec4\u5728\u4f7f\u7528\u4e0a\u662f\u5b8c\u5168\u76f8\u540c\u7684\u3002\u552f\u4e00\u7684\u4e0d\u540c\u4e4b\u5904\u5c31\u662f\u5bf9\u8c61\u6570\u7ec4\u5b58\u50a8\u7684\u662f\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u800c\u57fa\u5143\u6570\u7ec4\u5219\u76f4\u63a5\u5b58\u50a8\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// arrays/ArrayOptions.java\n// Initialization & re-assignment of arrays\nimport java.util.*;\nimport static onjava.ArrayShow.*;\n\npublic class ArrayOptions {\n  public static void main(String[] args) {\n    // Arrays of objects:\n    BerylliumSphere[] a; // Uninitialized local\n    BerylliumSphere[] b = new BerylliumSphere[5];\n\n    // The references inside the array are\n    // automatically initialized to null:\n    show("b", b);\n    BerylliumSphere[] c = new BerylliumSphere[4];\n    for(int i = 0; i < c.length; i++)\n      if(c[i] == null) // Can test for null reference\n        c[i] = new BerylliumSphere();\n\n    // Aggregate initialization:\n    BerylliumSphere[] d = {\n      new BerylliumSphere(),\n      new BerylliumSphere(),\n      new BerylliumSphere()\n    };\n\n    // Dynamic aggregate initialization:\n    a = new BerylliumSphere[]{\n      new BerylliumSphere(), new BerylliumSphere(),\n    };\n    // (Trailing comma is optional)\n\n    System.out.println("a.length = " + a.length);\n    System.out.println("b.length = " + b.length);\n    System.out.println("c.length = " + c.length);\n    System.out.println("d.length = " + d.length);\n    a = d;\n    System.out.println("a.length = " + a.length);\n\n    // Arrays of primitives:\n    int[] e; // Null reference\n    int[] f = new int[5];\n\n    // The primitives inside the array are\n    // automatically initialized to zero:\n    show("f", f);\n    int[] g = new int[4];\n    for(int i = 0; i < g.length; i++)\n      g[i] = i*i;\n    int[] h = { 11, 47, 93 };\n\n    //  Compile error: variable e not initialized:\n    //- System.out.println("e.length = " + e.length);\n    System.out.println("f.length = " + f.length);\n    System.out.println("g.length = " + g.length);\n    System.out.println("h.length = " + h.length);\n    e = h;\n    System.out.println("e.length = " + e.length);\n    e = new int[]{ 1, 2 };\n    System.out.println("e.length = " + e.length);\n  }\n}\n/* Output:\nb: [null, null, null, null, null]\na.length = 2\nb.length = 5\nc.length = 4\nd.length = 3\na.length = 3\nf: [0, 0, 0, 0, 0]\nf.length = 5\ng.length = 4\nh.length = 3\ne.length = 3\ne.length = 2\n*/\n')),(0,r.kt)("p",null,"\u6570\u7ec4 ",(0,r.kt)("strong",{parentName:"p"},"a")," \u662f\u4e00\u4e2a\u672a\u521d\u59cb\u5316\u7684\u672c\u5730\u53d8\u91cf\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u5141\u8bb8\u4f60\u4f7f\u7528\u8fd9\u4e2a\u5f15\u7528\u76f4\u5230\u4f60\u6b63\u786e\u5730\u5bf9\u5176\u8fdb\u884c\u521d\u59cb\u5316\u3002\u6570\u7ec4 ",(0,r.kt)("strong",{parentName:"p"},"b")," \u88ab\u521d\u59cb\u5316\u6210\u4e00\u7cfb\u5217\u6307\u5411 ",(0,r.kt)("strong",{parentName:"p"},"BerylliumSphere")," \u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4f46\u662f\u5e76\u6ca1\u6709\u771f\u6b63\u7684 ",(0,r.kt)("strong",{parentName:"p"},"BerylliumSphere")," \u5bf9\u8c61\u88ab\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u3002\u5c3d\u7ba1\u4f60\u4ecd\u7136\u53ef\u4ee5\u83b7\u5f97\u8fd9\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"b")," \u6307\u5411\u5408\u6cd5\u5bf9\u8c61\u3002\u8fd9\u5e26\u6765\u4e86\u4e00\u4e2a\u5c0f\u95ee\u9898\uff1a\u4f60\u65e0\u6cd5\u627e\u51fa\u5230\u5e95\u6709\u591a\u5c11\u5143\u7d20\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\uff0c\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"length")," \u53ea\u80fd\u544a\u8bc9\u4f60\u6570\u7ec4\u53ef\u4ee5\u5b58\u50a8\u591a\u5c11\u5143\u7d20\uff1b\u8fd9\u5c31\u662f\u8bf4\uff0c\u6570\u7ec4\u5bf9\u8c61\u7684\u5927\u5c0f\u5e76\u4e0d\u662f\u771f\u6b63\u5b58\u50a8\u5728\u6570\u7ec4\u4e2d\u5bf9\u8c61\u7684\u4e2a\u6570\u3002\u7136\u800c\uff0c\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u6570\u7ec4\u5bf9\u8c61\uff0c\u5176\u5f15\u7528\u5c06\u81ea\u52a8\u521d\u59cb\u5316\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"null"),"\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u901a\u8fc7\u68c0\u67e5\u7279\u5b9a\u6570\u7ec4\u5143\u7d20\u4e2d\u7684\u5f15\u7528\u662f\u5426\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"null")," \u6765\u5224\u65ad\u5176\u4e2d\u662f\u5426\u6709\u5bf9\u8c61\u3002\u57fa\u5143\u6570\u7ec4\u4e5f\u6709\u7c7b\u4f3c\u7684\u673a\u5236\uff0c\u6bd4\u5982\u81ea\u52a8\u5c06\u6570\u503c\u7c7b\u578b\u521d\u59cb\u5316\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"0"),"\uff0cchar \u578b\u521d\u59cb\u5316\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"(char)0"),"\uff0c\u5e03\u5c14\u7c7b\u578b\u521d\u59cb\u5316\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"false"),"\u3002"),(0,r.kt)("p",null,"\u6570\u7ec4 ",(0,r.kt)("strong",{parentName:"p"},"c")," \u5c55\u793a\u4e86\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61\u540e\u7ed9\u6570\u7ec4\u4e2d\u5404\u5143\u7d20\u5206\u914d ",(0,r.kt)("strong",{parentName:"p"},"BerylliumSphere")," \u5bf9\u8c61\u3002\u6570\u7ec4 ",(0,r.kt)("strong",{parentName:"p"},"d")," \u5c55\u793a\u4e86\u521b\u5efa\u6570\u7ec4\u5bf9\u8c61\u7684\u805a\u5408\u521d\u59cb\u5316\u8bed\u6cd5\uff08\u9690\u5f0f\u5730\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"new")," \u5728\u5806\u4e2d\u521b\u5efa\u5bf9\u8c61\uff0c\u5c31\u50cf ",(0,r.kt)("strong",{parentName:"p"},"c")," \u4e00\u6837\uff09\u5e76\u4e14\u521d\u59cb\u5316\u6210 ",(0,r.kt)("strong",{parentName:"p"},"BeryliumSphere")," \u5bf9\u8c61\uff0c\u8fd9\u4e00\u5207\u90fd\u5728\u4e00\u6761\u8bed\u53e5\u4e2d\u5b8c\u6210\u3002"),(0,r.kt)("p",null,"\u4e0b\u4e00\u4e2a\u6570\u7ec4\u521d\u59cb\u5316\u53ef\u4ee5\u88ab\u770b\u505a\u662f\u4e00\u4e2a\u201c\u52a8\u6001\u805a\u5408\u521d\u59cb\u5316\u201d\u3002 ",(0,r.kt)("strong",{parentName:"p"},"d")," \u4f7f\u7528\u7684\u805a\u5408\u521d\u59cb\u5316\u5fc5\u987b\u5728 ",(0,r.kt)("strong",{parentName:"p"},"d")," \u5b9a\u4e49\u5904\u4f7f\u7528\uff0c\u4f46\u662f\u4f7f\u7528\u7b2c\u4e8c\u79cd\u8bed\u6cd5\uff0c\u4f60\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u521b\u5efa\u548c\u521d\u59cb\u5316\u6570\u7ec4\u5bf9\u8c61\u3002\u4f8b\u5982\uff0c\u5047\u8bbe ",(0,r.kt)("strong",{parentName:"p"},"hide()")," \u662f\u4e00\u4e2a\u9700\u8981\u4f7f\u7528\u4e00\u7cfb\u5217\u7684 ",(0,r.kt)("strong",{parentName:"p"},"BeryliumSphere"),"\u5bf9\u8c61\u3002\u4f60\u53ef\u4ee5\u8fd9\u6837\u8c03\u7528\u5b83\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"hide(d);\n")),(0,r.kt)("p",null,"\u4f60\u4e5f\u53ef\u4ee5\u52a8\u6001\u5730\u521b\u5efa\u4f60\u7528\u4f5c\u53c2\u6570\u4f20\u9012\u7684\u6570\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"hide(new BerylliumSphere[]{\n    new BerlliumSphere(),\n    new BerlliumSphere()\n});\n")),(0,r.kt)("p",null,"\u5f88\u591a\u60c5\u51b5\u4e0b\u8fd9\u79cd\u8bed\u6cd5\u5199\u4ee3\u7801\u66f4\u52a0\u65b9\u4fbf\u3002"),(0,r.kt)("p",null,"\u8868\u8fbe\u5f0f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"a = d;\n")),(0,r.kt)("p",null,"\u663e\u793a\u4e86\u4f60\u5982\u4f55\u83b7\u53d6\u6307\u5411\u4e00\u4e2a\u6570\u7ec4\u5bf9\u8c61\u7684\u5f15\u7528\u5e76\u5c06\u5176\u5206\u914d\u7ed9\u53e6\u4e00\u4e2a\u6570\u7ec4\u5bf9\u8c61\u3002\u5c31\u50cf\u4f60\u53ef\u4ee5\u5904\u7406\u5176\u4ed6\u7c7b\u578b\u7684\u5bf9\u8c61\u5f15\u7528\u3002\u73b0\u5728 ",(0,r.kt)("strong",{parentName:"p"},"a")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"d")," \u90fd\u6307\u5411\u4e86\u5806\u4e2d\u7684\u540c\u4e00\u4e2a\u6570\u7ec4\u5bf9\u8c61\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ArrayOptions.java")," \u7684\u7b2c\u4e8c\u90e8\u5206\u5c55\u793a\u4e86\u57fa\u5143\u6570\u7ec4\u7684\u8bed\u6cd5\u5c31\u50cf\u5bf9\u8c61\u6570\u7ec4\u4e00\u6837\uff0c\u9664\u4e86\u57fa\u5143\u6570\u7ec4\u76f4\u63a5\u4fdd\u5b58\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u503c\u3002"),(0,r.kt)("h2",{id:"\u8fd4\u56de\u6570\u7ec4"},"\u8fd4\u56de\u6570\u7ec4"),(0,r.kt)("p",null,"\u5047\u8bbe\u4f60\u5199\u4e86\u4e00\u4e2a\u65b9\u6cd5\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u4e0d\u662f\u8fd4\u56de\u4e00\u4e2a\u5143\u7d20\uff0c\u800c\u662f\u8fd4\u56de\u591a\u4e2a\u5143\u7d20\u3002\u5bf9 C++/C \u8fd9\u6837\u7684\u8bed\u8a00\u6765\u8bf4\u8fd9\u662f\u5f88\u56f0\u96be\u7684\uff0c\u56e0\u4e3a\u4f60\u65e0\u6cd5\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u53ea\u80fd\u662f\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u6570\u7ec4\u7684\u6307\u9488\u3002\u8fd9\u4f1a\u5e26\u6765\u4e00\u4e9b\u95ee\u9898\uff0c\u56e0\u4e3a\u5bf9\u6570\u7ec4\u751f\u5b58\u671f\u7684\u63a7\u5236\u53d8\u5f97\u5f88\u6df7\u4e71\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5185\u5b58\u6cc4\u9732\u3002"),(0,r.kt)("p",null,"\u800c\u5728 Java \u4e2d\uff0c\u4f60\u53ea\u9700\u8fd4\u56de\u6570\u7ec4\uff0c\u4f60\u6c38\u8fdc\u4e0d\u7528\u4e3a\u6570\u7ec4\u62c5\u5fc3\uff0c\u53ea\u8981\u4f60\u9700\u8981\u5b83\uff0c\u5b83\u5c31\u53ef\u7528\uff0c\u5783\u573e\u6536\u96c6\u5668\u4f1a\u5728\u4f60\u7528\u5b8c\u540e\u628a\u5b83\u6e05\u7406\u5e72\u51c0\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\uff0c\u6211\u4eec\u8fd4\u56de\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"\u5b57\u7b26\u4e32")," \u6570\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},'// arrays/IceCreamFlavors.java\n// Returning arrays from methods\nimport java.util.*;\nimport static onjava.ArrayShow.*;\n\npublic class IceCreamFlavors {\n  private static SplittableRandom rand =\n    new SplittableRandom(47);\n  static final String[] FLAVORS = {\n    "Chocolate", "Strawberry", "Vanilla Fudge Swirl",\n    "Mint Chip", "Mocha Almond Fudge", "Rum Raisin",\n    "Praline Cream", "Mud Pie"\n  };\n  public static String[] flavorSet(int n) {\n    if(n > FLAVORS.length)\n      throw new IllegalArgumentException("Set too big");\n    String[] results = new String[n];\n    boolean[] picked = new boolean[FLAVORS.length];\n    for(int i = 0; i < n; i++) {\n      int t;\n      do\n        t = rand.nextInt(FLAVORS.length);\n      while(picked[t]);\n      results[i] = FLAVORS[t];\n      picked[t] = true;\n    }\n    return results;\n  }\n  public static void main(String[] args) {\n    for(int i = 0; i < 7; i++)\n      show(flavorSet(3));\n  }\n}\n/* Output:\n[Praline Cream, Mint Chip, Vanilla Fudge Swirl]\n[Strawberry, Vanilla Fudge Swirl, Mud Pie]\n[Chocolate, Strawberry, Vanilla Fudge Swirl]\n[Rum Raisin, Praline Cream, Chocolate]\n[Mint Chip, Rum Raisin, Mocha Almond Fudge]\n[Mocha Almond Fudge, Mud Pie, Vanilla Fudge Swirl]\n[Mocha Almond Fudge, Mud Pie, Mint Chip]\n*/\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"flavorset()")," \u521b\u5efa\u540d\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"results")," \u7684 ",(0,r.kt)("strong",{parentName:"p"},"String")," \u7c7b\u578b\u7684\u6570\u7ec4\u3002 \u8fd9\u4e2a\u6570\u7ec4\u7684\u5927\u5c0f ",(0,r.kt)("strong",{parentName:"p"},"n")," \u53d6\u51b3\u4e8e\u4f60\u4f20\u8fdb\u65b9\u6cd5\u7684\u53c2\u6570\u3002\u7136\u540e\u4ece\u6570\u7ec4 ",(0,r.kt)("strong",{parentName:"p"},"FLAVORS")," \u4e2d\u968f\u673a\u9009\u62e9 flavors \u5e76\u4e14\u628a\u5b83\u4eec\u653e\u8fdb ",(0,r.kt)("strong",{parentName:"p"},"results")," \u91cc\u5e76\u8fd4\u56de\u3002\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\u5c31\u50cf\u8fd4\u56de\u5176\u4ed6\u4efb\u4f55\u5bf9\u8c61\u4e00\u6837\uff0c\u5b9e\u9645\u4e0a\u8fd4\u56de\u7684\u662f\u5f15\u7528\u3002\u6570\u7ec4\u662f\u5728 ",(0,r.kt)("strong",{parentName:"p"},"flavorSet()")," \u4e2d\u6216\u8005\u662f\u5728\u5176\u4ed6\u4ec0\u4e48\u5730\u65b9\u521b\u5efa\u7684\u5e76\u4e0d\u91cd\u8981\u3002\u5783\u573e\u6536\u96c6\u5668\u4f1a\u6e05\u7406\u4f60\u7528\u5b8c\u7684\u6570\u7ec4\uff0c\u4f60\u9700\u8981\u7684\u6570\u7ec4\u5219\u4f1a\u4fdd\u7559\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u4f60\u5fc5\u987b\u8981\u8fd4\u56de\u4e00\u7cfb\u5217\u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7d20\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("a",{parentName:"p",href:"./Generics"},"\u6cdb\u578b")," \u4e2d\u4ecb\u7ecd\u7684 ",(0,r.kt)("strong",{parentName:"p"},"\u5143\u7ec4")," \u3002"),(0,r.kt)("p",null,"\u6ce8\u610f\uff0c\u5f53 ",(0,r.kt)("strong",{parentName:"p"},"flavorSet()")," \u968f\u673a\u9009\u62e9 flavors\uff0c\u5b83\u5e94\u8be5\u786e\u4fdd\u67d0\u4e2a\u7279\u5b9a\u7684\u9009\u9879\u6ca1\u88ab\u9009\u4e2d\u3002\u8fd9\u5728\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"do")," \u5faa\u73af\u4e2d\u6267\u884c\uff0c\u5b83\u5c06\u4e00\u76f4\u505a\u51fa\u968f\u673a\u9009\u62e9\u76f4\u5230\u5b83\u53d1\u73b0\u4e00\u4e2a\u5143\u7d20\u4e0d\u5728 ",(0,r.kt)("strong",{parentName:"p"},"picked")," \u6570\u7ec4\u4e2d\u3002\uff08\u4e00\u4e2a\u5b57\u7b26\u4e32"),(0,r.kt)("p",null,"\u6bd4\u8f83\u5c06\u663e\u793a\u51fa\u968f\u673a\u9009\u4e2d\u7684\u5143\u7d20\u662f\u4e0d\u662f\u5df2\u7ecf\u5b58\u5728\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"results")," \u6570\u7ec4\u4e2d\uff09\u3002\u5982\u679c\u6210\u529f\u4e86\uff0c\u5b83\u5c06\u6dfb\u52a0\u6761\u76ee\u5e76\u4e14\u5bfb\u627e\u4e0b\u4e00\u4e2a\uff08 ",(0,r.kt)("strong",{parentName:"p"},"i")," \u9012\u589e\uff09\u3002\u8f93\u51fa\u7ed3\u679c\u663e\u793a ",(0,r.kt)("strong",{parentName:"p"},"flavorSet()")," \u6bcf\u4e00\u6b21\u90fd\u662f\u6309\u7167\u968f\u673a\u987a\u5e8f\u9009\u62e9 flavors\u3002"),(0,r.kt)("p",null,"\u4e00\u76f4\u5230\u73b0\u5728\uff0c\u968f\u673a\u6570\u90fd\u662f\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},"java.util.Random")," \u7c7b\u751f\u6210\u7684\uff0c\u8fd9\u4e2a\u7c7b\u4ece Java 1.0 \u5c31\u6709\uff0c\u751a\u81f3\u66f4\u65b0\u8fc7\u4ee5\u63d0\u4f9b Java 8 \u6d41\u3002\u73b0\u5728\u6211\u4eec\u53ef\u4ee5\u4ecb\u7ecd Java 8 \u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"SplittableRandom")," ,\u5b83\u4e0d\u4ec5\u80fd\u5728\u5e76\u884c\u64cd\u4f5c\u4f7f\u7528\uff08\u4f60\u6700\u7ec8\u4f1a\u5b66\u5230\uff09\uff0c\u800c\u4e14\u63d0\u4f9b\u4e86\u4e00\u4e2a\u9ad8\u8d28\u91cf\u7684\u968f\u673a\u6570\u3002\u8fd9\u672c\u4e66\u7684\u5269\u4f59\u90e8\u5206\u90fd\u4f7f\u7528  ",(0,r.kt)("strong",{parentName:"p"},"SplittableRandom")," \u3002"),(0,r.kt)("h2",{id:"\u591a\u7ef4\u6570\u7ec4"},"\u591a\u7ef4\u6570\u7ec4"),(0,r.kt)("p",null,"\u8981\u521b\u5efa\u591a\u7ef4\u7684\u57fa\u5143\u6570\u7ec4\uff0c\u4f60\u8981\u7528\u5927\u62ec\u53f7\u6765\u754c\u5b9a\u6570\u7ec4\u4e2d\u7684\u5411\u91cf\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"// arrays/MultidimensionalPrimitiveArray.java\nimport java.util.*;\n\npublic class MultidimensionalPrimitiveArray {\n  public static void main(String[] args) {\n    int[][] a = {\n      { 1, 2, 3, },\n      { 4, 5, 6, },\n    };\n    System.out.println(Arrays.deepToString(a));\n  }\n}\n/* Output:\n[[1, 2, 3], [4, 5, 6]]\n*/\u3002\n")),(0,r.kt)("p",null,"\u6bcf\u4e2a\u5d4c\u5957\u7684\u5927\u62ec\u53f7\u90fd\u4ee3\u8868\u4e86\u6570\u7ec4\u7684\u4e00\u4e2a\u7ef4\u5ea6\u3002"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u4f8b\u5b50\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Arrays.deepToString()")," \u65b9\u6cd5\uff0c\u5c06\u591a\u7ef4\u6570\u7ec4\u8f6c\u6362\u6210 ",(0,r.kt)("strong",{parentName:"p"},"String")," \u7c7b\u578b\uff0c\u5c31\u50cf\u8f93\u51fa\u4e2d\u663e\u793a\u7684\u90a3\u6837\u3002"),(0,r.kt)("p",null,"\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"new")," \u5206\u914d\u6570\u7ec4\u3002\u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"new")," \u8868\u8fbe\u5f0f\u5206\u914d\u7684\u4e09\u7ef4\u6570\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"// arrays/ThreeDWithNew.java\nimport java.util.*;\n\npublic class ThreeDWithNew {\n  public static void main(String[] args) {\n    // 3-D array with fixed length:\n    int[][][] a = new int[2][2][4];\n    System.out.println(Arrays.deepToString(a));\n  }\n}\n/* Output:\n[[[0, 0, 0, 0], [0, 0, 0, 0]], [[0, 0, 0, 0], [0, 0, 0,\n0]]]\n*/\n")),(0,r.kt)("p",null,"\u5018\u82e5\u4f60\u4e0d\u5bf9\u57fa\u5143\u6570\u7ec4\u8fdb\u884c\u663e\u5f0f\u7684\u521d\u59cb\u5316\uff0c\u5b83\u7684\u503c\u4f1a\u81ea\u52a8\u521d\u59cb\u5316\u3002\u800c\u5bf9\u8c61\u6570\u7ec4\u5c06\u88ab\u521d\u59cb\u5316\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"null")," \u3002"),(0,r.kt)("p",null,"\u7ec4\u6210\u77e9\u9635\u7684\u6570\u7ec4\u4e2d\u6bcf\u4e00\u4e2a\u5411\u91cf\u90fd\u53ef\u4ee5\u662f\u4efb\u610f\u957f\u5ea6\u7684\uff08\u8fd9\u53eb\u505a\u4e0d\u89c4\u5219\u6570\u7ec4\uff09\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"// arrays/RaggedArray.java\nimport java.util.*;\n\npublic class RaggedArray {\n  static int val = 1;\n  public static void main(String[] args) {\n    SplittableRandom rand = new SplittableRandom(47);\n    // 3-D array with varied-length vectors:\n    int[][][] a = new int[rand.nextInt(7)][][];\n    for(int i = 0; i < a.length; i++) {\n      a[i] = new int[rand.nextInt(5)][];\n      for(int j = 0; j < a[i].length; j++) {\n        a[i][j] = new int[rand.nextInt(5)];\n        Arrays.setAll(a[i][j], n -> val++); // [1]\n      }\n    }\n    System.out.println(Arrays.deepToString(a));\n  }\n}\n/* Output:\n[[[1], []], [[2, 3, 4, 5], [6]], [[7, 8, 9], [10, 11,\n12], []]]\n*/\n")),(0,r.kt)("p",null,"\u7b2c\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"new")," \u521b\u5efa\u4e86\u4e00\u4e2a\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u9996\u5143\u7d20\u957f\u5ea6\u968f\u673a\uff0c\u5176\u4f59\u7684\u5219\u4e0d\u786e\u5b9a\u3002\u7b2c\u4e8c\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"new")," \u5728 for \u5faa\u73af\u4e2d\u7ed9\u6570\u7ec4\u586b\u5145\u4e86\u7b2c\u4e8c\u4e2a\u5143\u7d20\uff0c\u7b2c\u4e09\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"new"),"  \u4e3a\u6570\u7ec4\u7684\u6700\u540e\u4e00\u4e2a\u7d22\u5f15\u586b\u5145\u5143\u7d20\u3002"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[1]")," Java 8 \u589e\u52a0\u4e86 ",(0,r.kt)("strong",{parentName:"li"},"Arrays.setAll()")," \u65b9\u6cd5,\u5176\u4f7f\u7528\u751f\u6210\u5668\u6765\u751f\u6210\u63d2\u5165\u6570\u7ec4\u4e2d\u7684\u503c\u3002\u6b64\u751f\u6210\u5668\u7b26\u5408\u51fd\u6570\u5f0f\u63a5\u53e3 ",(0,r.kt)("strong",{parentName:"li"},"IntUnaryOperator")," \uff0c\u53ea\u4f7f\u7528\u4e00\u4e2a\u975e ",(0,r.kt)("strong",{parentName:"li"},"\u9ed8\u8ba4")," \u7684\u65b9\u6cd5 ",(0,r.kt)("strong",{parentName:"li"},"ApplyAsint(int\u64cd\u4f5c\u6570)")," \u3002 ",(0,r.kt)("strong",{parentName:"li"},"Arrays.setAll()")," \u4f20\u9012\u5f53\u524d\u6570\u7ec4\u7d22\u5f15\u4f5c\u4e3a\u64cd\u4f5c\u6570\uff0c\u56e0\u6b64\u4e00\u4e2a\u9009\u9879\u662f\u63d0\u4f9b ",(0,r.kt)("strong",{parentName:"li"},"n -> n")," \u7684 lambda \u8868\u8fbe\u5f0f\u6765\u663e\u793a\u6570\u7ec4\u7684\u7d22\u5f15\uff08\u5728\u4e0a\u9762\u7684\u4ee3\u7801\u4e2d\u5f88\u5bb9\u6613\u5c1d\u8bd5\uff09\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u5ffd\u7565\u7d22\u5f15\uff0c\u53ea\u662f\u63d2\u5165\u9012\u589e\u8ba1\u6570\u5668\u7684\u503c\u3002")),(0,r.kt)("p",null,"\u975e\u57fa\u5143\u7684\u5bf9\u8c61\u6570\u7ec4\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e3a\u4e0d\u89c4\u5219\u6570\u7ec4\u3002\u8fd9\u91cc\uff0c\u6211\u4eec\u6536\u96c6\u4e86\u8bb8\u591a\u4f7f\u7528\u5927\u62ec\u53f7\u7684 ",(0,r.kt)("strong",{parentName:"p"},"new")," \u8868\u8fbe\u5f0f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"// arrays/MultidimensionalObjectArrays.java\nimport java.util.*;\n\npublic class MultidimensionalObjectArrays {\n  public static void main(String[] args) {\n    BerylliumSphere[][] spheres = {\n      { new BerylliumSphere(), new BerylliumSphere() },\n      { new BerylliumSphere(), new BerylliumSphere(),\n        new BerylliumSphere(), new BerylliumSphere() },\n      { new BerylliumSphere(), new BerylliumSphere(),\n        new BerylliumSphere(), new BerylliumSphere(),\n        new BerylliumSphere(), new BerylliumSphere(),\n        new BerylliumSphere(), new BerylliumSphere() },\n    };\n    System.out.println(Arrays.deepToString(spheres));\n  }\n}\n/* Output:\n[[Sphere 0, Sphere 1], [Sphere 2, Sphere 3, Sphere 4,\nSphere 5], [Sphere 6, Sphere 7, Sphere 8, Sphere 9,\nSphere 10, Sphere 11, Sphere 12, Sphere 13]]\n*/\n")),(0,r.kt)("p",null,"\u6570\u7ec4\u521d\u59cb\u5316\u65f6\u4f7f\u7528\u81ea\u52a8\u88c5\u7bb1\u6280\u672f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"// arrays/AutoboxingArrays.java\nimport java.util.*;\n\npublic class AutoboxingArrays {\n  public static void main(String[] args) {\n    Integer[][] a = { // Autoboxing:\n      { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 },\n      { 21, 22, 23, 24, 25, 26, 27, 28, 29, 30 },\n      { 51, 52, 53, 54, 55, 56, 57, 58, 59, 60 },\n      { 71, 72, 73, 74, 75, 76, 77, 78, 79, 80 },\n    };\n    System.out.println(Arrays.deepToString(a));\n  }\n}\n/* Output:\n[[1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [21, 22, 23, 24, 25,\n26, 27, 28, 29, 30], [51, 52, 53, 54, 55, 56, 57, 58,\n59, 60], [71, 72, 73, 74, 75, 76, 77, 78, 79, 80]]\n*/\n")),(0,r.kt)("p",null,"\u4ee5\u4e0b\u662f\u5982\u4f55\u9010\u4e2a\u6784\u5efa\u975e\u57fa\u5143\u7684\u5bf9\u8c61\u6570\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"// arrays/AssemblingMultidimensionalArrays.java\n// Creating multidimensional arrays\nimport java.util.*;\n\npublic class AssemblingMultidimensionalArrays {\n  public static void main(String[] args) {\n    Integer[][] a;\n    a = new Integer[3][];\n    for(int i = 0; i < a.length; i++) {\n      a[i] = new Integer[3];\n      for(int j = 0; j < a[i].length; j++)\n        a[i][j] = i * j; // Autoboxing\n    }\n    System.out.println(Arrays.deepToString(a));\n  }\n}\n/* Output:\n[[0, 0, 0], [0, 1, 2], [0, 2, 4]]\n*/\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"i * j")," \u5728\u8fd9\u91cc\u53ea\u662f\u4e3a\u4e86\u5411 ",(0,r.kt)("strong",{parentName:"p"},"Integer")," \u4e2d\u6dfb\u52a0\u6709\u8da3\u7684\u503c\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Arrays.deepToString()")," \u65b9\u6cd5\u540c\u65f6\u9002\u7528\u4e8e\u57fa\u5143\u6570\u7ec4\u548c\u5bf9\u8c61\u6570\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/MultiDimWrapperArray.java\n// (c)2017 MindView LLC: see Copyright.txt\n// We make no guarantees that this code is fit for any purpose.\n// Visit http://OnJava8.com for more book information.\n// Multidimensional arrays of "wrapper" objects\nimport java.util.*;\n\npublic class MultiDimWrapperArray {\n  public static void main(String[] args) {\n    Integer[][] a1 = { // Autoboxing\n      { 1, 2, 3, },\n      { 4, 5, 6, },\n    };\n    Double[][][] a2 = { // Autoboxing\n      { { 1.1, 2.2 }, { 3.3, 4.4 } },\n      { { 5.5, 6.6 }, { 7.7, 8.8 } },\n      { { 9.9, 1.2 }, { 2.3, 3.4 } },\n    };\n    String[][] a3 = {\n      { "The", "Quick", "Sly", "Fox" },\n      { "Jumped", "Over" },\n      { "The", "Lazy", "Brown", "Dog", "&", "friend" },\n    };\n    System.out.println(\n      "a1: " + Arrays.deepToString(a1));\n    System.out.println(\n      "a2: " + Arrays.deepToString(a2));\n    System.out.println(\n      "a3: " + Arrays.deepToString(a3));\n  }\n}\n/* Output:\na1: [[1, 2, 3], [4, 5, 6]]\na2: [[[1.1, 2.2], [3.3, 4.4]], [[5.5, 6.6], [7.7,\n8.8]], [[9.9, 1.2], [2.3, 3.4]]]\na3: [[The, Quick, Sly, Fox], [Jumped, Over], [The,\nLazy, Brown, Dog, &, friend]]\n*/\n')),(0,r.kt)("p",null,"\u540c\u6837\u7684\uff0c\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Integer")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"Double")," \u6570\u7ec4\u4e2d\uff0c\u81ea\u52a8\u88c5\u7bb1\u53ef\u4e3a\u4f60\u521b\u5efa\u5305\u88c5\u5668\u5bf9\u8c61\u3002"),(0,r.kt)("h2",{id:"\u6cdb\u578b\u6570\u7ec4"},"\u6cdb\u578b\u6570\u7ec4"),(0,r.kt)("p",null,"\u4e00\u822c\u6765\u8bf4\uff0c\u6570\u7ec4\u548c\u6cdb\u578b\u5e76\u4e0d\u80fd\u5f88\u597d\u7684\u7ed3\u5408\u3002\u4f60\u4e0d\u80fd\u5b9e\u4f8b\u5316\u53c2\u6570\u5316\u7c7b\u578b\u7684\u6570\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"Peel<Banana>[] peels = new Peel<Banana>[10]; // Illegal\n")),(0,r.kt)("p",null,"\u7c7b\u578b\u64e6\u9664\u9700\u8981\u5220\u9664\u53c2\u6570\u7c7b\u578b\u4fe1\u606f\uff0c\u800c\u4e14\u6570\u7ec4\u5fc5\u987b\u77e5\u9053\u5b83\u4eec\u6240\u4fdd\u5b58\u7684\u786e\u5207\u7c7b\u578b\uff0c\u4ee5\u5f3a\u5236\u4fdd\u8bc1\u7c7b\u578b\u5b89\u5168\u3002"),(0,r.kt)("p",null,"\u4f46\u662f\uff0c\u53ef\u4ee5\u53c2\u6570\u5316\u6570\u7ec4\u672c\u8eab\u7684\u7c7b\u578b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"// arrays/ParameterizedArrayType.java\n\nclass ClassParameter<T> {\n  public T[] f(T[] arg) { return arg; }\n}\n\nclass MethodParameter {\n  public static <T> T[] f(T[] arg) { return arg; }\n}\n\npublic class ParameterizedArrayType {\n  public static void main(String[] args) {\n    Integer[] ints = { 1, 2, 3, 4, 5 };\n    Double[] doubles = { 1.1, 2.2, 3.3, 4.4, 5.5 };\n    Integer[] ints2 =\n      new ClassParameter<Integer>().f(ints);\n    Double[] doubles2 =\n      new ClassParameter<Double>().f(doubles);\n    ints2 = MethodParameter.f(ints);\n    doubles2 = MethodParameter.f(doubles);\n  }\n}\n")),(0,r.kt)("p",null,"\u6bd4\u8d77\u4f7f\u7528\u53c2\u6570\u5316\u7c7b\uff0c\u4f7f\u7528\u53c2\u6570\u5316\u65b9\u6cd5\u5f88\u65b9\u4fbf\u3002\u60a8\u4e0d\u5fc5\u4e3a\u5e94\u7528\u5b83\u7684\u6bcf\u4e2a\u4e0d\u540c\u7c7b\u578b\u90fd\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5e26\u6709\u53c2\u6570\u7684\u7c7b\uff0c\u4f46\u662f\u53ef\u4ee5\u4f7f\u5b83\u6210\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"\u9759\u6001")," \u7684\u3002\u4f60\u4e0d\u80fd\u603b\u662f\u9009\u62e9\u4f7f\u7528\u53c2\u6570\u5316\u65b9\u6cd5\u800c\u4e0d\u7528\u53c2\u6570\u5316\u7684\u7c7b\uff0c\u4f46\u901a\u5e38\u53c2\u6570\u5316\u65b9\u6cd5\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002"),(0,r.kt)("p",null,"\u4f60\u4e0d\u80fd\u521b\u5efa\u6cdb\u578b\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u8fd9\u79cd\u8bf4\u6cd5\u5e76\u4e0d\u5b8c\u5168\u6b63\u786e\u3002\u662f\u7684\uff0c\u7f16\u8bd1\u5668\u4e0d\u4f1a\u8ba9\u4f60 ",(0,r.kt)("em",{parentName:"p"},"\u5b9e\u4f8b\u5316")," \u4e00\u4e2a\u6cdb\u578b\u7684\u6570\u7ec4\u3002\u4f46\u662f\uff0c\u5b83\u5c06\u5141\u8bb8\u60a8\u521b\u5efa\u5bf9\u6b64\u7c7b\u6570\u7ec4\u7684\u5f15\u7528\u3002\u4f8b\u5982\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},"List<String>[] ls;\n")),(0,r.kt)("p",null,"\u65e0\u53ef\u4e89\u8bae\u7684\uff0c\u8fd9\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\u3002\u5c3d\u7ba1\u4e0d\u80fd\u521b\u5efa\u5305\u542b\u6cdb\u578b\u7684\u5b9e\u9645\u6570\u7ec4\u5bf9\u8c61\uff0c\u4f46\u662f\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u975e\u6cdb\u578b\u7684\u6570\u7ec4\u5e76\u5bf9\u5176\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},'// arrays/ArrayOfGenerics.java\nimport java.util.*;\n\npublic class ArrayOfGenerics {\n  @SuppressWarnings("unchecked")\n  public static void main(String[] args) {\n    List<String>[] ls;\n    List[] la = new List[10];\n    ls = (List<String>[])la; // Unchecked cast\n    ls[0] = new ArrayList<>();\n\n    //- ls[1] = new ArrayList<Integer>();\n    // error: incompatible types: ArrayList<Integer>\n    // cannot be converted to List<String>\n    //     ls[1] = new ArrayList<Integer>();\n    //             ^\n\n    // The problem: List<String> is a subtype of Object\n    Object[] objects = ls; // So assignment is OK\n    // Compiles and runs without complaint:\n    objects[1] = new ArrayList<>();\n\n    // However, if your needs are straightforward it is\n    // possible to create an array of generics, albeit\n    // with an "unchecked cast" warning:\n    List<BerylliumSphere>[] spheres =\n      (List<BerylliumSphere>[])new List[10];\n    Arrays.setAll(spheres, n -> new ArrayList<>());\n  }\n}\n')),(0,r.kt)("p",null,"\u4e00\u65e6\u4f60\u6709\u4e86\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"List","<","String",">","[]")," \u7684\u5f15\u7528 , \u4f60\u4f1a\u53d1\u73b0\u591a\u4e86\u4e00\u4e9b\u7f16\u8bd1\u65f6\u68c0\u67e5\u3002\u95ee\u9898\u662f\u6570\u7ec4\u662f\u534f\u53d8\u7684\uff0c\u6240\u4ee5 ",(0,r.kt)("strong",{parentName:"p"},"List","<","String",">","[]")," \u4e5f\u662f\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Object[]"),"  \uff0c\u4f60\u53ef\u4ee5\u7528\u8fd9\u6765\u5c06 ",(0,r.kt)("strong",{parentName:"p"},"ArrayList","<","Integer",">")," \u5206\u914d\u8fdb\u4f60\u7684\u6570\u7ec4\uff0c\u5728\u7f16\u8bd1\u6216\u8005\u8fd0\u884c\u65f6\u90fd\u4e0d\u4f1a\u51fa\u9519\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u4f60\u77e5\u9053\u4f60\u4e0d\u4f1a\u8fdb\u884c\u5411\u4e0a\u7c7b\u578b\u8f6c\u6362\uff0c\u4f60\u7684\u9700\u6c42\u76f8\u5bf9\u7b80\u5355\uff0c\u90a3\u4e48\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u6cdb\u578b\u6570\u7ec4\uff0c\u5b83\u5c06\u63d0\u4f9b\u57fa\u672c\u7684\u7f16\u8bd1\u65f6\u7c7b\u578b\u68c0\u67e5\u3002\u7136\u800c\uff0c\u4e00\u4e2a\u6cdb\u578b ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u5b9e\u9645\u4e0a\u662f\u4e00\u4e2a\u6bd4\u6cdb\u578b\u6570\u7ec4\u66f4\u597d\u7684\u9009\u62e9\u3002"),(0,r.kt)("p",null,"\u4e00\u822c\u6765\u8bf4\uff0c\u60a8\u4f1a\u53d1\u73b0\u6cdb\u578b\u5728\u7c7b\u6216\u65b9\u6cd5\u7684\u8fb9\u754c\u4e0a\u662f\u6709\u6548\u7684\u3002\u5728\u5185\u90e8\uff0c\u64e6\u9664\u5e38\u5e38\u4f1a\u4f7f\u6cdb\u578b\u4e0d\u53ef\u4f7f\u7528\u3002\u6240\u4ee5\uff0c\u5c31\u50cf\u4e0b\u9762\u7684\u4f8b\u5b50\uff0c\u4e0d\u80fd\u521b\u5efa\u6cdb\u578b\u7c7b\u578b\u7684\u6570\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},'// arrays/ArrayOfGenericType.java\n\npublic class ArrayOfGenericType<T> {\n  T[] array; // OK\n  @SuppressWarnings("unchecked")\n  public ArrayOfGenericType(int size) {\n    // error: generic array creation:\n    //- array = new T[size];\n    array = (T[])new Object[size]; // unchecked cast\n  }\n  // error: generic array creation:\n  //- public <U> U[] makeArray() { return new U[10]; }\n}\n\n')),(0,r.kt)("p",null,"\u64e6\u9664\u518d\u6b21\u4ece\u4e2d\u4f5c\u6897\uff0c\u8fd9\u4e2a\u4f8b\u5b50\u8bd5\u56fe\u521b\u5efa\u5df2\u7ecf\u64e6\u9664\u7684\u7c7b\u578b\u6570\u7ec4\uff0c\u56e0\u6b64\u5b83\u4eec\u662f\u672a\u77e5\u7684\u7c7b\u578b\u3002\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"\u5bf9\u8c61")," \u6570\u7ec4\uff0c\u7136\u540e\u5bf9\u5176\u8fdb\u884c\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362\uff0c\u4f46\u5982\u679c\u6ca1\u6709 ",(0,r.kt)("strong",{parentName:"p"},"@SuppressWarnings"),' \u6ce8\u91ca\uff0c\u4f60\u5c06\u4f1a\u5f97\u5230\u4e00\u4e2a "unchecked" \u8b66\u544a\uff0c\u56e0\u4e3a\u6570\u7ec4\u5b9e\u9645\u4e0a\u4e0d\u771f\u6b63\u652f\u6301\u800c\u4e14\u5c06\u5bf9\u7c7b\u578b ',(0,r.kt)("strong",{parentName:"p"},"T")," \u52a8\u6001\u68c0\u67e5 \u3002\u8fd9\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u6211\u521b\u5efa\u4e86\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"String[]")," , Java\u5c06\u5728\u7f16\u8bd1\u65f6\u548c\u8fd0\u884c\u65f6\u5f3a\u5236\u6267\u884c\uff0c\u6211\u53ea\u80fd\u5728\u6570\u7ec4\u4e2d\u653e\u7f6e\u5b57\u7b26\u4e32\u5bf9\u8c61\u3002\u7136\u800c\uff0c\u5982\u679c\u6211\u521b\u5efa\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Object[]")," ,\u6211\u53ef\u4ee5\u628a\u9664\u4e86\u57fa\u5143\u7c7b\u578b\u5916\u7684\u4efb\u4f55\u4e1c\u897f\u653e\u5165\u6570\u7ec4\u3002"),(0,r.kt)("h2",{id:"arrays\u7684fill\u65b9\u6cd5"},"Arrays\u7684fill\u65b9\u6cd5"),(0,r.kt)("p",null,"\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5f53\u5bf9\u6570\u7ec4\u548c\u7a0b\u5e8f\u8fdb\u884c\u5b9e\u9a8c\u65f6\uff0c\u80fd\u591f\u5f88\u8f7b\u6613\u5730\u751f\u6210\u5145\u6ee1\u6d4b\u8bd5\u6570\u636e\u7684\u6570\u7ec4\u662f\u5f88\u6709\u5e2e\u52a9\u7684\u3002 Java \u6807\u51c6\u5e93 ",(0,r.kt)("strong",{parentName:"p"},"Arrays")," \u7c7b\u5305\u62ec\u4e00\u4e2a\u666e\u901a\u7684 ",(0,r.kt)("strong",{parentName:"p"},"fill()")," \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5c06\u5355\u4e2a\u503c\u590d\u5236\u5230\u6574\u4e2a\u6570\u7ec4\uff0c\u6216\u8005\u5728\u5bf9\u8c61\u6570\u7ec4\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u76f8\u540c\u7684\u5f15\u7528\u590d\u5236\u5230\u6574\u4e2a\u6570\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Java"},'// arrays/FillingArrays.java\n// Using Arrays.fill()\nimport java.util.*;\nimport static onjava.ArrayShow.*;\n\npublic class FillingArrays {\n  public static void main(String[] args) {\n    int size = 6;\n    boolean[] a1 = new boolean[size];\n    byte[] a2 = new byte[size];\n    char[] a3 = new char[size];\n    short[] a4 = new short[size];\n    int[] a5 = new int[size];\n    long[] a6 = new long[size];\n    float[] a7 = new float[size];\n    double[] a8 = new double[size];\n    String[] a9 = new String[size];\n    Arrays.fill(a1, true);\n    show("a1", a1);\n    Arrays.fill(a2, (byte)11);\n    show("a2", a2);\n    Arrays.fill(a3, \'x\');\n    show("a3", a3);\n    Arrays.fill(a4, (short)17);\n    show("a4", a4);\n    Arrays.fill(a5, 19);\n    show("a5", a5);\n    Arrays.fill(a6, 23);\n    show("a6", a6);\n    Arrays.fill(a7, 29);\n    show("a7", a7);\n    Arrays.fill(a8, 47);\n    show("a8", a8);\n    Arrays.fill(a9, "Hello");\n    show("a9", a9);\n    // Manipulating ranges:\n    Arrays.fill(a9, 3, 5, "World");\n    show("a9", a9);\n  }\n}gedan\n/* Output:\na1: [true, true, true, true, true, true]\na2: [11, 11, 11, 11, 11, 11]\na3: [x, x, x, x, x, x]\na4: [17, 17, 17, 17, 17, 17]\na5: [19, 19, 19, 19, 19, 19]\na6: [23, 23, 23, 23, 23, 23]\na7: [29.0, 29.0, 29.0, 29.0, 29.0, 29.0]\na8: [47.0, 47.0, 47.0, 47.0, 47.0, 47.0]\na9: [Hello, Hello, Hello, Hello, Hello, Hello]\na9: [Hello, Hello, Hello, World, World, Hello]\n*/\n\n')),(0,r.kt)("p",null,"\u4f60\u65e2\u53ef\u4ee5\u586b\u5145\u6574\u4e2a\u6570\u7ec4\uff0c\u4e5f\u53ef\u4ee5\u50cf\u6700\u540e\u4e24\u4e2a\u8bed\u53e5\u6240\u793a\uff0c\u586b\u5145\u4e00\u7cfb\u5217\u7684\u5143\u7d20\u3002\u4f46\u662f\u7531\u4e8e\u4f60\u53ea\u80fd\u4f7f\u7528\u5355\u4e2a\u503c\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Arrays.fill()")," \uff0c\u56e0\u6b64\u7ed3\u679c\u5e76\u975e\u7279\u522b\u6709\u7528\u3002"),(0,r.kt)("h2",{id:"arrays\u7684setall\u65b9\u6cd5"},"Arrays\u7684setAll\u65b9\u6cd5"),(0,r.kt)("p",null,"\u5728Java 8\u4e2d\uff0c \u5728",(0,r.kt)("strong",{parentName:"p"},"RaggedArray.java")," \u4e2d\u5f15\u5165\u5e76\u5728 ",(0,r.kt)("strong",{parentName:"p"},"ArrayOfGenerics.java.Array.setAll()")," \u4e2d\u91cd\u7528\u3002\u5b83\u4f7f\u7528\u4e00\u4e2a\u751f\u6210\u5668\u5e76\u751f\u6210\u4e0d\u540c\u7684\u503c\uff0c\u53ef\u4ee5\u9009\u62e9\u57fa\u4e8e\u6570\u7ec4\u7684\u7d22\u5f15\u5143\u7d20\uff08\u901a\u8fc7\u8bbf\u95ee\u5f53\u524d\u7d22\u5f15\uff0c\u751f\u6210\u5668\u53ef\u4ee5\u8bfb\u53d6\u6570\u7ec4\u503c\u5e76\u5bf9\u5176\u8fdb\u884c\u4fee\u6539\uff09\u3002 ",(0,r.kt)("strong",{parentName:"p"},"static Arrays.setAll()")," \u7684\u91cd\u8f7d\u7b7e\u540d\u4e3a\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"void setAll(int[] a, IntUnaryOperator gen)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"void setAll(long[] a, IntToLongFunction gen)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"void setAll(double[] a, IntToDoubleFunctiongen)")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"<","T",">"," void setAll(T[] a, IntFunction<? extendsT> gen)"))),(0,r.kt)("p",null,"\u9664\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"int")," , ",(0,r.kt)("strong",{parentName:"p"},"long")," , ",(0,r.kt)("strong",{parentName:"p"},"double")," \u6709\u7279\u6b8a\u7684\u7248\u672c\uff0c\u5176\u4ed6\u7684\u4e00\u5207\u90fd\u7531\u6cdb\u578b\u7248\u672c\u5904\u7406\u3002\u751f\u6210\u5668\u4e0d\u662f ",(0,r.kt)("strong",{parentName:"p"},"Supplier")," \u56e0\u4e3a\u5b83\u4eec\u4e0d\u5e26\u53c2\u6570\uff0c\u5e76\u4e14\u5fc5\u987b\u5c06 ",(0,r.kt)("strong",{parentName:"p"},"int")," \u6570\u7ec4\u7d22\u5f15\u4f5c\u4e3a\u53c2\u6570\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// arrays/SimpleSetAll.java\n\nimport java.util.*;\nimport static onjava.ArrayShow.*;\n\nclass Bob {\n  final int id;\n  Bob(int n) { id = n; }\n  @Override\n  public String toString() { return "Bob" + id; }\n}\n\npublic class SimpleSetAll {\n  public static final int SZ = 8;\n  static int val = 1;\n  static char[] chars = "abcdefghijklmnopqrstuvwxyz"\n    .toCharArray();\n  static char getChar(int n) { return chars[n]; }\n  public static void main(String[] args) {\n    int[] ia = new int[SZ];\n    long[] la = new long[SZ];\n    double[] da = new double[SZ];\n    Arrays.setAll(ia, n -> n); // [1]\n    Arrays.setAll(la, n -> n);\n    Arrays.setAll(da, n -> n);\n    show(ia);\n    show(la);\n    show(da);\n    Arrays.setAll(ia, n -> val++); // [2]\n    Arrays.setAll(la, n -> val++);\n    Arrays.setAll(da, n -> val++);\n    show(ia);\n    show(la);\n    show(da);\n\n    Bob[] ba = new Bob[SZ];\n    Arrays.setAll(ba, Bob::new); // [3]\n    show(ba);\n\n    Character[] ca = new Character[SZ];\n    Arrays.setAll(ca, SimpleSetAll::getChar); // [4]\n    show(ca);\n  }\n}\n/* Output:\n[0, 1, 2, 3, 4, 5, 6, 7]\n[0, 1, 2, 3, 4, 5, 6, 7]\n[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]\n[1, 2, 3, 4, 5, 6, 7, 8]\n[9, 10, 11, 12, 13, 14, 15, 16]\n[17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0]\n[Bob0, Bob1, Bob2, Bob3, Bob4, Bob5, Bob6, Bob7]\n[a, b, c, d, e, f, g, h]\n*/\n\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[1]")," \u8fd9\u91cc\uff0c\u6211\u4eec\u53ea\u662f\u5c06\u6570\u7ec4\u7d22\u5f15\u4f5c\u4e3a\u503c\u63d2\u5165\u6570\u7ec4\u3002\u8fd9\u5c06\u81ea\u52a8\u8f6c\u5316\u4e3a ",(0,r.kt)("strong",{parentName:"li"},"long")," \u548c ",(0,r.kt)("strong",{parentName:"li"},"double")," \u7248\u672c\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[2]")," \u8fd9\u4e2a\u51fd\u6570\u53ea\u9700\u8981\u63a5\u53d7\u7d22\u5f15\u5c31\u80fd\u4ea7\u751f\u6b63\u786e\u7ed3\u679c\u3002\u8fd9\u4e2a\uff0c\u6211\u4eec\u5ffd\u7565\u7d22\u5f15\u503c\u5e76\u4e14\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"li"},"val")," \u751f\u6210\u7ed3\u679c\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[3]")," \u65b9\u6cd5\u5f15\u7528\u6709\u6548\uff0c\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"li"},"Bob")," \u7684\u6784\u9020\u5668\u63a5\u6536\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"li"},"int")," \u53c2\u6570\u3002\u53ea\u8981\u6211\u4eec\u4f20\u9012\u7684\u51fd\u6570\u63a5\u6536\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"li"},"int")," \u53c2\u6570\u4e14\u80fd\u4ea7\u751f\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u5c31\u8ba4\u4e3a\u5b83\u5b8c\u6210\u4e86\u5de5\u4f5c\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"[4]")," \u4e3a\u4e86\u5904\u7406\u9664\u4e86  ",(0,r.kt)("strong",{parentName:"li"},"int")," \uff0c",(0,r.kt)("strong",{parentName:"li"},"long")," \uff0c",(0,r.kt)("strong",{parentName:"li"},"double")," \u4e4b\u5916\u7684\u57fa\u5143\u7c7b\u578b\uff0c\u8bf7\u4e3a\u57fa\u5143\u521b\u5efa\u5305\u88c5\u7c7b\u7684\u6570\u7ec4\u3002\u7136\u540e\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"li"},"setAll()")," \u7684\u6cdb\u578b\u7248\u672c\u3002\u8bf7\u6ce8\u610f\uff0c",(0,r.kt)("strong",{parentName:"li"},"getChar\uff08\uff09")," \u751f\u6210\u57fa\u5143\u7c7b\u578b\uff0c\u56e0\u6b64\u8fd9\u662f\u81ea\u52a8\u88c5\u7bb1\u5230 ",(0,r.kt)("strong",{parentName:"li"},"Character")," \u3002")),(0,r.kt)("h2",{id:"\u589e\u91cf\u751f\u6210"},"\u589e\u91cf\u751f\u6210"),(0,r.kt)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u65b9\u6cd5\u5e93\uff0c\u7528\u4e8e\u4e3a\u4e0d\u540c\u7c7b\u578b\u751f\u6210\u589e\u91cf\u503c\u3002"),(0,r.kt)("p",null,"\u8fd9\u4e9b\u88ab\u4f5c\u4e3a\u5185\u90e8\u7c7b\u6765\u751f\u6210\u5bb9\u6613\u8bb0\u4f4f\u7684\u540d\u5b57\uff1b\u6bd4\u5982\uff0c\u4e3a\u4e86\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Integer")," \u5de5\u5177\u4f60\u53ef\u4ee5\u7528 ",(0,r.kt)("strong",{parentName:"p"},"new Conut.Interger()")," , \u5982\u679c\u4f60\u60f3\u8981\u4f7f\u7528\u57fa\u672c\u6570\u636e\u7c7b\u578b ",(0,r.kt)("strong",{parentName:"p"},"int")," \u5de5\u5177\uff0c\u4f60\u53ef\u4ee5\u7528 ",(0,r.kt)("strong",{parentName:"p"},"new Count.Pint()"),"  (\u57fa\u672c\u7c7b\u578b\u7684\u540d\u5b57\u4e0d\u80fd\u88ab\u76f4\u63a5\u4f7f\u7528\uff0c\u6240\u4ee5\u5b83\u4eec\u90fd\u5728\u524d\u9762\u6dfb\u52a0\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"P"),"  \u6765\u8868\u793a\u57fa\u672c\u6570\u636e\u7c7b\u578b'primitive', \u6211\u4eec\u7684\u7b2c\u4e00\u9009\u62e9\u662f\u4f7f\u7528\u57fa\u672c\u7c7b\u578b\u540d\u5b57\u540e\u9762\u8ddf\u7740\u4e0b\u5212\u7ebf\uff0c\u6bd4\u5982 ",(0,r.kt)("strong",{parentName:"p"},"int_")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"double_"),"  ,\u4f46\u662f\u8fd9\u79cd\u65b9\u5f0f\u8fdd\u80ccJava\u7684\u547d\u540d\u4e60\u60ef\uff09\u3002\u6bcf\u4e2a\u5305\u88c5\u7c7b\u7684\u751f\u6210\u5668\u90fd\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"get()")," \u65b9\u6cd5\u5b9e\u73b0\u4e86\u5b83\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Supplier")," \u3002\u8981\u4f7f\u7528",(0,r.kt)("strong",{parentName:"p"},"Array.setAll()")," \uff0c\u4e00\u4e2a\u91cd\u8f7d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"get(int n)")," \u65b9\u6cd5\u8981\u63a5\u53d7\uff08\u5e76\u5ffd\u7565\uff09\u5176\u53c2\u6570\uff0c\u4ee5\u4fbf\u63a5\u53d7 ",(0,r.kt)("strong",{parentName:"p"},"setAll()")," \u4f20\u9012\u7684\u7d22\u5f15\u503c\u3002"),(0,r.kt)("p",null,"\u6ce8\u610f\uff0c\u901a\u8fc7\u4f7f\u7528\u5305\u88c5\u7c7b\u7684\u540d\u79f0\u4f5c\u4e3a\u5185\u90e8\u7c7b\u540d\uff0c\u6211\u4eec\u5fc5\u987b\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"p"},"java.lang")," \u5305\u6765\u4fdd\u8bc1\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b9e\u9645\u5305\u88c5\u7c7b\u7684\u540d\u5b57\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// onjava/Count.java\n// Generate incremental values of different types\npackage onjava;\nimport java.util.*;\nimport java.util.function.*;\nimport static onjava.ConvertTo.*;\n\npublic interface Count {\n  class Boolean\n  implements Supplier<java.lang.Boolean> {\n    private boolean b = true;\n    @Override\n    public java.lang.Boolean get() {\n      b = !b;\n      return java.lang.Boolean.valueOf(b);\n    }\n    public java.lang.Boolean get(int n) {\n      return get();\n    }\n    public java.lang.Boolean[] array(int sz) {\n      java.lang.Boolean[] result =\n        new java.lang.Boolean[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pboolean {\n    private boolean b = true;\n    public boolean get() {\n      b = !b;\n      return b;\n    }\n    public boolean get(int n) { return get(); }\n    public boolean[] array(int sz) {\n      return primitive(new Boolean().array(sz));\n    }\n  }\n  class Byte\n  implements Supplier<java.lang.Byte> {\n    private byte b;\n    @Override\n    public java.lang.Byte get() { return b++; }\n    public java.lang.Byte get(int n) {\n      return get();\n    }\n    public java.lang.Byte[] array(int sz) {\n      java.lang.Byte[] result =\n        new java.lang.Byte[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pbyte {\n    private byte b;\n    public byte get() { return b++; }\n    public byte get(int n) { return get(); }\n    public byte[] array(int sz) {\n      return primitive(new Byte().array(sz));\n    }\n  }\n  char[] CHARS =\n    "abcdefghijklmnopqrstuvwxyz".toCharArray();\n  class Character\n  implements Supplier<java.lang.Character> {\n    private int i;\n    @Override\n    public java.lang.Character get() {\n      i = (i + 1) % CHARS.length;\n      return CHARS[i];\n    }\n    public java.lang.Character get(int n) {\n      return get();\n    }\n    public java.lang.Character[] array(int sz) {\n      java.lang.Character[] result =\n        new java.lang.Character[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pchar {\n    private int i;\n    public char get() {\n      i = (i + 1) % CHARS.length;\n      return CHARS[i];\n    }\n    public char get(int n) { return get(); }\n    public char[] array(int sz) {\n      return primitive(new Character().array(sz));\n    }\n  }\n  class Short\n  implements Supplier<java.lang.Short> {\n    short s;\n    @Override\n    public java.lang.Short get() { return s++; }\n    public java.lang.Short get(int n) {\n      return get();\n    }\n    public java.lang.Short[] array(int sz) {\n      java.lang.Short[] result =\n        new java.lang.Short[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pshort {\n    short s;\n    public short get() { return s++; }\n    public short get(int n) { return get(); }\n    public short[] array(int sz) {\n      return primitive(new Short().array(sz));\n    }\n  }\n  class Integer\n  implements Supplier<java.lang.Integer> {\n    int i;\n    @Override\n    public java.lang.Integer get() { return i++; }\n    public java.lang.Integer get(int n) {\n      return get();\n    }\n    public java.lang.Integer[] array(int sz) {\n      java.lang.Integer[] result =\n        new java.lang.Integer[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pint implements IntSupplier {\n    int i;\n    public int get() { return i++; }\n    public int get(int n) { return get(); }\n    @Override\n    public int getAsInt() { return get(); }\n    public int[] array(int sz) {\n      return primitive(new Integer().array(sz));\n    }\n  }\n  class Long\n  implements Supplier<java.lang.Long> {\n    private long l;\n    @Override\n    public java.lang.Long get() { return l++; }\n    public java.lang.Long get(int n) {\n      return get();\n    }\n    public java.lang.Long[] array(int sz) {\n      java.lang.Long[] result =\n        new java.lang.Long[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Plong implements LongSupplier {\n    private long l;\n    public long get() { return l++; }\n    public long get(int n) { return get(); }\n    @Override\n    public long getAsLong() { return get(); }\n    public long[] array(int sz) {\n      return primitive(new Long().array(sz));\n    }\n  }\n  class Float\n  implements Supplier<java.lang.Float> {\n    private int i;\n    @Override\n    public java.lang.Float get() {\n      return java.lang.Float.valueOf(i++);\n    }\n    public java.lang.Float get(int n) {\n      return get();\n    }\n    public java.lang.Float[] array(int sz) {\n      java.lang.Float[] result =\n        new java.lang.Float[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pfloat {\n    private int i;\n    public float get() { return i++; }\n    public float get(int n) { return get(); }\n    public float[] array(int sz) {\n      return primitive(new Float().array(sz));\n    }\n  }\n  class Double\n  implements Supplier<java.lang.Double> {\n    private int i;\n    @Override\n    public java.lang.Double get() {\n      return java.lang.Double.valueOf(i++);\n    }\n    public java.lang.Double get(int n) {\n      return get();\n    }\n    public java.lang.Double[] array(int sz) {\n      java.lang.Double[] result =\n        new java.lang.Double[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pdouble implements DoubleSupplier {\n    private int i;\n    public double get() { return i++; }\n    public double get(int n) { return get(); }\n    @Override\n    public double getAsDouble() { return get(0); }\n    public double[] array(int sz) {\n      return primitive(new Double().array(sz));\n    }\n  }\n}\n\n')),(0,r.kt)("p",null,"\u5bf9\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"int")," \uff0c",(0,r.kt)("strong",{parentName:"p"},"long")," \uff0c",(0,r.kt)("strong",{parentName:"p"},"double")," \u8fd9\u4e09\u4e2a\u6709\u7279\u6b8a ",(0,r.kt)("strong",{parentName:"p"},"Supplier")," \u63a5\u53e3\u7684\u539f\u59cb\u6570\u636e\u7c7b\u578b\u6765\u8bf4\uff0c",(0,r.kt)("strong",{parentName:"p"},"Pint")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"Plong")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"Pdouble")," \u5b9e\u73b0\u4e86\u8fd9\u4e9b\u63a5\u53e3\u3002"),(0,r.kt)("p",null,"\u8fd9\u91cc\u662f\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"Count")," \u7684\u6d4b\u8bd5\uff0c\u8fd9\u540c\u6837\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5982\u4f55\u4f7f\u7528\u5b83\u7684\u4f8b\u5b50\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// arrays/TestCount.java\n// Test counting generators\nimport java.util.*;\nimport java.util.stream.*;\nimport onjava.*;\nimport static onjava.ArrayShow.*;\n\npublic class TestCount {\n  static final int SZ = 5;\n  public static void main(String[] args) {\n    System.out.println("Boolean");\n    Boolean[] a1 = new Boolean[SZ];\n    Arrays.setAll(a1, new Count.Boolean()::get);\n    show(a1);\n    a1 = Stream.generate(new Count.Boolean())\n      .limit(SZ + 1).toArray(Boolean[]::new);\n    show(a1);\n    a1 = new Count.Boolean().array(SZ + 2);\n    show(a1);\n    boolean[] a1b =\n      new Count.Pboolean().array(SZ + 3);\n    show(a1b);\n\n    System.out.println("Byte");\n    Byte[] a2 = new Byte[SZ];\n    Arrays.setAll(a2, new Count.Byte()::get);\n    show(a2);\n    a2 = Stream.generate(new Count.Byte())\n      .limit(SZ + 1).toArray(Byte[]::new);\n    show(a2);\n    a2 = new Count.Byte().array(SZ + 2);\n    show(a2);\n    byte[] a2b = new Count.Pbyte().array(SZ + 3);\n    show(a2b);\n\n    System.out.println("Character");\n    Character[] a3 = new Character[SZ];\n    Arrays.setAll(a3, new Count.Character()::get);\n    show(a3);\n    a3 = Stream.generate(new Count.Character())\n      .limit(SZ + 1).toArray(Character[]::new);\n    show(a3);\n    a3 = new Count.Character().array(SZ + 2);\n    show(a3);\n    char[] a3b = new Count.Pchar().array(SZ + 3);\n    show(a3b);\n\n    System.out.println("Short");\n    Short[] a4 = new Short[SZ];\n    Arrays.setAll(a4, new Count.Short()::get);\n    show(a4);\n    a4 = Stream.generate(new Count.Short())\n      .limit(SZ + 1).toArray(Short[]::new);\n    show(a4);\n    a4 = new Count.Short().array(SZ + 2);\n    show(a4);\n    short[] a4b = new Count.Pshort().array(SZ + 3);\n    show(a4b);\n\n    System.out.println("Integer");\n    int[] a5 = new int[SZ];\n    Arrays.setAll(a5, new Count.Integer()::get);\n    show(a5);\n    Integer[] a5b =\n      Stream.generate(new Count.Integer())\n        .limit(SZ + 1).toArray(Integer[]::new);\n    show(a5b);\n    a5b = new Count.Integer().array(SZ + 2);\n    show(a5b);\n    a5 = IntStream.generate(new Count.Pint())\n      .limit(SZ + 1).toArray();\n    show(a5);\n    a5 = new Count.Pint().array(SZ + 3);\n    show(a5);\n\n    System.out.println("Long");\n    long[] a6 = new long[SZ];\n    Arrays.setAll(a6, new Count.Long()::get);\n    show(a6);\n    Long[] a6b = Stream.generate(new Count.Long())\n      .limit(SZ + 1).toArray(Long[]::new);\n    show(a6b);\n    a6b = new Count.Long().array(SZ + 2);\n    show(a6b);\n    a6 = LongStream.generate(new Count.Plong())\n      .limit(SZ + 1).toArray();\n    show(a6);\n    a6 = new Count.Plong().array(SZ + 3);\n    show(a6);\n\n    System.out.println("Float");\n    Float[] a7 = new Float[SZ];\n    Arrays.setAll(a7, new Count.Float()::get);\n    show(a7);\n    a7 = Stream.generate(new Count.Float())\n      .limit(SZ + 1).toArray(Float[]::new);\n    show(a7);\n    a7 = new Count.Float().array(SZ + 2);\n    show(a7);\n    float[] a7b = new Count.Pfloat().array(SZ + 3);\n    show(a7b);\n\n    System.out.println("Double");\n    double[] a8 = new double[SZ];\n    Arrays.setAll(a8, new Count.Double()::get);\n    show(a8);\n    Double[] a8b =\n      Stream.generate(new Count.Double())\n        .limit(SZ + 1).toArray(Double[]::new);\n    show(a8b);\n    a8b = new Count.Double().array(SZ + 2);\n    show(a8b);\n    a8 = DoubleStream.generate(new Count.Pdouble())\n      .limit(SZ + 1).toArray();\n    show(a8);\n    a8 = new Count.Pdouble().array(SZ + 3);\n    show(a8);\n  }\n}\n/* Output:\nBoolean\n[false, true, false, true, false]\n[false, true, false, true, false, true]\n[false, true, false, true, false, true, false]\n[false, true, false, true, false, true, false, true]\nByte\n[0, 1, 2, 3, 4]\n[0, 1, 2, 3, 4, 5]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6, 7]\nCharacter\n[b, c, d, e, f]\n[b, c, d, e, f, g]\n[b, c, d, e, f, g, h]\n[b, c, d, e, f, g, h, i]\nShort\n[0, 1, 2, 3, 4]\n[0, 1, 2, 3, 4, 5]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5, 6, 7]\nInteger\n[0, 1, 2, 3, 4]\n[0, 1, 2, 3, 4, 5]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5]\n[0, 1, 2, 3, 4, 5, 6, 7]\nLong\n[0, 1, 2, 3, 4]\n[0, 1, 2, 3, 4, 5]\n[0, 1, 2, 3, 4, 5, 6]\n[0, 1, 2, 3, 4, 5]\n[0, 1, 2, 3, 4, 5, 6, 7]\nFloat\n[0.0, 1.0, 2.0, 3.0, 4.0]\n[0.0, 1.0, 2.0, 3.0, 4.0, 5.0]\n[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\n[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]\nDouble\n[0.0, 1.0, 2.0, 3.0, 4.0]\n[0.0, 1.0, 2.0, 3.0, 4.0, 5.0]\n[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0]\n[0.0, 1.0, 2.0, 3.0, 4.0, 5.0]\n[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0]\n*/\n\n')),(0,r.kt)("p",null,"\u6ce8\u610f\u5230\u539f\u59cb\u6570\u7ec4\u7c7b\u578b ",(0,r.kt)("strong",{parentName:"p"},"int[]")," \uff0c",(0,r.kt)("strong",{parentName:"p"},"long[]")," \uff0c",(0,r.kt)("strong",{parentName:"p"},"double[]")," \u53ef\u4ee5\u76f4\u63a5\u88ab ",(0,r.kt)("strong",{parentName:"p"},"Arrays.setAll()")," \u586b\u5145\uff0c\u4f46\u662f\u5176\u4ed6\u7684\u539f\u59cb\u7c7b\u578b\u90fd\u8981\u6c42\u7528\u5305\u88c5\u5668\u7c7b\u578b\u7684\u6570\u7ec4\u3002"),(0,r.kt)("p",null,"\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},"Stream.generate()")," \u521b\u5efa\u7684\u5305\u88c5\u6570\u7ec4\u663e\u793a\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"toArray\uff08\uff09")," \u7684\u91cd\u8f7d\u7528\u6cd5\uff0c\u5728\u8fd9\u91cc\u4f60\u5e94\u8be5\u63d0\u4f9b\u7ed9\u5b83\u8981\u521b\u5efa\u7684\u6570\u7ec4\u7c7b\u578b\u7684\u6784\u9020\u5668\u3002"),(0,r.kt)("h2",{id:"\u968f\u673a\u751f\u6210"},"\u968f\u673a\u751f\u6210"),(0,r.kt)("p",null,"\u6211\u4eec\u53ef\u4ee5\u6309\u7167 ",(0,r.kt)("strong",{parentName:"p"},"Count.java")," \u7684\u7ed3\u6784\u521b\u5efa\u4e00\u4e2a\u751f\u6210\u968f\u673a\u503c\u7684\u5de5\u5177\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// onjava/Rand.java\n// (c)2017 MindView LLC: see Copyright.txt\n// We make no guarantees that this code is fit for any purpose.\n// Visit http://OnJava8.com for more book information.\n// Generate random values of different types\npackage onjava;\nimport java.util.*;\nimport java.util.function.*;\nimport static onjava.ConvertTo.*;\n\npublic interface Rand {\n  int MOD = 10_000;\n  class Boolean\n  implements Supplier<java.lang.Boolean> {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public java.lang.Boolean get() {\n      return r.nextBoolean();\n    }\n    public java.lang.Boolean get(int n) {\n      return get();\n    }\n    public java.lang.Boolean[] array(int sz) {\n      java.lang.Boolean[] result =\n        new java.lang.Boolean[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pboolean {\n    public boolean[] array(int sz) {\n      return primitive(new Boolean().array(sz));\n    }\n  }\n  class Byte\n  implements Supplier<java.lang.Byte> {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public java.lang.Byte get() {\n      return (byte)r.nextInt(MOD);\n    }\n    public java.lang.Byte get(int n) {\n      return get();\n    }\n    public java.lang.Byte[] array(int sz) {\n      java.lang.Byte[] result =\n        new java.lang.Byte[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pbyte {\n    public byte[] array(int sz) {\n      return primitive(new Byte().array(sz));\n    }\n  }\n  class Character\n  implements Supplier<java.lang.Character> {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public java.lang.Character get() {\n      return (char)r.nextInt('a', 'z' + 1);\n    }\n    public java.lang.Character get(int n) {\n      return get();\n    }\n    public java.lang.Character[] array(int sz) {\n      java.lang.Character[] result =\n        new java.lang.Character[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pchar {\n    public char[] array(int sz) {\n      return primitive(new Character().array(sz));\n    }\n  }\n  class Short\n  implements Supplier<java.lang.Short> {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public java.lang.Short get() {\n      return (short)r.nextInt(MOD);\n    }\n    public java.lang.Short get(int n) {\n      return get();\n    }\n    public java.lang.Short[] array(int sz) {\n      java.lang.Short[] result =\n        new java.lang.Short[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pshort {\n    public short[] array(int sz) {\n      return primitive(new Short().array(sz));\n    }\n  }\n  class Integer\n  implements Supplier<java.lang.Integer> {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public java.lang.Integer get() {\n      return r.nextInt(MOD);\n    }\n    public java.lang.Integer get(int n) {\n      return get();\n    }\n    public java.lang.Integer[] array(int sz) {\n      int[] primitive = new Pint().array(sz);\n      java.lang.Integer[] result =\n        new java.lang.Integer[sz];\n      for(int i = 0; i < sz; i++)\n        result[i] = primitive[i];\n      return result;\n    }\n  }\n  class Pint implements IntSupplier {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public int getAsInt() {\n      return r.nextInt(MOD);\n    }\n    public int get(int n) { return getAsInt(); }\n    public int[] array(int sz) {\n      return r.ints(sz, 0, MOD).toArray();\n    }\n  }\n  class Long\n  implements Supplier<java.lang.Long> {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public java.lang.Long get() {\n      return r.nextLong(MOD);\n    }\n    public java.lang.Long get(int n) {\n      return get();\n    }\n    public java.lang.Long[] array(int sz) {\n      long[] primitive = new Plong().array(sz);\n      java.lang.Long[] result =\n        new java.lang.Long[sz];\n      for(int i = 0; i < sz; i++)\n        result[i] = primitive[i];\n      return result;\n    }\n  }\n  class Plong implements LongSupplier {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public long getAsLong() {\n      return r.nextLong(MOD);\n    }\n    public long get(int n) { return getAsLong(); }\n    public long[] array(int sz) {\n      return r.longs(sz, 0, MOD).toArray();\n    }\n  }\n  class Float\n  implements Supplier<java.lang.Float> {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public java.lang.Float get() {\n      return (float)trim(r.nextDouble());\n    }\n    public java.lang.Float get(int n) {\n      return get();\n    }\n    public java.lang.Float[] array(int sz) {\n      java.lang.Float[] result =\n        new java.lang.Float[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n  class Pfloat {\n    public float[] array(int sz) {\n      return primitive(new Float().array(sz));\n    }\n  }\n  static double trim(double d) {\n    return\n      ((double)Math.round(d * 1000.0)) / 100.0;\n  }\n  class Double\n  implements Supplier<java.lang.Double> {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public java.lang.Double get() {\n      return trim(r.nextDouble());\n    }\n    public java.lang.Double get(int n) {\n      return get();\n    }\n    public java.lang.Double[] array(int sz) {\n      double[] primitive =\n        new Rand.Pdouble().array(sz);\n      java.lang.Double[] result =\n        new java.lang.Double[sz];\n      for(int i = 0; i < sz; i++)\n        result[i] = primitive[i];\n      return result;\n    }\n  }\n  class Pdouble implements DoubleSupplier {\n    SplittableRandom r = new SplittableRandom(47);\n    @Override\n    public double getAsDouble() {\n      return trim(r.nextDouble());\n    }\n    public double get(int n) {\n      return getAsDouble();\n    }\n    public double[] array(int sz) {\n      double[] result = r.doubles(sz).toArray();\n      Arrays.setAll(result,\n        n -> result[n] = trim(result[n]));\n      return result;\n    }\n  }\n  class String\n  implements Supplier<java.lang.String> {\n    SplittableRandom r = new SplittableRandom(47);\n    private int strlen = 7; // Default length\n    public String() {}\n    public String(int strLength) {\n      strlen = strLength;\n    }\n    @Override\n    public java.lang.String get() {\n      return r.ints(strlen, 'a', 'z' + 1)\n        .collect(StringBuilder::new,\n                 StringBuilder::appendCodePoint,\n                 StringBuilder::append).toString();\n    }\n    public java.lang.String get(int n) {\n      return get();\n    }\n    public java.lang.String[] array(int sz) {\n      java.lang.String[] result =\n        new java.lang.String[sz];\n      Arrays.setAll(result, n -> get());\n      return result;\n    }\n  }\n}\n\n")),(0,r.kt)("p",null,"\u5bf9\u4e8e\u9664\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"int")," \u3001 ",(0,r.kt)("strong",{parentName:"p"},"long")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"double")," \u4e4b\u5916\u7684\u6240\u6709\u57fa\u672c\u7c7b\u578b\u5143\u7d20\u751f\u6210\u5668\uff0c\u53ea\u751f\u6210\u6570\u7ec4\uff0c\u800c\u4e0d\u662f Count \u4e2d\u770b\u5230\u7684\u5b8c\u6574\u64cd\u4f5c\u96c6\u3002\u8fd9\u53ea\u662f\u4e00\u4e2a\u8bbe\u8ba1\u9009\u62e9\uff0c\u56e0\u4e3a\u672c\u4e66\u4e0d\u9700\u8981\u989d\u5916\u7684\u529f\u80fd\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u5bf9\u6240\u6709 ",(0,r.kt)("strong",{parentName:"p"},"Rand")," \u5de5\u5177\u7684\u6d4b\u8bd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// arrays/TestRand.java\n// Test random generators\nimport java.util.*;\nimport java.util.stream.*;\nimport onjava.*;\nimport static onjava.ArrayShow.*;\n\npublic class TestRand {\n  static final int SZ = 5;\n  public static void main(String[] args) {\n    System.out.println("Boolean");\n    Boolean[] a1 = new Boolean[SZ];\n    Arrays.setAll(a1, new Rand.Boolean()::get);\n    show(a1);\n    a1 = Stream.generate(new Rand.Boolean())\n      .limit(SZ + 1).toArray(Boolean[]::new);\n    show(a1);\n    a1 = new Rand.Boolean().array(SZ + 2);\n    show(a1);\n    boolean[] a1b =\n      new Rand.Pboolean().array(SZ + 3);\n    show(a1b);\n\n    System.out.println("Byte");\n    Byte[] a2 = new Byte[SZ];\n    Arrays.setAll(a2, new Rand.Byte()::get);\n    show(a2);\n    a2 = Stream.generate(new Rand.Byte())\n      .limit(SZ + 1).toArray(Byte[]::new);\n    show(a2);\n    a2 = new Rand.Byte().array(SZ + 2);\n    show(a2);\n    byte[] a2b = new Rand.Pbyte().array(SZ + 3);\n    show(a2b);\n\n    System.out.println("Character");\n    Character[] a3 = new Character[SZ];\n    Arrays.setAll(a3, new Rand.Character()::get);\n    show(a3);\n    a3 = Stream.generate(new Rand.Character())\n      .limit(SZ + 1).toArray(Character[]::new);\n    show(a3);\n    a3 = new Rand.Character().array(SZ + 2);\n    show(a3);\n    char[] a3b = new Rand.Pchar().array(SZ + 3);\n    show(a3b);\n\n    System.out.println("Short");\n    Short[] a4 = new Short[SZ];\n    Arrays.setAll(a4, new Rand.Short()::get);\n    show(a4);\n    a4 = Stream.generate(new Rand.Short())\n      .limit(SZ + 1).toArray(Short[]::new);\n    show(a4);\n    a4 = new Rand.Short().array(SZ + 2);\n    show(a4);\n    short[] a4b = new Rand.Pshort().array(SZ + 3);\n    show(a4b);\n\n    System.out.println("Integer");\n    int[] a5 = new int[SZ];\n    Arrays.setAll(a5, new Rand.Integer()::get);\n    show(a5);\n    Integer[] a5b =\n      Stream.generate(new Rand.Integer())\n        .limit(SZ + 1).toArray(Integer[]::new);\n    show(a5b);\n    a5b = new Rand.Integer().array(SZ + 2);\n    show(a5b);\n    a5 = IntStream.generate(new Rand.Pint())\n      .limit(SZ + 1).toArray();\n    show(a5);\n    a5 = new Rand.Pint().array(SZ + 3);\n    show(a5);\n\n    System.out.println("Long");\n    long[] a6 = new long[SZ];\n    Arrays.setAll(a6, new Rand.Long()::get);\n    show(a6);\n    Long[] a6b = Stream.generate(new Rand.Long())\n      .limit(SZ + 1).toArray(Long[]::new);\n    show(a6b);\n    a6b = new Rand.Long().array(SZ + 2);\n    show(a6b);\n    a6 = LongStream.generate(new Rand.Plong())\n      .limit(SZ + 1).toArray();\n    show(a6);\n    a6 = new Rand.Plong().array(SZ + 3);\n    show(a6);\n\n    System.out.println("Float");\n    Float[] a7 = new Float[SZ];\n    Arrays.setAll(a7, new Rand.Float()::get);\n    show(a7);\n    a7 = Stream.generate(new Rand.Float())\n      .limit(SZ + 1).toArray(Float[]::new);\n    show(a7);\n    a7 = new Rand.Float().array(SZ + 2);\n    show(a7);\n    float[] a7b = new Rand.Pfloat().array(SZ + 3);\n    show(a7b);\n\n    System.out.println("Double");\n    double[] a8 = new double[SZ];\n    Arrays.setAll(a8, new Rand.Double()::get);\n    show(a8);\n    Double[] a8b =\n      Stream.generate(new Rand.Double())\n        .limit(SZ + 1).toArray(Double[]::new);\n    show(a8b);\n    a8b = new Rand.Double().array(SZ + 2);\n    show(a8b);\n    a8 = DoubleStream.generate(new Rand.Pdouble())\n      .limit(SZ + 1).toArray();\n    show(a8);\n    a8 = new Rand.Pdouble().array(SZ + 3);\n    show(a8);\n\n    System.out.println("String");\n    String[] s = new String[SZ - 1];\n    Arrays.setAll(s, new Rand.String()::get);\n    show(s);\n    s = Stream.generate(new Rand.String())\n      .limit(SZ).toArray(String[]::new);\n    show(s);\n    s = new Rand.String().array(SZ + 1);\n    show(s);\n\n    Arrays.setAll(s, new Rand.String(4)::get);\n    show(s);\n    s = Stream.generate(new Rand.String(4))\n      .limit(SZ).toArray(String[]::new);\n    show(s);\n    s = new Rand.String(4).array(SZ + 1);\n    show(s);\n  }\n}\n/* Output:\nBoolean\n[true, false, true, true, true]\n[true, false, true, true, true, false]\n[true, false, true, true, true, false, false]\n[true, false, true, true, true, false, false, true]\nByte\n[123, 33, 101, 112, 33]\n[123, 33, 101, 112, 33, 31]\n[123, 33, 101, 112, 33, 31, 0]\n[123, 33, 101, 112, 33, 31, 0, -72]\nCharacter\n[b, t, p, e, n]\n[b, t, p, e, n, p]\n[b, t, p, e, n, p, c]\n[b, t, p, e, n, p, c, c]\nShort\n[635, 8737, 3941, 4720, 6177]\n[635, 8737, 3941, 4720, 6177, 8479]\n[635, 8737, 3941, 4720, 6177, 8479, 6656]\n[635, 8737, 3941, 4720, 6177, 8479, 6656, 3768]\nInteger\n[635, 8737, 3941, 4720, 6177]\n[635, 8737, 3941, 4720, 6177, 8479]\n[635, 8737, 3941, 4720, 6177, 8479, 6656]\n[635, 8737, 3941, 4720, 6177, 8479]\n[635, 8737, 3941, 4720, 6177, 8479, 6656, 3768]\nLong\n[6882, 3765, 692, 9575, 4439]\n[6882, 3765, 692, 9575, 4439, 2638]\n[6882, 3765, 692, 9575, 4439, 2638, 4011]\n[6882, 3765, 692, 9575, 4439, 2638]\n[6882, 3765, 692, 9575, 4439, 2638, 4011, 9610]\nFloat\n[4.83, 2.89, 2.9, 1.97, 3.01]\n[4.83, 2.89, 2.9, 1.97, 3.01, 0.18]\n[4.83, 2.89, 2.9, 1.97, 3.01, 0.18, 0.99]\n[4.83, 2.89, 2.9, 1.97, 3.01, 0.18, 0.99, 8.28]\nDouble\n[4.83, 2.89, 2.9, 1.97, 3.01]\n[4.83, 2.89, 2.9, 1.97, 3.01, 0.18]\n[4.83, 2.89, 2.9, 1.97, 3.01, 0.18, 0.99]\n[4.83, 2.89, 2.9, 1.97, 3.01, 0.18]\n[4.83, 2.89, 2.9, 1.97, 3.01, 0.18, 0.99, 8.28]\nString\n[btpenpc, cuxszgv, gmeinne, eloztdv]\n[btpenpc, cuxszgv, gmeinne, eloztdv, ewcippc]\n[btpenpc, cuxszgv, gmeinne, eloztdv, ewcippc, ygpoalk]\n[btpe, npcc, uxsz, gvgm, einn, eelo]\n[btpe, npcc, uxsz, gvgm, einn]\n[btpe, npcc, uxsz, gvgm, einn, eelo]\n*/\n\n')),(0,r.kt)("p",null,"\u6ce8\u610f\uff08\u9664\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"String")," \u90e8\u5206\u4e4b\u5916\uff09\uff0c\u8fd9\u6bb5\u4ee3\u7801\u4e0e ",(0,r.kt)("strong",{parentName:"p"},"TestCount.java")," \u4e2d\u7684\u4ee3\u7801\u76f8\u540c\uff0c",(0,r.kt)("strong",{parentName:"p"},"Count")," \u88ab ",(0,r.kt)("strong",{parentName:"p"},"Rand")," \u66ff\u6362\u3002"),(0,r.kt)("h2",{id:"\u6cdb\u578b\u548c\u57fa\u672c\u6570\u7ec4"},"\u6cdb\u578b\u548c\u57fa\u672c\u6570\u7ec4"),(0,r.kt)("p",null,"\u5728\u672c\u7ae0\u7684\u524d\u9762\uff0c\u6211\u4eec\u88ab\u63d0\u9192\uff0c\u6cdb\u578b\u4e0d\u80fd\u548c\u57fa\u5143\u4e00\u8d77\u5de5\u4f5c\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5fc5\u987b\u4ece\u57fa\u5143\u6570\u7ec4\u8f6c\u6362\u4e3a\u5305\u88c5\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u5e76\u4e14\u8fd8\u5fc5\u987b\u4ece\u53e6\u4e00\u4e2a\u65b9\u5411\u8f6c\u6362\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u8f6c\u6362\u5668\u53ef\u4ee5\u540c\u65f6\u5bf9\u6240\u6709\u7c7b\u578b\u7684\u6570\u636e\u6267\u884c\u64cd\u4f5c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// onjava/ConvertTo.java\n// (c)2017 MindView LLC: see Copyright.txt\n// We make no guarantees that this code is fit for any purpose.\n// Visit http://OnJava8.com for more book information.\npackage onjava;\n\npublic interface ConvertTo {\n  static boolean[] primitive(Boolean[] in) {\n    boolean[] result = new boolean[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i]; // Autounboxing\n    return result;\n  }\n  static char[] primitive(Character[] in) {\n    char[] result = new char[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static byte[] primitive(Byte[] in) {\n    byte[] result = new byte[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static short[] primitive(Short[] in) {\n    short[] result = new short[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static int[] primitive(Integer[] in) {\n    int[] result = new int[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static long[] primitive(Long[] in) {\n    long[] result = new long[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static float[] primitive(Float[] in) {\n    float[] result = new float[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static double[] primitive(Double[] in) {\n    double[] result = new double[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  // Convert from primitive array to wrapped array:\n  static Boolean[] boxed(boolean[] in) {\n    Boolean[] result = new Boolean[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i]; // Autoboxing\n    return result;\n  }\n  static Character[] boxed(char[] in) {\n    Character[] result = new Character[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static Byte[] boxed(byte[] in) {\n    Byte[] result = new Byte[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static Short[] boxed(short[] in) {\n    Short[] result = new Short[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static Integer[] boxed(int[] in) {\n    Integer[] result = new Integer[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static Long[] boxed(long[] in) {\n    Long[] result = new Long[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static Float[] boxed(float[] in) {\n    Float[] result = new Float[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n  static Double[] boxed(double[] in) {\n    Double[] result = new Double[in.length];\n    for(int i = 0; i < in.length; i++)\n      result[i] = in[i];\n    return result;\n  }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"primitive()")," \u7684\u6bcf\u4e2a\u7248\u672c\u90fd\u521b\u5efa\u4e00\u4e2a\u51c6\u786e\u957f\u5ea6\u7684\u9002\u5f53\u57fa\u5143\u6570\u7ec4\uff0c\u7136\u540e\u4ece\u5305\u88c5\u7c7b\u7684 ",(0,r.kt)("strong",{parentName:"p"},"in")," \u6570\u7ec4\u4e2d\u590d\u5236\u5143\u7d20\u3002\u5982\u679c\u4efb\u4f55\u5305\u88c5\u7684\u6570\u7ec4\u5143\u7d20\u662f ",(0,r.kt)("strong",{parentName:"p"},"null")," \uff0c\u4f60\u5c06\u5f97\u5230\u4e00\u4e2a\u5f02\u5e38\uff08\u8fd9\u662f\u5408\u7406\u7684\u2014\u5426\u5219\u65e0\u6cd5\u9009\u62e9\u6709\u610f\u4e49\u7684\u503c\u8fdb\u884c\u66ff\u6362)\u3002\u6ce8\u610f\u5728\u8fd9\u4e2a\u4efb\u52a1\u4e2d\u81ea\u52a8\u88c5\u7bb1\u5982\u4f55\u53d1\u751f\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"ConvertTo")," \u4e2d\u6240\u6709\u65b9\u6cd5\u7684\u6d4b\u8bd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// arrays/TestConvertTo.java\nimport java.util.*;\nimport onjava.*;\nimport static onjava.ArrayShow.*;\nimport static onjava.ConvertTo.*;\n\npublic class TestConvertTo {\n  static final int SIZE = 6;\n  public static void main(String[] args) {\n    Boolean[] a1 = new Boolean[SIZE];\n    Arrays.setAll(a1, new Rand.Boolean()::get);\n    boolean[] a1p = primitive(a1);\n    show("a1p", a1p);\n    Boolean[] a1b = boxed(a1p);\n    show("a1b", a1b);\n\n    Byte[] a2 = new Byte[SIZE];\n    Arrays.setAll(a2, new Rand.Byte()::get);\n    byte[] a2p = primitive(a2);\n    show("a2p", a2p);\n    Byte[] a2b = boxed(a2p);\n    show("a2b", a2b);\n\n    Character[] a3 = new Character[SIZE];\n    Arrays.setAll(a3, new Rand.Character()::get);\n    char[] a3p = primitive(a3);\n    show("a3p", a3p);\n    Character[] a3b = boxed(a3p);\n    show("a3b", a3b);\n\n    Short[] a4 = new Short[SIZE];\n    Arrays.setAll(a4, new Rand.Short()::get);\n    short[] a4p = primitive(a4);\n    show("a4p", a4p);\n    Short[] a4b = boxed(a4p);\n    show("a4b", a4b);\n\n    Integer[] a5 = new Integer[SIZE];\n    Arrays.setAll(a5, new Rand.Integer()::get);\n    int[] a5p = primitive(a5);\n    show("a5p", a5p);\n    Integer[] a5b = boxed(a5p);\n    show("a5b", a5b);\n\n    Long[] a6 = new Long[SIZE];\n    Arrays.setAll(a6, new Rand.Long()::get);\n    long[] a6p = primitive(a6);\n    show("a6p", a6p);\n    Long[] a6b = boxed(a6p);\n    show("a6b", a6b);\n\n    Float[] a7 = new Float[SIZE];\n    Arrays.setAll(a7, new Rand.Float()::get);\n    float[] a7p = primitive(a7);\n    show("a7p", a7p);\n    Float[] a7b = boxed(a7p);\n    show("a7b", a7b);\n\n    Double[] a8 = new Double[SIZE];\n    Arrays.setAll(a8, new Rand.Double()::get);\n    double[] a8p = primitive(a8);\n    show("a8p", a8p);\n    Double[] a8b = boxed(a8p);\n    show("a8b", a8b);\n  }\n}\n/* Output:\na1p: [true, false, true, true, true, false]\na1b: [true, false, true, true, true, false]\na2p: [123, 33, 101, 112, 33, 31]\na2b: [123, 33, 101, 112, 33, 31]\na3p: [b, t, p, e, n, p]\na3b: [b, t, p, e, n, p]\na4p: [635, 8737, 3941, 4720, 6177, 8479]\na4b: [635, 8737, 3941, 4720, 6177, 8479]\na5p: [635, 8737, 3941, 4720, 6177, 8479]\na5b: [635, 8737, 3941, 4720, 6177, 8479]\na6p: [6882, 3765, 692, 9575, 4439, 2638]\na6b: [6882, 3765, 692, 9575, 4439, 2638]\na7p: [4.83, 2.89, 2.9, 1.97, 3.01, 0.18]\na7b: [4.83, 2.89, 2.9, 1.97, 3.01, 0.18]\na8p: [4.83, 2.89, 2.9, 1.97, 3.01, 0.18]\na8b: [4.83, 2.89, 2.9, 1.97, 3.01, 0.18]\n*/\n')),(0,r.kt)("p",null,"\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u539f\u59cb\u6570\u7ec4\u90fd\u662f\u4e3a\u5305\u88c5\u7c7b\u578b\u521b\u5efa\u7684\uff0c\u5e76\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Arrays.setAll()")," \u586b\u5145\uff0c\u6b63\u5982\u6211\u4eec\u5728 ",(0,r.kt)("strong",{parentName:"p"},"TestCouner.java")," \u4e2d\u6240\u505a\u7684\u90a3\u6837\uff08\u8fd9\u4e5f\u9a8c\u8bc1\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Arrays.setAll()")," \u662f\u5426\u80fd\u540c ",(0,r.kt)("strong",{parentName:"p"},"Integer")," \uff0c",(0,r.kt)("strong",{parentName:"p"},"Long")," \uff0c\u548c ",(0,r.kt)("strong",{parentName:"p"},"Double")," \uff09\u3002\u7136\u540e ",(0,r.kt)("strong",{parentName:"p"},"ConvertTo.primitive()"),"  \u5c06\u5305\u88c5\u5668\u6570\u7ec4\u8f6c\u6362\u4e3a\u5bf9\u5e94\u7684\u57fa\u5143\u6570\u7ec4\uff0c",(0,r.kt)("strong",{parentName:"p"},"ConverTo.boxed()")," \u5c06\u5176\u8f6c\u6362\u56de\u6765\u3002"),(0,r.kt)("h2",{id:"\u6570\u7ec4\u5143\u7d20\u4fee\u6539"},"\u6570\u7ec4\u5143\u7d20\u4fee\u6539"),(0,r.kt)("p",null,"\u4f20\u9012\u7ed9 ",(0,r.kt)("strong",{parentName:"p"},"Arrays.setAll()")," \u7684\u751f\u6210\u5668\u51fd\u6570\u53ef\u4ee5\u4f7f\u7528\u5b83\u63a5\u6536\u5230\u7684\u6570\u7ec4\u7d22\u5f15\u4fee\u6539\u73b0\u6709\u7684\u6570\u7ec4\u5143\u7d20:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},"// arrays/ModifyExisting.java\n\nimport java.util.*;\nimport onjava.*;\nimport static onjava.ArrayShow.*;\n\npublic class ModifyExisting {\n    public static void main(String[] args) {\n        double[] da = new double[7];\n        Arrays.setAll(da, new Rand.Double()::get);\n        show(da);\n        Arrays.setAll(da, n -> da[n] / 100); // [1]\n        show(da);\n\n    }\n}\n\n/* Output:\n[4.83, 2.89, 2.9, 1.97, 3.01, 0.18, 0.99]\n[0.0483, 0.028900000000000002, 0.028999999999999998,\n0.0197, 0.0301, 0.0018, 0.009899999999999999]\n*/\n\n")),(0,r.kt)("p",null,"[1]"," Lambdas\u5728\u8fd9\u91cc\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u6570\u7ec4\u603b\u662f\u5728lambda\u8868\u8fbe\u5f0f\u7684\u8303\u56f4\u5185\u3002"),(0,r.kt)("h2",{id:"\u6570\u7ec4\u5e76\u884c"},"\u6570\u7ec4\u5e76\u884c"),(0,r.kt)("p",null,"\u6211\u4eec\u5f88\u5feb\u5c31\u4e0d\u5f97\u4e0d\u9762\u5bf9\u5e76\u884c\u7684\u4e3b\u9898\u3002\u4f8b\u5982\uff0c\u201c\u5e76\u884c\u201d\u4e00\u8bcd\u5728\u8bb8\u591aJava\u5e93\u65b9\u6cd5\u4e2d\u4f7f\u7528\u3002\u60a8\u53ef\u80fd\u542c\u8bf4\u8fc7\u7c7b\u4f3c\u201c\u5e76\u884c\u7a0b\u5e8f\u8fd0\u884c\u5f97\u66f4\u5feb\u201d\u8fd9\u6837\u7684\u8bf4\u6cd5\uff0c\u8fd9\u662f\u6709\u9053\u7406\u7684\u2014\u5f53\u60a8\u53ef\u4ee5\u6709\u591a\u4e2a\u5904\u7406\u5668\u65f6\uff0c\u4e3a\u4ec0\u4e48\u53ea\u6709\u4e00\u4e2a\u5904\u7406\u5668\u5728\u60a8\u7684\u7a0b\u5e8f\u4e0a\u5de5\u4f5c\u5462? \u5982\u679c\u60a8\u8ba4\u4e3a\u60a8\u5e94\u8be5\u5229\u7528\u5176\u4e2d\u7684\u201c\u5e76\u884c\u201d\uff0c\u8fd9\u662f\u5f88\u5bb9\u6613\u88ab\u539f\u8c05\u7684\u3002\n\u8981\u662f\u8fd9\u4e48\u7b80\u5355\u5c31\u597d\u4e86\u3002\u4e0d\u5e78\u7684\u662f\uff0c\u901a\u8fc7\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u7f16\u5199\u6bd4\u975e\u5e76\u884c\u7248\u672c\u8fd0\u884c\u901f\u5ea6\u66f4\u6162\u7684\u4ee3\u7801\u3002\u5728\u4f60\u6df1\u523b\u7406\u89e3\u6240\u6709\u7684\u95ee\u9898\u4e4b\u524d\uff0c\u5e76\u884c\u7f16\u7a0b\u770b\u8d77\u6765\u66f4\u50cf\u662f\u4e00\u95e8\u827a\u672f\u800c\u975e\u79d1\u5b66\u3002\n\u4ee5\u4e0b\u662f\u7b80\u77ed\u7684\u7248\u672c:\u7528\u7b80\u5355\u7684\u65b9\u6cd5\u7f16\u5199\u4ee3\u7801\u3002\u4e0d\u8981\u5f00\u59cb\u5904\u7406\u5e76\u884c\u6027\uff0c\u9664\u975e\u5b83\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\u3002\u60a8\u4ecd\u7136\u4f1a\u9047\u5230\u5e76\u884c\u6027\u3002\u5728\u672c\u7ae0\u4e2d\uff0c\u6211\u4eec\u5c06\u4ecb\u7ecd\u4e00\u4e9b\u4e3a\u5e76\u884c\u6267\u884c\u800c\u7f16\u5199\u7684Java\u5e93\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u60a8\u5fc5\u987b\u5bf9\u5b83\u6709\u8db3\u591f\u7684\u4e86\u89e3\uff0c\u4ee5\u4fbf\u8fdb\u884c\u57fa\u672c\u7684\u8ba8\u8bba\uff0c\u5e76\u907f\u514d\u51fa\u73b0\u9519\u8bef\u3002"),(0,r.kt)("p",null,"\u5728\u9605\u8bfb\u5e76\u53d1\u7f16\u7a0b\u8fd9\u4e00\u7ae0\u4e4b\u540e\uff0c\u60a8\u5c06\u66f4\u6df1\u5165\u5730\u7406\u89e3\u5b83(\u4f46\u662f\uff0c\u5509\uff0c\u8fd9\u8fd8\u8fdc\u8fdc\u4e0d\u591f\u3002\u53ea\u662f\u8fd9\u4e9b\u7684\u8bdd\uff0c\u5145\u5206\u7406\u89e3\u8fd9\u4e2a\u4e3b\u9898\u662f\u4e0d\u53ef\u80fd\u7684)\u3002\n\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u60a8\u53ea\u6709\u4e00\u4e2a\u5904\u7406\u5668\uff0c\u65e0\u8bba\u60a8\u662f\u5426\u663e\u5f0f\u5730\u5c1d\u8bd5\u5e76\u884c\uff0c\u5e76\u884c\u5b9e\u73b0\u662f\u60df\u4e00\u7684\u3001\u6700\u4f73\u7684\u6216\u6700\u7b26\u5408\u903b\u8f91\u7684\u9009\u62e9\u3002\u5b83\u662f\u4e00\u4e2a\u53ef\u4ee5\u4e00\u76f4\u4f7f\u7528\u7684\u5de5\u5177\uff0c\u6240\u4ee5\u60a8\u5fc5\u987b\u4e86\u89e3\u5b83\u7684\u76f8\u5173\u95ee\u9898\u3002"),(0,r.kt)("p",null,"\u6700\u597d\u4ece\u6570\u636e\u7684\u89d2\u5ea6\u6765\u8003\u8651\u5e76\u884c\u6027\u3002\u5bf9\u4e8e\u5927\u91cf\u6570\u636e(\u4ee5\u53ca\u53ef\u7528\u7684\u989d\u5916\u5904\u7406\u5668)\uff0c\u5e76\u884c\u53ef\u80fd\u4f1a\u6709\u6240\u5e2e\u52a9\u3002\u4f46\u60a8\u4e5f\u53ef\u80fd\u4f7f\u4e8b\u60c5\u53d8\u5f97\u66f4\u7cdf\u3002"),(0,r.kt)("p",null,"\u5728\u672c\u4e66\u7684\u5176\u4f59\u90e8\u5206\uff0c\u6211\u4eec\u5c06\u9047\u5230\u4e0d\u540c\u7684\u60c5\u51b5:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"1\u3001\u6240\u63d0\u4f9b\u7684\u60df\u4e00\u9009\u9879\u662f\u5e76\u884c\u7684\u3002\u8fd9\u5f88\u7b80\u5355\uff0c\u56e0\u4e3a\u6211\u4eec\u522b\u65e0\u9009\u62e9\uff0c\u53ea\u80fd\u4f7f\u7528\u5b83\u3002\u8fd9\u79cd\u60c5\u51b5\u662f\u6bd4\u8f83\u7f55\u89c1\u7684\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"2\u3001\u6709\u591a\u4e2a\u9009\u9879\uff0c\u4f46\u662f\u5e76\u884c\u7248\u672c(\u901a\u5e38\u662f\u6700\u65b0\u7684\u7248\u672c)\u88ab\u8bbe\u8ba1\u6210\u5728\u4efb\u4f55\u5730\u65b9\u90fd\u53ef\u4ee5\u4f7f\u7528(\u751a\u81f3\u5728\u90a3\u4e9b\u4e0d\u5173\u5fc3\u5e76\u884c\u6027\u7684\u4ee3\u7801\u4e2d)\uff0c\u5982\u6848\u4f8b#1\u3002\u6211\u4eec\u5c06\u6309\u9884\u671f\u4f7f\u7528\u5e76\u884c\u7248\u672c\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},"3\u3001\u6848\u4f8b1\u548c\u6848\u4f8b2\u5e76\u4e0d\u7ecf\u5e38\u53d1\u751f\u3002\u76f8\u53cd\uff0c\u60a8\u5c06\u9047\u5230\u67d0\u4e9b\u7b97\u6cd5\u7684\u4e24\u4e2a\u7248\u672c\uff0c\u4e00\u4e2a\u7528\u4e8e\u5e76\u884c\u4f7f\u7528\uff0c\u53e6\u4e00\u4e2a\u7528\u4e8e\u6b63\u5e38\u4f7f\u7528\u3002\u6211\u5c06\u63cf\u8ff0\u5e76\u884c\u7684\u4e00\u4e2a\uff0c\u4f46\u4e0d\u4f1a\u5728\u666e\u901a\u4ee3\u7801\u4e2d\u4f7f\u7528\u5b83\uff0c\u56e0\u4e3a\u5b83\u4e5f\u8bb8\u4f1a\u4ea7\u751f\u6240\u6709\u53ef\u80fd\u7684\u95ee\u9898\u3002"))),(0,r.kt)("p",null,"\u6211\u5efa\u8bae\u60a8\u5728\u81ea\u5df1\u7684\u4ee3\u7801\u4e2d\u91c7\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002"),(0,r.kt)("p",null,"[http://gee.cs.oswego.edu/dl/html/StreamParallelGuidance.html]","(\u8981\u8fdb\u4e00\u6b65\u4e86\u89e3\u4e3a\u4ec0\u4e48\u8fd9\u662f\u4e00\u4e2a\u96be\u9898\uff0c\u8bf7\u53c2\u9605Doug Lea\u7684\u6587\u7ae0\u3002)"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"parallelSetAll()")),(0,r.kt)("p",null,"\u6d41\u5f0f\u7f16\u7a0b\u4ea7\u751f\u4f18\u96c5\u7684\u4ee3\u7801\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u6211\u4eec\u60f3\u8981\u521b\u5efa\u4e00\u4e2a\u6570\u503c\u7531\u4ece\u96f6\u5f00\u59cb\u586b\u5145\u7684\u957f\u6570\u7ec4\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},"// arrays/CountUpward.java\n\nimport java.util.stream.LongStream;\n\npublic class CountUpward {\n    static long[] fillCounted(int size) {\n        return LongStream.iterate(0, i -> i + 1).limit(size).toArray();\n    }\n\n    public static void main(String[] args) {\n        long[] l1 = fillCounted(20); // No problem\n        show(l1);\n        // On my machine, this runs out of heap space:\n        // - long[] l2 = fillCounted(10_000_000);\n    }\n}\n\n/* Output:\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n16, 17, 18, 19]\n*/\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6d41")," \u5b9e\u9645\u4e0a\u53ef\u4ee5\u5b58\u50a8\u5230\u5c06\u8fd11000\u4e07\uff0c\u4f46\u662f\u4e4b\u540e\u5c31\u4f1a\u8017\u5c3d\u5806\u7a7a\u95f4\u3002\u5e38\u89c4\u7684 ",(0,r.kt)("strong",{parentName:"p"},"setAll()")," \u662f\u6709\u6548\u7684\uff0c\u4f46\u662f\u5982\u679c\u6211\u4eec\u80fd\u66f4\u5feb\u5730\u5904\u7406\u5982\u6b64\u5927\u91cf\u7684\u6570\u5b57\uff0c\u90a3\u5c31\u66f4\u597d\u4e86\u3002\n\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"setAll()")," \u521d\u59cb\u5316\u66f4\u5927\u7684\u6570\u7ec4\u3002\u5982\u679c\u901f\u5ea6\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\uff0c",(0,r.kt)("strong",{parentName:"p"},"Arrays.parallelSetAll()")," \u5c06(\u53ef\u80fd)\u66f4\u5feb\u5730\u6267\u884c\u521d\u59cb\u5316(\u8bf7\u8bb0\u4f4f\u5e76\u884c\u6027\u4e2d\u63cf\u8ff0\u7684\u95ee\u9898)\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},"\n// arrays/ParallelSetAll.java\n\nimport onjava.*;\nimport java.util.Arrays;\n\npublic class ParallelSetAll {\n    static final int SIZE = 10_000_000;\n\n    static void intArray() {\n        int[] ia = new int[SIZE];\n        Arrays.setAll(ia, new Rand.Pint()::get);\n        Arrays.parallelSetAll(ia, new Rand.Pint()::get);\n    }\n\n    static void longArray() {\n        long[] la = new long[SIZE];\n        Arrays.setAll(la, new Rand.Plong()::get);\n        Arrays.parallelSetAll(la, new Rand.Plong()::get);\n    }\n\n    public static void main(String[] args) {\n        intArray();\n        longArray();\n    }\n}\n")),(0,r.kt)("p",null,"\u6570\u7ec4\u5206\u914d\u548c\u521d\u59cb\u5316\u662f\u5728\u5355\u72ec\u7684\u65b9\u6cd5\u4e2d\u6267\u884c\u7684\uff0c\u56e0\u4e3a\u5982\u679c\u4e24\u4e2a\u6570\u7ec4\u90fd\u5728 ",(0,r.kt)("strong",{parentName:"p"},"main()")," \u4e2d\u5206\u914d\uff0c\u5b83\u4f1a\u8017\u5c3d\u5185\u5b58(\u81f3\u5c11\u5728\u6211\u7684\u673a\u5668\u4e0a\u662f\u8fd9\u6837\u3002\u8fd8\u6709\u4e00\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u544a\u8bc9Java\u5728\u542f\u52a8\u65f6\u5206\u914d\u66f4\u591a\u7684\u5185\u5b58)\u3002"),(0,r.kt)("h2",{id:"arrays\u5de5\u5177\u7c7b"},"Arrays\u5de5\u5177\u7c7b"),(0,r.kt)("p",null,"\u60a8\u5df2\u7ecf\u770b\u5230\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"java.util.Arrays")," \u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"fill()")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"setAll()/parallelSetAll()")," \u3002\u8be5\u7c7b\u5305\u542b\u8bb8\u591a\u5176\u4ed6\u6709\u7528\u7684 ",(0,r.kt)("strong",{parentName:"p"},"\u9759\u6001")," \u7a0b\u5e8f\u65b9\u6cd5\uff0c\u6211\u4eec\u5c06\u5bf9\u6b64\u8fdb\u884c\u7814\u7a76\u3002"),(0,r.kt)("p",null,"\u6982\u8ff0:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"asList()"),": \u83b7\u53d6\u4efb\u4f55\u5e8f\u5217\u6216\u6570\u7ec4\uff0c\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"\u5217\u8868\u96c6\u5408")," \uff08\u96c6\u5408\u7ae0\u8282\u4ecb\u7ecd\u4e86\u6b64\u65b9\u6cd5\uff09\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"copyOf()"),"\uff1a\u4ee5\u65b0\u7684\u957f\u5ea6\u521b\u5efa\u73b0\u6709\u6570\u7ec4\u7684\u65b0\u526f\u672c\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"copyOfRange()"),"\uff1a\u521b\u5efa\u73b0\u6709\u6570\u7ec4\u7684\u4e00\u90e8\u5206\u7684\u65b0\u526f\u672c\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"equals()"),"\uff1a\u6bd4\u8f83\u4e24\u4e2a\u6570\u7ec4\u662f\u5426\u76f8\u7b49\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"deepEquals()"),"\uff1a\u591a\u7ef4\u6570\u7ec4\u7684\u76f8\u7b49\u6027\u6bd4\u8f83\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"stream()"),"\uff1a\u751f\u6210\u6570\u7ec4\u5143\u7d20\u7684\u6d41\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"hashCode()"),"\uff1a\u751f\u6210\u6570\u7ec4\u7684\u54c8\u5e0c\u503c(\u60a8\u5c06\u5728\u9644\u5f55\u4e2d\u4e86\u89e3\u8fd9\u610f\u5473\u7740\u4ec0\u4e48:\u7406\u89e3equals()\u548chashCode())\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"deepHashCode()"),": \u591a\u7ef4\u6570\u7ec4\u7684\u54c8\u5e0c\u503c\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"sort()"),"\uff1a\u6392\u5e8f\u6570\u7ec4")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"parallelSort()"),"\uff1a\u5bf9\u6570\u7ec4\u8fdb\u884c\u5e76\u884c\u6392\u5e8f\uff0c\u4ee5\u63d0\u9ad8\u901f\u5ea6\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"binarySearch()"),"\uff1a\u5728\u5df2\u6392\u5e8f\u7684\u6570\u7ec4\u4e2d\u67e5\u627e\u5143\u7d20\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"parallelPrefix()"),"\uff1a\u4f7f\u7528\u63d0\u4f9b\u7684\u51fd\u6570\u5e76\u884c\u7d2f\u79ef(\u4ee5\u83b7\u5f97\u901f\u5ea6)\u3002\u57fa\u672c\u4e0a\uff0c\u5c31\u662f\u6570\u7ec4\u7684reduce()\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"spliterator()"),"\uff1a\u4ece\u6570\u7ec4\u4e2d\u4ea7\u751f\u4e00\u4e2aSpliterator;\u8fd9\u662f\u672c\u4e66\u6ca1\u6709\u6d89\u53ca\u5230\u7684\u6d41\u7684\u9ad8\u7ea7\u90e8\u5206\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"toString()"),"\uff1a\u4e3a\u6570\u7ec4\u751f\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u8868\u793a\u3002\u4f60\u5728\u6574\u4e2a\u7ae0\u8282\u4e2d\u7ecf\u5e38\u770b\u5230\u8fd9\u79cd\u7528\u6cd5\u3002")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"deepToString()"),"\uff1a\u4e3a\u591a\u7ef4\u6570\u7ec4\u751f\u6210\u4e00\u4e2a\u5b57\u7b26\u4e32\u3002\u4f60\u5728\u6574\u4e2a\u7ae0\u8282\u4e2d\u7ecf\u5e38\u770b\u5230\u8fd9\u79cd\u7528\u6cd5\u3002\u5bf9\u4e8e\u6240\u6709\u57fa\u672c\u7c7b\u578b\u548c\u5bf9\u8c61\uff0c\u6240\u6709\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f\u91cd\u8f7d\u7684\u3002"))),(0,r.kt)("h2",{id:"\u6570\u7ec4\u62f7\u8d1d"},"\u6570\u7ec4\u62f7\u8d1d"),(0,r.kt)("p",null,"\u4e0e\u4f7f\u7528for\u5faa\u73af\u624b\u5de5\u6267\u884c\u590d\u5236\u76f8\u6bd4\uff0c",(0,r.kt)("strong",{parentName:"p"},"copyOf()")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"copyOfRange()")," \u590d\u5236\u6570\u7ec4\u8981\u5feb\u5f97\u591a\u3002\u8fd9\u4e9b\u65b9\u6cd5\u88ab\u91cd\u8f7d\u4ee5\u5904\u7406\u6240\u6709\u7c7b\u578b\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u4ece\u590d\u5236 ",(0,r.kt)("strong",{parentName:"p"},"int")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"Integer")," \u6570\u7ec4\u5f00\u59cb:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/ArrayCopying.java\n// Demonstrate Arrays.copy() and Arrays.copyOf()\n\nimport onjava.*;\n\nimport java.util.Arrays;\n\nimport static onjava.ArrayShow.*;\n\nclass Sup {\n    // Superclass\n    private int id;\n\n    Sup(int n) {\n        id = n;\n    }\n\n    @Override\n    public String toString() {\n        return getClass().getSimpleName() + id;\n    }\n}\n\nclass Sub extends Sup { // Subclass\n\n    Sub(int n) {\n        super(n);\n    }\n}\n\npublic class ArrayCopying {\n    public static final int SZ = 15;\n\n    public static void main(String[] args) {\n        int[] a1 = new int[SZ];\n        Arrays.setAll(a1, new Count.Integer()::get);\n        show("a1", a1);\n        int[] a2 = Arrays.copyOf(a1, a1.length); // [1]\n        // Prove they are distinct arrays:\n        Arrays.fill(a1, 1);\n        show("a1", a1);\n        show("a2", a2);\n        // Create a shorter result:\n        a2 = Arrays.copyOf(a2, a2.length / 2); // [2]\n        show("a2", a2);\n        // Allocate more space:\n        a2 = Arrays.copyOf(a2, a2.length + 5);\n        show("a2", a2);\n        // Also copies wrapped arrays:\n        Integer[] a3 = new Integer[SZ]; // [3]\n        Arrays.setAll(a3, new Count.Integer()::get);\n        Integer[] a4 = Arrays.copyOfRange(a3, 4, 12);\n        show("a4", a4);\n        Sub[] d = new Sub[SZ / 2];\n        Arrays.setAll(d, Sub::new); // Produce Sup[] from Sub[]:\n        Sup[] b = Arrays.copyOf(d, d.length, Sup[].class); // [4]\n        show(b); // This "downcast" works fine:\n        Sub[] d2 = Arrays.copyOf(b, b.length, Sub[].class); // [5]\n        show(d2); // Bad "downcast" compiles but throws exception:\n        Sup[] b2 = new Sup[SZ / 2];\n        Arrays.setAll(b2, Sup::new);\n        try {\n            Sub[] d3 = Arrays.copyOf(b2, b2.length, Sub[].class); // [6]\n        } catch (Exception e) {\n            System.out.println(e);\n        }\n    }\n}\n/* Output: a1: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14] a1: [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]\n           a2:[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]a2:[0, 1, 2, 3, 4, 5, 6]a2:[\n           0, 1, 2, 3, 4, 5, 6, 0, 0, 0, 0, 0]a4:[4, 5, 6, 7, 8, 9, 10, 11][Sub0, Sub1, Sub2, Sub3, Sub4, Sub5, Sub6][\n           Sub0, Sub1, Sub2, Sub3, Sub4, Sub5, Sub6]java.lang.ArrayStoreException */\n\n')),(0,r.kt)("p",null,"[1]"," \u8fd9\u662f\u590d\u5236\u7684\u57fa\u672c\u65b9\u6cd5;\u53ea\u9700\u7ed9\u51fa\u8fd4\u56de\u7684\u590d\u5236\u6570\u7ec4\u7684\u5927\u5c0f\u3002\u8fd9\u5bf9\u4e8e\u7f16\u5199\u9700\u8981\u8c03\u6574\u5b58\u50a8\u5927\u5c0f\u7684\u7b97\u6cd5\u5f88\u6709\u5e2e\u52a9\u3002\u590d\u5236\u4e4b\u540e\uff0c\u6211\u4eec\u628aa1\u7684\u6240\u6709\u5143\u7d20\u90fd\u8bbe\u4e3a1\uff0c\u4ee5\u8bc1\u660ea1\u7684\u53d8\u5316\u4e0d\u4f1a\u5f71\u54cda2\u4e2d\u7684\u4efb\u4f55\u4e1c\u897f\u3002"),(0,r.kt)("p",null,"[2]"," \u901a\u8fc7\u66f4\u6539\u6700\u540e\u4e00\u4e2a\u53c2\u6570\uff0c\u6211\u4eec\u53ef\u4ee5\u7f29\u77ed\u6216\u5ef6\u957f\u8fd4\u56de\u7684\u590d\u5236\u6570\u7ec4\u3002"),(0,r.kt)("p",null,"[3]"," ",(0,r.kt)("strong",{parentName:"p"},"copyOf()")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"copyOfRange()")," \u4e5f\u53ef\u4ee5\u4f7f\u7528\u5305\u88c5\u7c7b\u578b\u3002",(0,r.kt)("strong",{parentName:"p"},"copyOfRange()")," \u9700\u8981\u4e00\u4e2a\u5f00\u59cb\u548c\u7ed3\u675f\u7d22\u5f15\u3002"),(0,r.kt)("p",null,"[4]"," ",(0,r.kt)("strong",{parentName:"p"},"copyOf()")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"copyOfRange()")," \u90fd\u6709\u4e00\u4e2a\u7248\u672c\uff0c\u8be5\u7248\u672c\u901a\u8fc7\u5728\u65b9\u6cd5\u8c03\u7528\u7684\u672b\u5c3e\u6dfb\u52a0\u76ee\u6807\u7c7b\u578b\u6765\u521b\u5efa\u4e0d\u540c\u7c7b\u578b\u7684\u6570\u7ec4\u3002\u6211\u9996\u5148\u60f3\u5230\u7684\u662f\uff0c\u8fd9\u53ef\u80fd\u662f\u4e00\u79cd\u4ece\u539f\u751f\u6570\u7ec4\u751f\u6210\u5305\u88c5\u6570\u7ec4\u7684\u65b9\u6cd5\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002\n\u4f46\u8fd9\u6ca1\u7528\u3002\u5b83\u7684\u5b9e\u9645\u7528\u9014\u662f\u201c\u5411\u4e0a\u8f6c\u6362\u201d\u548c\u201c\u5411\u4e0b\u8f6c\u6362\u201d\u6570\u7ec4\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u60a8\u6709\u4e00\u4e2a\u5b50\u7c7b\u578b(\u6d3e\u751f\u7c7b\u578b)\u7684\u6570\u7ec4\uff0c\u800c\u60a8\u60f3\u8981\u4e00\u4e2a\u57fa\u7c7b\u578b\u7684\u6570\u7ec4\uff0c\u90a3\u4e48\u8fd9\u4e9b\u65b9\u6cd5\u5c06\u751f\u6210\u6240\u9700\u7684\u6570\u7ec4\u3002"),(0,r.kt)("p",null,"[5]"," \u60a8\u751a\u81f3\u53ef\u4ee5\u6210\u529f\u5730\u201c\u5411\u4e0b\u5f3a\u5236\u8f6c\u6362\u201d\uff0c\u5e76\u4ece\u8d85\u7c7b\u578b\u7684\u6570\u7ec4\u751f\u6210\u5b50\u7c7b\u578b\u7684\u6570\u7ec4\u3002\u8fd9\u4e2a\u7248\u672c\u8fd0\u884c\u826f\u597d\uff0c\u56e0\u4e3a\u6211\u4eec\u53ea\u662f\u201cupcast\u201d\u3002"),(0,r.kt)("p",null,"[6]"," \u8fd9\u4e2a\u201c\u6570\u7ec4\u8f6c\u6362\u201d\u5c06\u7f16\u8bd1\uff0c\u4f46\u662f\u5982\u679c\u7c7b\u578b\u4e0d\u517c\u5bb9\uff0c\u60a8\u5c06\u5f97\u5230\u4e00\u4e2a\u8fd0\u884c\u65f6\u5f02\u5e38\u3002\u5728\u8fd9\u91cc\uff0c\u5f3a\u5236\u5c06\u57fa\u7c7b\u578b\u8f6c\u6362\u4e3a\u6d3e\u751f\u7c7b\u578b\u662f\u975e\u6cd5\u7684\uff0c\u56e0\u4e3a\u6d3e\u751f\u5bf9\u8c61\u4e2d\u53ef\u80fd\u6709\u57fa\u5bf9\u8c61\u4e2d\u6ca1\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002"),(0,r.kt)("p",null,"\u5b9e\u4f8b\u8868\u660e\uff0c\u539f\u751f\u6570\u7ec4\u548c\u5bf9\u8c61\u6570\u7ec4\u90fd\u53ef\u4ee5\u88ab\u590d\u5236\u3002\u4f46\u662f\uff0c\u5982\u679c\u590d\u5236\u5bf9\u8c61\u7684\u6570\u7ec4\uff0c\u90a3\u4e48\u53ea\u590d\u5236\u5f15\u7528\u2014\u4e0d\u590d\u5236\u5bf9\u8c61\u672c\u8eab\u3002\u8fd9\u79f0\u4e3a\u6d45\u62f7\u8d1d(\u6709\u5173\u66f4\u591a\u7ec6\u8282\uff0c\u8bf7\u53c2\u9605\u9644\u5f55:\u4f20\u9012\u548c\u8fd4\u56de\u5bf9\u8c61)\u3002"),(0,r.kt)("p",null,"\u8fd8\u6709\u4e00\u4e2a\u65b9\u6cd5 ",(0,r.kt)("strong",{parentName:"p"},"System.arraycopy()")," \uff0c\u5b83\u5c06\u4e00\u4e2a\u6570\u7ec4\u590d\u5236\u5230\u53e6\u4e00\u4e2a\u5df2\u7ecf\u5206\u914d\u7684\u6570\u7ec4\u4e2d\u3002\u8fd9\u5c06\u4e0d\u4f1a\u6267\u884c\u81ea\u52a8\u88c5\u7bb1\u6216\u81ea\u52a8\u5378\u8f7d\u2014\u4e24\u4e2a\u6570\u7ec4\u5fc5\u987b\u662f\u5b8c\u5168\u76f8\u540c\u7684\u7c7b\u578b\u3002"),(0,r.kt)("h2",{id:"\u6570\u7ec4\u6bd4\u8f83"},"\u6570\u7ec4\u6bd4\u8f83"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"\u6570\u7ec4")," \u63d0\u4f9b\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u6765\u6bd4\u8f83\u4e00\u7ef4\u6570\u7ec4\uff0c\u4ee5\u53ca ",(0,r.kt)("strong",{parentName:"p"},"deepEquals()")," \u6765\u6bd4\u8f83\u591a\u7ef4\u6570\u7ec4\u3002\u5bf9\u4e8e\u6240\u6709\u539f\u751f\u7c7b\u578b\u548c\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u90fd\u662f\u91cd\u8f7d\u7684\u3002"),(0,r.kt)("p",null,"\u6570\u7ec4\u76f8\u7b49\u7684\u542b\u4e49\uff1a\u6570\u7ec4\u5fc5\u987b\u6709\u76f8\u540c\u6570\u91cf\u7684\u5143\u7d20\uff0c\u5e76\u4e14\u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u4e0e\u53e6\u4e00\u4e2a\u6570\u7ec4\u4e2d\u7684\u5bf9\u5e94\u5143\u7d20\u76f8\u7b49\uff0c\u5bf9\u6bcf\u4e2a\u5143\u7d20\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"equals()"),"(\u5bf9\u4e8e\u539f\u751f\u7c7b\u578b\uff0c\u4f7f\u7528\u539f\u751f\u7c7b\u578b\u7684\u5305\u88c5\u7c7b\u7684 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u65b9\u6cd5;\u4f8b\u5982\uff0cint\u7684Integer.equals()\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/ComparingArrays.java\n// Using Arrays.equals()\n\nimport java.util.*;\nimport onjava.*;\n\npublic class ComparingArrays {\n    public static final int SZ = 15;\n\n    static String[][] twoDArray() {\n        String[][] md = new String[5][];\n        Arrays.setAll(md, n -> new String[n]);\n        for (int i = 0; i < md.length; i++) Arrays.setAll(md[i], new Rand.String()::get);\n        return md;\n    }\n\n    public static void main(String[] args) {\n        int[] a1 = new int[SZ], a2 = new int[SZ];\n        Arrays.setAll(a1, new Count.Integer()::get);\n        Arrays.setAll(a2, new Count.Integer()::get);\n        System.out.println("a1 == a2: " + Arrays.equals(a1, a2));\n        a2[3] = 11;\n        System.out.println("a1 == a2: " + Arrays.equals(a1, a2));\n        Integer[] a1w = new Integer[SZ], a2w = new Integer[SZ];\n        Arrays.setAll(a1w, new Count.Integer()::get);\n        Arrays.setAll(a2w, new Count.Integer()::get);\n        System.out.println("a1w == a2w: " + Arrays.equals(a1w, a2w));\n        a2w[3] = 11;\n        System.out.println("a1w == a2w: " + Arrays.equals(a1w, a2w));\n        String[][] md1 = twoDArray(), md2 = twoDArray();\n        System.out.println(Arrays.deepToString(md1));\n        System.out.println("deepEquals(md1, md2): " + Arrays.deepEquals(md1, md2));\n        System.out.println("md1 == md2: " + Arrays.equals(md1, md2));\n        md1[4][1] = "#$#$#$#";\n        System.out.println(Arrays.deepToString(md1));\n        System.out.println("deepEquals(md1, md2): " + Arrays.deepEquals(md1, md2));\n    }\n}\n\n/* Output:\na1 == a2: true\na1 == a2: false\na1w == a2w: true\na1w == a2w: false\n[[], [btpenpc], [btpenpc, cuxszgv], [btpenpc, cuxszgv,\n gmeinne], [btpenpc, cuxszgv, gmeinne, eloztdv]]\n deepEquals(md1, md2): true\n md1 == md2: false\n [[], [btpenpc], [btpenpc, cuxszgv], [btpenpc, cuxszgv,\n gmeinne], [btpenpc, #$#$#$#, gmeinne, eloztdv]]\n deepEquals(md1, md2): false\n */\n')),(0,r.kt)("p",null,"\u6700\u521d\uff0ca1\u548ca2\u662f\u5b8c\u5168\u76f8\u7b49\u7684\uff0c\u6240\u4ee5\u8f93\u51fa\u662ftrue\uff0c\u4f46\u662f\u4e4b\u540e\u5176\u4e2d\u4e00\u4e2a\u5143\u7d20\u6539\u53d8\u4e86\uff0c\u8fd9\u4f7f\u5f97\u7ed3\u679c\u4e3afalse\u3002a1w\u548ca2w\u662f\u5bf9\u4e00\u4e2a\u5c01\u88c5\u7c7b\u578b\u6570\u7ec4\u91cd\u590d\u8be5\u7ec3\u4e60\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"md1")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"md2")," \u662f\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},"twoDArray()")," \u4ee5\u76f8\u540c\u65b9\u5f0f\u521d\u59cb\u5316\u7684\u591a\u7ef4\u5b57\u7b26\u4e32\u6570\u7ec4\u3002\u6ce8\u610f\uff0c",(0,r.kt)("strong",{parentName:"p"},"deepEquals()")," \u8fd4\u56de ",(0,r.kt)("strong",{parentName:"p"},"true"),"\uff0c\u56e0\u4e3a\u5b83\u6267\u884c\u4e86\u9002\u5f53\u7684\u6bd4\u8f83\uff0c\u800c\u666e\u901a\u7684 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u9519\u8bef\u5730\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"p"},"false"),"\u3002\u5982\u679c\u6211\u4eec\u66f4\u6539\u6570\u7ec4\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c",(0,r.kt)("strong",{parentName:"p"},"deepEquals()")," \u5c06\u68c0\u6d4b\u5b83\u3002"),(0,r.kt)("h2",{id:"\u6d41\u548c\u6570\u7ec4"},"\u6d41\u548c\u6570\u7ec4"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"stream()")," \u65b9\u6cd5\u5f88\u5bb9\u6613\u4ece\u67d0\u4e9b\u7c7b\u578b\u7684\u6570\u7ec4\u4e2d\u751f\u6210\u5143\u7d20\u6d41\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/StreamFromArray.java\n\nimport java.util.*;\nimport onjava.*;\n\npublic class StreamFromArray {\n    public static void main(String[] args) {\n        String[] s = new Rand.String().array(10);\n        Arrays.stream(s).skip(3).limit(5).map(ss -> ss + "!").forEach(System.out::println);\n        int[] ia = new Rand.Pint().array(10);\n        Arrays.stream(ia).skip(3).limit(5)\n                .map(i -> i * 10).forEach(System.out::println);\n        Arrays.stream(new long[10]);\n        Arrays.stream(new double[10]);\n        // Only int, long and double work:\n        // - Arrays.stream(new boolean[10]);\n        // - Arrays.stream(new byte[10]);\n        // - Arrays.stream(new char[10]);\n        // - Arrays.stream(new short[10]);\n        // - Arrays.stream(new float[10]);\n        // For the other types you must use wrapped arrays:\n        float[] fa = new Rand.Pfloat().array(10);\n        Arrays.stream(ConvertTo.boxed(fa));\n        Arrays.stream(new Rand.Float().array(10));\n    }\n}\n/* Output:\n    eloztdv!\n    ewcippc!\n    ygpoalk!\n    ljlbynx!\n    taprwxz!\n    47200\n    61770\n    84790\n    66560\n    37680\n*/\n')),(0,r.kt)("p",null,"\u53ea\u6709\u201c\u539f\u751f\u7c7b\u578b\u201d ",(0,r.kt)("strong",{parentName:"p"},"int"),"\u3001",(0,r.kt)("strong",{parentName:"p"},"long")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"double")," \u53ef\u4ee5\u4e0e ",(0,r.kt)("strong",{parentName:"p"},"Arrays.stream()")," \u4e00\u8d77\u4f7f\u7528;\u5bf9\u4e8e\u5176\u4ed6\u7684\uff0c\u60a8\u5fc5\u987b\u4ee5\u67d0\u79cd\u65b9\u5f0f\u83b7\u5f97\u4e00\u4e2a\u5305\u88c5\u7c7b\u578b\u7684\u6570\u7ec4\u3002"),(0,r.kt)("p",null,"\u901a\u5e38\uff0c\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a\u6d41\u6765\u751f\u6210\u6240\u9700\u7684\u7ed3\u679c\u8981\u6bd4\u76f4\u63a5\u64cd\u4f5c\u6570\u7ec4\u5bb9\u6613\u5f97\u591a\u3002\u8bf7\u6ce8\u610f\uff0c\u5373\u4f7f\u6d41\u5df2\u7ecf\u201c\u7528\u5b8c\u201d(\u60a8\u4e0d\u80fd\u91cd\u590d\u4f7f\u7528\u5b83)\uff0c\u60a8\u4ecd\u7136\u62e5\u6709\u8be5\u6570\u7ec4\uff0c\u56e0\u6b64\u60a8\u53ef\u4ee5\u4ee5\u5176\u4ed6\u65b9\u5f0f\u4f7f\u7528\u5b83----\u5305\u62ec\u751f\u6210\u53e6\u4e00\u4e2a\u6d41\u3002"),(0,r.kt)("h2",{id:"\u6570\u7ec4\u6392\u5e8f"},"\u6570\u7ec4\u6392\u5e8f"),(0,r.kt)("p",null,"\u6839\u636e\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u6267\u884c\u6bd4\u8f83\u6392\u5e8f\u3002\u4e00\u79cd\u65b9\u6cd5\u662f\u4e3a\u4e0d\u540c\u7684\u7c7b\u578b\u7f16\u5199\u5bf9\u5e94\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u4f46\u662f\u8fd9\u6837\u7684\u4ee3\u7801\u4e0d\u80fd\u590d\u7528\u3002"),(0,r.kt)("p",null,"\u7f16\u7a0b\u8bbe\u8ba1\u7684\u4e00\u4e2a\u4e3b\u8981\u76ee\u6807\u662f\u201c\u5c06\u6613\u53d8\u7684\u5143\u7d20\u4e0e\u7a33\u5b9a\u7684\u5143\u7d20\u5206\u5f00\u201d\uff0c\u5728\u8fd9\u91cc\uff0c\u4fdd\u6301\u4e0d\u53d8\u7684\u4ee3\u7801\u662f\u4e00\u822c\u7684\u6392\u5e8f\u7b97\u6cd5\uff0c\u4f46\u662f\u53d8\u5316\u7684\u662f\u5bf9\u8c61\u7684\u6bd4\u8f83\u65b9\u5f0f\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\u7b56\u7565\u8bbe\u8ba1\u6a21\u5f0f\u800c\u4e0d\u662f\u5c06\u6bd4\u8f83\u4ee3\u7801\u653e\u5165\u8bb8\u591a\u4e0d\u540c\u7684\u6392\u5e8f\u6e90\u7801\u4e2d\u3002\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u65f6\uff0c\u53d8\u5316\u7684\u4ee3\u7801\u90e8\u5206\u88ab\u5c01\u88c5\u5728\u4e00\u4e2a\u5355\u72ec\u7684\u7c7b(\u7b56\u7565\u5bf9\u8c61)\u4e2d\u3002"),(0,r.kt)("p",null,"\u60a8\u5c06\u4e00\u4e2a\u7b56\u7565\u5bf9\u8c61\u4ea4\u7ed9\u76f8\u540c\u7684\u4ee3\u7801\uff0c\u8be5\u4ee3\u7801\u4f7f\u7528\u7b56\u7565\u6a21\u5f0f\u6765\u5b9e\u73b0\u5176\u7b97\u6cd5\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u60a8\u5c06\u4f7f\u7528\u76f8\u540c\u7684\u6392\u5e8f\u4ee3\u7801\uff0c\u4f7f\u4e0d\u540c\u7684\u5bf9\u8c61\u8868\u8fbe\u4e0d\u540c\u7684\u6bd4\u8f83\u65b9\u5f0f\u3002"),(0,r.kt)("p",null,"Java\u6709\u4e24\u79cd\u65b9\u5f0f\u63d0\u4f9b\u6bd4\u8f83\u529f\u80fd\u3002\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\u901a\u8fc7\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"java.lang.Comparable")," \u63a5\u53e3\u7684\u539f\u751f\u65b9\u6cd5\u3002\u8fd9\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u53ea\u542b\u6709\u4e00\u4e2a\u65b9\u6cd5 ",(0,r.kt)("strong",{parentName:"p"},"compareTo()"),"\u3002\u8be5\u65b9\u6cd5\u63a5\u53d7\u53e6\u4e00\u4e2a\u4e0e\u53c2\u6570\u7c7b\u578b\u76f8\u540c\u7684\u5bf9\u8c61\u4f5c\u4e3a\u53c2\u6570\uff0c\u5982\u679c\u5f53\u524d\u5bf9\u8c61\u5c0f\u4e8e\u53c2\u6570\uff0c\u5219\u4ea7\u751f\u4e00\u4e2a\u8d1f\u503c;\u5982\u679c\u53c2\u6570\u76f8\u7b49\uff0c\u5219\u4ea7\u751f\u96f6\u503c;\u5982\u679c\u5f53\u524d\u5bf9\u8c61\u5927\u4e8e\u53c2\u6570\uff0c\u5219\u4ea7\u751f\u4e00\u4e2a\u6b63\u503c\u3002"),(0,r.kt)("p",null,"\u8fd9\u91cc\u6709\u4e00\u4e2a\u7c7b\uff0c\u5b83\u5b9e\u73b0\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Comparable")," \u63a5\u53e3\u5e76\u6f14\u793a\u4e86\u53ef\u6bd4\u6027\uff0c\u800c\u4e14\u4f7f\u7528Java\u6807\u51c6\u5e93\u65b9\u6cd5 ",(0,r.kt)("strong",{parentName:"p"},"Arrays.sort()"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/CompType.java\n// Implementing Comparable in a class\n\nimport onjava.*;\n\nimport java.util.Arrays;\nimport java.util.SplittableRandom;\n\nimport static onjava.ArrayShow.*;\n\npublic class CompType implements Comparable<CompType> {\n    private static int count = 1;\n    private static SplittableRandom r = new SplittableRandom(47);\n    int i;\n    int j;\n\n    public CompType(int n1, int n2) {\n        i = n1;\n        j = n2;\n    }\n\n    public static CompType get() {\n        return new CompType(r.nextInt(100), r.nextInt(100));\n    }\n\n    public static void main(String[] args) {\n        CompType[] a = new CompType[12];\n        Arrays.setAll(a, n -> get());\n        show("Before sorting", a);\n        Arrays.sort(a);\n        show("After sorting", a);\n    }\n\n    @Override\n    public String toString() {\n        String result = "[i = " + i + ", j = " + j + "]";\n        if (count++ % 3 == 0) result += "\\n";\n        return result;\n    }\n\n    @Override\n    public int compareTo(CompType rv) {\n        return (i < rv.i ? -1 : (i == rv.i ? 0 : 1));\n    }\n}\n/* Output:\nBefore sorting: [[i = 35, j = 37], [i = 41, j = 20], [i = 77, j = 79] ,\n                [i = 56, j = 68], [i = 48, j = 93],\n                [i = 70, j = 7] , [i = 0, j = 25],\n                [i = 62, j = 34], [i = 50, j = 82] ,\n                [i = 31, j = 67], [i = 66, j = 54],\n                [i = 21, j = 6] ]\nAfter sorting: [[i = 0, j = 25], [i = 21, j = 6], [i = 31, j = 67] ,\n               [i = 35, j = 37], [i = 41, j = 20], [i = 48, j = 93] ,\n               [i = 50, j = 82], [i = 56, j = 68], [i = 62, j = 34] ,\n               [i = 66, j = 54], [i = 70, j = 7], [i = 77, j = 79] ]\n*/\n')),(0,r.kt)("p",null,"\u5f53\u60a8\u5b9a\u4e49\u6bd4\u8f83\u65b9\u6cd5\u65f6\uff0c\u60a8\u6709\u8d23\u4efb\u51b3\u5b9a\u5c06\u4e00\u4e2a\u5bf9\u8c61\u4e0e\u53e6\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u6bd4\u8f83\u610f\u5473\u7740\u4ec0\u4e48\u3002\u8fd9\u91cc\uff0c\u5728\u6bd4\u8f83\u4e2d\u53ea\u4f7f\u7528i\u503c\u548cj\u503c\n\u5c06\u88ab\u5ffd\u7565\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"get()")," \u65b9\u6cd5\u901a\u8fc7\u4f7f\u7528\u968f\u673a\u503c\u521d\u59cb\u5316CompType\u5bf9\u8c61\u6765\u6784\u5efa\u5b83\u4eec\u3002\u5728 ",(0,r.kt)("strong",{parentName:"p"},"main()")," \u4e2d\uff0c",(0,r.kt)("strong",{parentName:"p"},"get()")," \u4e0e ",(0,r.kt)("strong",{parentName:"p"},"Arrays.setAll()")," \u4e00\u8d77\u4f7f\u7528\uff0c\u4ee5\u586b\u5145\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"CompType\u7c7b\u578b")," \u6570\u7ec4\uff0c\u7136\u540e\u5bf9\u5176\u6392\u5e8f\u3002\u5982\u679c\u6ca1\u6709\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"Comparable\u63a5\u53e3"),"\uff0c\u90a3\u4e48\u5f53\u60a8\u8bd5\u56fe\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"p"},"sort()")," \u65f6\uff0c\u60a8\u5c06\u5728\u8fd0\u884c\u65f6\u83b7\u5f97\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"ClassCastException")," \u3002\u8fd9\u662f\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"sort()")," \u5c06\u5176\u53c2\u6570\u8f6c\u6362\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Comparable\u7c7b\u578b"),"\u3002"),(0,r.kt)("p",null,"\u73b0\u5728\u5047\u8bbe\u6709\u4eba\u7ed9\u4e86\u4f60\u4e00\u4e2a\u6ca1\u6709\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"Comparable\u63a5\u53e3")," \u7684\u7c7b\uff0c\u6216\u8005\u7ed9\u4e86\u4f60\u4e00\u4e2a\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"Comparable\u63a5\u53e3")," \u7684\u7c7b\uff0c\u4f46\u662f\u4f60\u4e0d\u559c\u6b22\u5b83\u7684\u5de5\u4f5c\u65b9\u5f0f\u800c\u613f\u610f\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u5bf9\u4e8e\u6b64\u7c7b\u578b\u7684\u6bd4\u8f83\u65b9\u6cd5\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u521b\u5efa\u4e00\u4e2a\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"Comparator")," \u63a5\u53e3\u7684\u5355\u72ec\u7684\u7c7b(\u5728\u96c6\u5408\u4e00\u7ae0\u4e2d\u7b80\u8981\u4ecb\u7ecd)\u3002\u5b83\u6709\u4e24\u4e2a\u65b9\u6cd5\uff0c",(0,r.kt)("strong",{parentName:"p"},"compare()")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"equals()"),"\u3002\u4f46\u662f\uff0c\u9664\u4e86\u7279\u6b8a\u7684\u6027\u80fd\u9700\u6c42\u5916\uff0c\u60a8\u4e0d\u9700\u8981\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"equals()"),"\uff0c\u56e0\u4e3a\u65e0\u8bba\u4f55\u65f6\u521b\u5efa\u4e00\u4e2a\u7c7b\uff0c\u5b83\u90fd\u662f\u9690\u5f0f\u5730\u7ee7\u627f\u81ea ",(0,r.kt)("strong",{parentName:"p"},"Object"),"\uff0c",(0,r.kt)("strong",{parentName:"p"},"Object")," \u6709\u4e00\u4e2aequals()\u3002\u60a8\u53ef\u4ee5\u53ea\u4f7f\u7528\u9ed8\u8ba4\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Object equals()")," \u6765\u6ee1\u8db3\u63a5\u53e3\u7684\u89c4\u8303\u3002"),(0,r.kt)("p",null,"\u96c6\u5408\u7c7b(\u6ce8\u610f\u590d\u6570;\u6211\u4eec\u5c06\u5728\u4e0b\u4e00\u7ae0\u8282\u8ba8\u8bba\u5b83) \u5305\u542b\u4e00\u4e2a\u65b9\u6cd5 ",(0,r.kt)("strong",{parentName:"p"},"reverseOrder()"),"\uff0c\u5b83\u751f\u6210\u4e00\u4e2a\u6765 ",(0,r.kt)("strong",{parentName:"p"},"Comparator"),"\uff08\u6bd4\u8f83\u5668\uff09\u53cd\u8f6c\u81ea\u7136\u6392\u5e8f\u987a\u5e8f\u3002\u8fd9\u53ef\u4ee5\u5e94\u7528\u5230\u6bd4\u8f83\u5bf9\u8c61\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/Reverse.java\n// The Collections.reverseOrder() Comparator\n\nimport onjava.*;\n\nimport java.util.Arrays;\nimport java.util.Collections;\n\nimport static onjava.ArrayShow.*;\n\npublic class Reverse {\n    public static void main(String[] args) {\n        CompType[] a = new CompType[12];\n        Arrays.setAll(a, n -> CompType.get());\n        show("Before sorting", a);\n        Arrays.sort(a, Collections.reverseOrder());\n        show("After sorting", a);\n    }\n}\n/* Output:\nBefore sorting: [[i = 35, j = 37], [i = 41, j = 20],\n                [i = 77, j = 79] , [i = 56, j = 68],\n                [i = 48, j = 93], [i = 70, j = 7],\n                [i = 0, j = 25], [i = 62, j = 34],\n                [i = 50, j = 82] , [i = 31, j = 67],\n                [i = 66, j = 54], [i = 21, j = 6] ]\nAfter sorting: [[i = 77, j = 79], [i = 70, j = 7],\n                [i = 66, j = 54] , [i = 62, j = 34],\n                [i = 56, j = 68], [i = 50, j = 82] ,\n                [i = 48, j = 93], [i = 41, j = 20],\n                [i = 35, j = 37] , [i = 31, j = 67],\n                [i = 21, j = 6], [i = 0, j = 25] ]\n*/\n')),(0,r.kt)("p",null,"\u60a8\u8fd8\u53ef\u4ee5\u7f16\u5199\u81ea\u5df1\u7684\u6bd4\u8f83\u5668\u3002\u8fd9\u4e2a\u6bd4\u8f83CompType\u5bf9\u8c61\u57fa\u4e8e\u5b83\u4eec\u7684j\u503c\u800c\u4e0d\u662f\u5b83\u4eec\u7684i\u503c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/ComparatorTest.java\n// Implementing a Comparator for a class\n\nimport onjava.*;\n\nimport java.util.Arrays;\nimport java.util.Comparator;\n\nimport static onjava.ArrayShow.*;\n\nclass CompTypeComparator implements Comparator<CompType> {\n    public int compare(CompType o1, CompType o2) {\n        return (o1.j < o2.j ? -1 : (o1.j == o2.j ? 0 : 1));\n    }\n}\n\npublic class ComparatorTest {\n    public static void main(String[] args) {\n        CompType[] a = new CompType[12];\n        Arrays.setAll(a, n -> CompType.get());\n        show("Before sorting", a);\n        Arrays.sort(a, new CompTypeComparator());\n        show("After sorting", a);\n    }\n}\n/* Output:\nBefore sorting:[[i = 35, j = 37], [i = 41, j = 20], [i = 77, j = 79] ,\n                [i = 56, j = 68], [i = 48, j = 93], [i = 70, j = 7] ,\n                [i = 0, j = 25], [i = 62, j = 34], [i = 50, j = 82],\n                [i = 31, j = 67], [i = 66, j = 54], [i = 21, j = 6] ]\nAfter sorting: [[i = 21, j = 6], [i = 70, j = 7], [i = 41, j = 20] ,\n                [i = 0, j = 25], [i = 62, j = 34], [i = 35, j = 37] ,\n                [i = 66, j = 54], [i = 31, j = 67], [i = 56, j = 68] ,\n                [i = 77, j = 79], [i = 50, j = 82], [i = 48, j = 93] ]\n*/\n')),(0,r.kt)("h2",{id:"arrayssort-\u7684\u4f7f\u7528"},"Arrays.sort \u7684\u4f7f\u7528"),(0,r.kt)("p",null,"\u4f7f\u7528\u5185\u7f6e\u7684\u6392\u5e8f\u65b9\u6cd5\uff0c\u60a8\u53ef\u4ee5\u5bf9\u5b9e\u73b0\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Comparable")," \u63a5\u53e3\u6216\u5177\u6709 ",(0,r.kt)("strong",{parentName:"p"},"Comparator")," \u7684\u4efb\u4f55\u5bf9\u8c61\u6570\u7ec4 \u6216 \u4efb\u4f55\u539f\u751f\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\u3002\u8fd9\u91cc\u6211\u4eec\u751f\u6210\u4e00\u4e2a\u968f\u673a\u5b57\u7b26\u4e32\u5bf9\u8c61\u6570\u7ec4\u5e76\u5bf9\u5176\u6392\u5e8f:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/StringSorting.java\n// Sorting an array of Strings\n\nimport onjava.*;\n\nimport java.util.Arrays;\nimport java.util.Collections;\n\nimport static onjava.ArrayShow.*;\n\npublic class StringSorting {\n    public static void main(String[] args) {\n        String[] sa = new Rand.String().array(20);\n        show("Before sort", sa);\n        Arrays.sort(sa);\n        show("After sort", sa);\n        Arrays.sort(sa, Collections.reverseOrder());\n        show("Reverse sort", sa);\n        Arrays.sort(sa, String.CASE_INSENSITIVE_ORDER);\n        show("Case-insensitive sort", sa);\n    }\n}\n/* Output:\nBefore sort: [btpenpc, cuxszgv, gmeinne, eloztdv, ewcippc,\n            ygpoalk, ljlbynx, taprwxz, bhmupju, cjwzmmr,\n            anmkkyh, fcjpthl, skddcat, jbvlgwc, mvducuj,\n            ydpulcq, zehpfmm, zrxmclh, qgekgly, hyoubzl]\n\nAfter sort: [anmkkyh, bhmupju, btpenpc, cjwzmmr, cuxszgv,\n            eloztdv, ewcippc, fcjpthl, gmeinne, hyoubzl,\n            jbvlgwc, ljlbynx, mvducuj, qgekgly, skddcat,\n            taprwxz, ydpulcq, ygpoalk, zehpfmm, zrxmclh]\n\nReverse sort: [zrxmclh, zehpfmm, ygpoalk, ydpulcq,taprwxz,\n            skddcat, qgekgly, mvducuj, ljlbynx, jbvlgwc,\n            hyoubzl, gmeinne, fcjpthl, ewcippc, eloztdv,\n            cuxszgv, cjwzmmr, btpenpc, bhmupju, anmkkyh]\n\nCase-insensitive sort: [anmkkyh, bhmupju, btpenpc, cjwzmmr,\n                cuxszgv, eloztdv, ewcippc, fcjpthl, gmeinne,\n                hyoubzl, jbvlgwc, ljlbynx, mvducuj, qgekgly,\n                skddcat, taprwxz, ydpulcq, ygpoalk, zehpfmm, zrxmclh]\n*/\n')),(0,r.kt)("p",null,"\u6ce8\u610f\u5b57\u7b26\u4e32\u6392\u5e8f\u7b97\u6cd5\u4e2d\u7684\u8f93\u51fa\u3002\u5b83\u662f\u5b57\u5178\u5f0f\u7684\uff0c\u6240\u4ee5\u5b83\u628a\u6240\u6709\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd\u653e\u5728\u524d\u9762\uff0c\u7136\u540e\u662f\u6240\u6709\u4ee5\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934\u7684\u5355\u8bcd\u3002(\u7535\u8bdd\u7c3f\u901a\u5e38\u662f\u8fd9\u6837\u5206\u7c7b\u7684\u3002)\u65e0\u8bba\u5927\u5c0f\u5199\uff0c\u8981\u5c06\u5355\u8bcd\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u8bf7\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"String.CASE_INSENSITIVE_ORDER")," \uff0c\u5982\u5bf9sort()\u7684\u6700\u540e\u4e00\u6b21\u8c03\u7528\u6240\u793a\u3002"),(0,r.kt)("p",null,"Java\u6807\u51c6\u5e93\u4e2d\u4f7f\u7528\u7684\u6392\u5e8f\u7b97\u6cd5\u88ab\u8bbe\u8ba1\u4e3a\u6700\u9002\u5408\u60a8\u6b63\u5728\u6392\u5e8f\u7684\u7c7b\u578b----\u539f\u751f\u7c7b\u578b\u7684\u5feb\u901f\u6392\u5e8f\u548c\u5bf9\u8c61\u7684\u5f52\u5e76\u6392\u5e8f\u3002"),(0,r.kt)("h2",{id:"\u5e76\u884c\u6392\u5e8f"},"\u5e76\u884c\u6392\u5e8f"),(0,r.kt)("p",null,"\u5982\u679c\u6392\u5e8f\u6027\u80fd\u662f\u4e00\u4e2a\u95ee\u9898\uff0c\u90a3\u4e48\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Java 8 parallelSort()"),"\uff0c\u5b83\u4e3a\u6240\u6709\u4e0d\u53ef\u9884\u89c1\u7684\u60c5\u51b5(\u5305\u62ec\u6570\u7ec4\u7684\u6392\u5e8f\u533a\u57df\u6216\u4f7f\u7528\u4e86\u6bd4\u8f83\u5668)\u63d0\u4f9b\u4e86\u91cd\u8f7d\u7248\u672c\u3002\u4e3a\u4e86\u67e5\u770b\u76f8\u6bd4\u4e8e\u666e\u901a\u7684sort(), ",(0,r.kt)("strong",{parentName:"p"},"parallelSort()")," \u7684\u4f18\u70b9\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u7528\u6765\u9a8c\u8bc1\u4ee3\u7801\u65f6\u7684 ",(0,r.kt)("strong",{parentName:"p"},"JMH"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// arrays/jmh/ParallelSort.java\npackage arrays.jmh;\n\nimport onjava.*;\nimport org.openjdk.jmh.annotations.*;\n\nimport java.util.Arrays;\n\n@State(Scope.Thread)\npublic class ParallelSort {\n    private long[] la;\n\n    @Setup\n    public void setup() {\n        la = new Rand.Plong().array(100_000);\n    }\n\n    @Benchmark\n    public void sort() {\n        Arrays.sort(la);\n    }\n\n    @Benchmark\n    public void parallelSort() {\n        Arrays.parallelSort(la);\n    }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"parallelSort()")," \u7b97\u6cd5\u5c06\u5927\u6570\u7ec4\u62c6\u5206\u6210\u66f4\u5c0f\u7684\u6570\u7ec4\uff0c\u76f4\u5230\u6570\u7ec4\u5927\u5c0f\u8fbe\u5230\u6781\u9650\uff0c\u7136\u540e\u4f7f\u7528\u666e\u901a\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Arrays .sort()")," \u65b9\u6cd5\u3002\u7136\u540e\u5408\u5e76\u7ed3\u679c\u3002\u8be5\u7b97\u6cd5\u9700\u8981\u4e0d\u5927\u4e8e\u539f\u59cb\u6570\u7ec4\u7684\u989d\u5916\u5de5\u4f5c\u7a7a\u95f4\u3002"),(0,r.kt)("p",null,"\u60a8\u53ef\u80fd\u4f1a\u770b\u5230\u4e0d\u540c\u7684\u7ed3\u679c\uff0c\u4f46\u662f\u5728\u6211\u7684\u673a\u5668\u4e0a\uff0c\u5e76\u884c\u6392\u5e8f\u5c06\u901f\u5ea6\u63d0\u9ad8\u4e86\u5927\u7ea63\u500d\u3002\u7531\u4e8e\u5e76\u884c\u7248\u672c\u4f7f\u7528\u8d77\u6765\u5f88\u7b80\u5355\uff0c\u6240\u4ee5\u5f88\u5bb9\u6613\u8003\u8651\u5728\u4efb\u4f55\u5730\u65b9\u4f7f\u7528\u5b83\uff0c\u800c\u4e0d\u662f\n",(0,r.kt)("strong",{parentName:"p"},"Arrays.sort ()"),"\u3002\u5f53\u7136\uff0c\u5b83\u53ef\u80fd\u4e0d\u662f\u90a3\u4e48\u7b80\u5355\u2014\u770b\u770b\u5fae\u57fa\u51c6\u6d4b\u8bd5\u3002"),(0,r.kt)("h2",{id:"binarysearch\u4e8c\u5206\u67e5\u627e"},"binarySearch\u4e8c\u5206\u67e5\u627e"),(0,r.kt)("p",null,"\u4e00\u65e6\u6570\u7ec4\u88ab\u6392\u5e8f\uff0c\u60a8\u5c31\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Arrays.binarySearch()")," \u6765\u6267\u884c\u5bf9\u7279\u5b9a\u9879\u7684\u5feb\u901f\u641c\u7d22\u3002\u4f46\u662f\uff0c\u5982\u679c\u5c1d\u8bd5\u5728\u672a\u6392\u5e8f\u7684\u6570\u7ec4\u4e0a\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"binarySearch()"),"\uff0c\u7ed3\u679c\u662f\u4e0d\u53ef\u9884\u6d4b\u7684\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Rand.Pint")," \u7c7b\u6765\u521b\u5efa\u4e00\u4e2a\u586b\u5145\u968f\u673a\u6574\u5f62\u503c\u7684\u6570\u7ec4\uff0c\u7136\u540e\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"p"},"getAsInt()")," (\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Rand.Pint")," \u662f\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"IntSupplier"),")\u6765\u4ea7\u751f\u641c\u7d22\u503c:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/ArraySearching.java\n// Using Arrays.binarySearch()\n\nimport onjava.*;\n\nimport java.util.Arrays;\n\nimport static onjava.ArrayShow.*;\n\npublic class ArraySearching {\n    public static void main(String[] args) {\n        Rand.Pint rand = new Rand.Pint();\n        int[] a = new Rand.Pint().array(25);\n        Arrays.sort(a);\n        show("Sorted array", a);\n        while (true) {\n            int r = rand.getAsInt();\n            int location = Arrays.binarySearch(a, r);\n            if (location >= 0) {\n                System.out.println("Location of " + r + " is " + location + ", a[" + location + "] is " + a[location]);\n                break; // Out of while loop\n            }\n        }\n    }\n}\n/* Output:\nSorted array: [125, 267, 635, 650, 1131, 1506, 1634, 2400, 2766,\n               3063, 3768, 3941, 4720, 4762, 4948, 5070, 5682,\n               5807, 6177, 6193, 6656, 7021, 8479, 8737, 9954]\nLocation of 635 is 2, a[2] is 635\n*/\n')),(0,r.kt)("p",null,"\u5728while\u5faa\u73af\u4e2d\uff0c\u968f\u673a\u503c\u4f5c\u4e3a\u641c\u7d22\u9879\u751f\u6210\uff0c\u76f4\u5230\u5728\u6570\u7ec4\u4e2d\u627e\u5230\u5176\u4e2d\u4e00\u4e2a\u4e3a\u6b62\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u627e\u5230\u4e86\u641c\u7d22\u9879\uff0c",(0,r.kt)("strong",{parentName:"p"},"Arrays.binarySearch()")," \u5c06\u751f\u6210\u4e00\u4e2a\u5927\u4e8e\u6216\u7b49\u4e8e\u96f6\u7684\u503c\u3002\u5426\u5219\uff0c\u5b83\u5c06\u4ea7\u751f\u4e00\u4e2a\u8d1f\u503c\uff0c\u8868\u793a\u5982\u679c\u624b\u52a8\u7ef4\u62a4\u5df2\u6392\u5e8f\u7684\u6570\u7ec4\uff0c\u5219\u5e94\u8be5\u63d2\u5165\u5143\u7d20\u7684\u4f4d\u7f6e\u3002\u4ea7\u751f\u7684\u503c\u662f -(\u63d2\u5165\u70b9) - 1 \u3002\u63d2\u5165\u70b9\u662f\u5927\u4e8e\u952e\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u5982\u679c\u6570\u7ec4\u4e2d\u7684\u6240\u6709\u5143\u7d20\u90fd\u5c0f\u4e8e\u6307\u5b9a\u7684\u952e\uff0c\u5219\u662f ",(0,r.kt)("strong",{parentName:"p"},"a.size()")," \u3002"),(0,r.kt)("p",null,"\u5982\u679c\u6570\u7ec4\u5305\u542b\u91cd\u590d\u7684\u5143\u7d20\uff0c\u5219\u65e0\u6cd5\u4fdd\u8bc1\u627e\u5230\u5176\u4e2d\u7684\u90a3\u4e9b\u91cd\u590d\u9879\u3002\u641c\u7d22\u7b97\u6cd5\u4e0d\u662f\u4e3a\u4e86\u652f\u6301\u91cd\u590d\u7684\u5143\u7d20\uff0c\u800c\u662f\u4e3a\u4e86\u5bb9\u5fcd\u5b83\u4eec\u3002\u5982\u679c\u9700\u8981\u6ca1\u6709\u91cd\u590d\u5143\u7d20\u7684\u6392\u5e8f\u5217\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"TreeSet")," (\u7528\u4e8e\u7ef4\u6301\u6392\u5e8f\u987a\u5e8f)\u6216 ",(0,r.kt)("strong",{parentName:"p"},"LinkedHashSet")," (\u7528\u4e8e\u7ef4\u6301\u63d2\u5165\u987a\u5e8f)\u3002\u8fd9\u4e9b\u7c7b\u81ea\u52a8\u4e3a\u60a8\u5904\u7406\u6240\u6709\u7684\u7ec6\u8282\u3002\u53ea\u6709\u5728\u51fa\u73b0\u6027\u80fd\u74f6\u9888\u7684\u60c5\u51b5\u4e0b\uff0c\u624d\u5e94\u8be5\u4f7f\u7528\u624b\u5de5\u7ef4\u62a4\u7684\u6570\u7ec4\u66ff\u6362\u8fd9\u4e9b\u7c7b\u4e2d\u7684\u4e00\u4e2a\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u4f7f\u7528\u6bd4\u8f83\u5668(\u539f\u8bed\u6570\u7ec4\u4e0d\u5141\u8bb8\u4f7f\u7528\u6bd4\u8f83\u5668\u8fdb\u884c\u6392\u5e8f)\u5bf9\u5bf9\u8c61\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u90a3\u4e48\u5728\u6267\u884c ",(0,r.kt)("strong",{parentName:"p"},"binarySearch()")," (\u4f7f\u7528\u91cd\u8f7d\u7248\u672c\u7684binarySearch())\u65f6\u5fc5\u987b\u5305\u542b\u76f8\u540c\u7684\u6bd4\u8f83\u5668\u3002\u4f8b\u5982\uff0c\u53ef\u4ee5\u4fee\u6539 ",(0,r.kt)("strong",{parentName:"p"},"StringSorting.java")," \u6765\u6267\u884c\u641c\u7d22:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/AlphabeticSearch.java\n// Searching with a Comparator\n\nimport onjava.*;\n\nimport java.util.Arrays;\n\nimport static onjava.ArrayShow.*;\n\npublic class AlphabeticSearch {\n    public static void main(String[] args) {\n        String[] sa = new Rand.String().array(30);\n        Arrays.sort(sa, String.CASE_INSENSITIVE_ORDER);\n        show(sa);\n        int index = Arrays.binarySearch(sa, sa[10], String.CASE_INSENSITIVE_ORDER);\n        System.out.println("Index: " + index + "\\n" + sa[index]);\n    }\n}\n/* Output:\n[anmkkyh, bhmupju, btpenpc, cjwzmmr, cuxszgv, eloztdv, ewcippc,\nezdeklu, fcjpthl, fqmlgsh, gmeinne, hyoubzl, jbvlgwc, jlxpqds,\nljlbynx, mvducuj, qgekgly, skddcat, taprwxz, uybypgp, vjsszkn,\nvniyapk, vqqakbm, vwodhcf, ydpulcq, ygpoalk, yskvett, zehpfmm,\nzofmmvm, zrxmclh]\nIndex: 10 gmeinne\n*/\n')),(0,r.kt)("p",null,"\u6bd4\u8f83\u5668\u5fc5\u987b\u4f5c\u4e3a\u7b2c\u4e09\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u91cd\u8f7d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"binarySearch()")," \u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u6210\u529f\u662f\u6709\u4fdd\u8bc1\u7684\uff0c\u56e0\u4e3a\u641c\u7d22\u9879\u662f\u4ece\u6570\u7ec4\u672c\u8eab\u4e2d\u9009\u62e9\u7684\u3002"),(0,r.kt)("h2",{id:"parallelprefix\u5e76\u884c\u524d\u7f00"},"parallelPrefix\u5e76\u884c\u524d\u7f00"),(0,r.kt)("p",null,"\u6ca1\u6709\u201cprefix()\u201d\u65b9\u6cd5\uff0c\u53ea\u6709 ",(0,r.kt)("strong",{parentName:"p"},"parallelPrefix()"),"\u3002\u8fd9\u7c7b\u4f3c\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"Stream")," \u7c7b\u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"reduce()")," \u65b9\u6cd5:\u5b83\u5bf9\u524d\u4e00\u4e2a\u5143\u7d20\u548c\u5f53\u524d\u5143\u7d20\u6267\u884c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5e76\u5c06\u7ed3\u679c\u653e\u5165\u5f53\u524d\u5143\u7d20\u4f4d\u7f6e:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},"// arrays/ParallelPrefix1.java\n\nimport onjava.*;\n\nimport java.util.Arrays;\n\nimport static onjava.ArrayShow.*;\n\npublic class ParallelPrefix1 {\n    public static void main(String[] args) {\n        int[] nums = new Count.Pint().array(10);\n        show(nums);\n        System.out.println(Arrays.stream(nums).reduce(Integer::sum).getAsInt());\n        Arrays.parallelPrefix(nums, Integer::sum);\n        show(nums);\n        System.out.println(Arrays.stream(new Count.Pint().array(6)).reduce(Integer::sum).getAsInt());\n    }\n}\n/* Output:\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n45\n[0, 1, 3, 6, 10, 15, 21, 28, 36, 45]\n15\n*/\n")),(0,r.kt)("p",null,"\u8fd9\u91cc\u6211\u4eec\u5bf9\u6570\u7ec4\u5e94\u7528Integer::sum\u3002\u5728\u4f4d\u7f6e0\u4e2d\uff0c\u5b83\u5c06\u5148\u524d\u8ba1\u7b97\u7684\u503c(\u56e0\u4e3a\u6ca1\u6709\u5148\u524d\u7684\u503c)\u4e0e\u539f\u59cb\u6570\u7ec4\u4f4d\u7f6e0\u4e2d\u7684\u503c\u7ec4\u5408\u5728\u4e00\u8d77\u3002\u5728\u4f4d\u7f6e1\u4e2d\uff0c\u5b83\u83b7\u53d6\u4e4b\u524d\u8ba1\u7b97\u7684\u503c(\u5b83\u53ea\u662f\u5b58\u50a8\u5728\u4f4d\u7f6e0\u4e2d)\uff0c\u5e76\u5c06\u5176\u4e0e\u4f4d\u7f6e1\u4e2d\u5148\u524d\u8ba1\u7b97\u7684\u503c\u76f8\u7ed3\u5408\u3002\u4f9d\u6b21\u5f80\u590d\u3002"),(0,r.kt)("p",null,"\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Stream.reduce()"),"\uff0c\u60a8\u53ea\u80fd\u5f97\u5230\u6700\u7ec8\u7ed3\u679c\uff0c\u800c\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Arrays.parallelPrefix()"),"\uff0c\u60a8\u8fd8\u53ef\u4ee5\u5f97\u5230\u6240\u6709\u4e2d\u95f4\u8ba1\u7b97\uff0c\u4ee5\u786e\u4fdd\u5b83\u4eec\u662f\u6709\u7528\u7684\u3002\u6ce8\u610f\uff0c\u7b2c\u4e8c\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Stream.reduce()")," \u8ba1\u7b97\u7684\u7ed3\u679c\u5df2\u7ecf\u5728 ",(0,r.kt)("strong",{parentName:"p"},"parallelPrefix()")," \u8ba1\u7b97\u7684\u6570\u7ec4\u4e2d\u3002"),(0,r.kt)("p",null,"\u4f7f\u7528\u5b57\u7b26\u4e32\u53ef\u80fd\u66f4\u6e05\u695a:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},"// arrays/ParallelPrefix2.java\n\nimport onjava.*;\n\nimport java.util.Arrays;\n\nimport static onjava.ArrayShow.*;\n\npublic class ParallelPrefix2 {\n    public static void main(String[] args) {\n        String[] strings = new Rand.String(1).array(8);\n        show(strings);\n        Arrays.parallelPrefix(strings, (a, b) -> a + b);\n        show(strings);\n    }\n}\n/* Output:\n[b, t, p, e, n, p, c, c]\n[b, bt, btp, btpe, btpen, btpenp, btpenpc, btpenpcc]\n*/\n")),(0,r.kt)("p",null,"\u5982\u524d\u6240\u8ff0\uff0c\u4f7f\u7528\u6d41\u8fdb\u884c\u521d\u59cb\u5316\u975e\u5e38\u4f18\u96c5\uff0c\u4f46\u662f\u5bf9\u4e8e\u5927\u578b\u6570\u7ec4\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ef\u80fd\u4f1a\u8017\u5c3d\u5806\u7a7a\u95f4\u3002\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"setAll()")," \u6267\u884c\u521d\u59cb\u5316\u66f4\u8282\u7701\u5185\u5b58:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-JAVA"},'// arrays/ParallelPrefix3.java\n// {ExcludeFromTravisCI}\n\nimport java.util.Arrays;\n\npublic class ParallelPrefix3 {\n    static final int SIZE = 10_000_000;\n\n    public static void main(String[] args) {\n        long[] nums = new long[SIZE];\n        Arrays.setAll(nums, n -> n);\n        Arrays.parallelPrefix(nums, Long::sum);\n        System.out.println("First 20: " + nums[19]);\n        System.out.println("First 200: " + nums[199]);\n        System.out.println("All: " + nums[nums.length - 1]);\n    }\n}\n/* Output:\nFirst 20: 190\nFirst 200: 19900\nAll: 49999995000000\n*/\n')),(0,r.kt)("p",null,"\u56e0\u4e3a\u6b63\u786e\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"parallelPrefix()")," \u53ef\u80fd\u76f8\u5f53\u590d\u6742\uff0c\u6240\u4ee5\u901a\u5e38\u5e94\u8be5\u53ea\u5728\u5b58\u5728\u5185\u5b58\u6216\u901f\u5ea6\u95ee\u9898(\u6216\u4e24\u8005\u90fd\u6709)\u65f6\u4f7f\u7528\u3002\u5426\u5219\uff0c",(0,r.kt)("strong",{parentName:"p"},"Stream.reduce()")," \u5e94\u8be5\u662f\u60a8\u7684\u9996\u9009\u3002"),(0,r.kt)("h2",{id:"\u672c\u7ae0\u5c0f\u7ed3"},"\u672c\u7ae0\u5c0f\u7ed3"),(0,r.kt)("p",null,"Java\u4e3a\u56fa\u5b9a\u5927\u5c0f\u7684\u4f4e\u7ea7\u6570\u7ec4\u63d0\u4f9b\u4e86\u5408\u7406\u7684\u652f\u6301\u3002\u8fd9\u79cd\u6570\u7ec4\u5f3a\u8c03\u7684\u662f\u6027\u80fd\u800c\u4e0d\u662f\u7075\u6d3b\u6027\uff0c\u5c31\u50cfC\u548cc++\u6570\u7ec4\u6a21\u578b\u4e00\u6837\u3002\u5728Java\u7684\u6700\u521d\u7248\u672c\u4e2d\uff0c\u56fa\u5b9a\u5927\u5c0f\u7684\u4f4e\u7ea7\u6570\u7ec4\u662f\u7edd\u5bf9\u5fc5\u8981\u7684\uff0c\u8fd9\u4e0d\u4ec5\u662f\u56e0\u4e3aJava\u8bbe\u8ba1\u4eba\u5458\u9009\u62e9\u5305\u542b\u539f\u751f\u7c7b\u578b(\u4e5f\u8003\u8651\u5230\u6027\u80fd)\uff0c\u8fd8\u56e0\u4e3a\u90a3\u4e2a\u7248\u672c\u5bf9\u96c6\u5408\u7684\u652f\u6301\u975e\u5e38\u5c11\u3002\u56e0\u6b64\uff0c\u5728\u65e9\u671f\u7684Java\u7248\u672c\u4e2d\uff0c\u9009\u62e9\u6570\u7ec4\u603b\u662f\u5408\u7406\u7684\u3002"),(0,r.kt)("p",null,"\u5728Java\u7684\u540e\u7eed\u7248\u672c\u4e2d\uff0c\u96c6\u5408\u652f\u6301\u5f97\u5230\u4e86\u663e\u8457\u7684\u6539\u8fdb\uff0c\u73b0\u5728\u96c6\u5408\u5728\u9664\u6027\u80fd\u5916\u7684\u6240\u6709\u65b9\u9762\u90fd\u4f18\u4e8e\u6570\u7ec4\uff0c\u5373\u4f7f\u8fd9\u6837\uff0c\u96c6\u5408\u7684\u6027\u80fd\u4e5f\u5f97\u5230\u4e86\u663e\u8457\u7684\u6539\u8fdb\u3002\u6b63\u5982\u672c\u4e66\u5176\u4ed6\u90e8\u5206\u6240\u8ff0\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u6027\u80fd\u95ee\u9898\u901a\u5e38\u4e0d\u4f1a\u51fa\u73b0\u5728\u60a8\u8bbe\u60f3\u7684\u5730\u65b9\u3002"),(0,r.kt)("p",null,"\u4f7f\u7528\u81ea\u52a8\u88c5\u7bb1\u548c\u6cdb\u578b\uff0c\u5728\u96c6\u5408\u4e2d\u4fdd\u5b58\u539f\u751f\u7c7b\u578b\u662f\u6beb\u4e0d\u8d39\u529b\u7684\uff0c\u8fd9\u8fdb\u4e00\u6b65\u9f13\u52b1\u60a8\u7528\u96c6\u5408\u66ff\u6362\u4f4e\u7ea7\u6570\u7ec4\u3002\u7531\u4e8e\u6cdb\u578b\u4ea7\u751f\u7c7b\u578b\u5b89\u5168\u7684\u96c6\u5408\uff0c\u6570\u7ec4\u5728\u8fd9\u65b9\u9762\u4e5f\u4e0d\u518d\u6709\u4f18\u52bf\u3002"),(0,r.kt)("p",null,"\u5982\u672c\u7ae0\u6240\u8ff0\uff0c\u5f53\u60a8\u5c1d\u8bd5\u4f7f\u7528\u6cdb\u578b\u65f6\uff0c\u60a8\u5c06\u770b\u5230\u6cdb\u578b\u5bf9\u6570\u7ec4\u662f\u76f8\u5f53\u4e0d\u53cb\u597d\u7684\u3002\u901a\u5e38\uff0c\u5373\u4f7f\u53ef\u4ee5\u8ba9\u6cdb\u578b\u548c\u6570\u7ec4\u4ee5\u67d0\u79cd\u5f62\u5f0f\u4e00\u8d77\u5de5\u4f5c(\u5728\u4e0b\u4e00\u7ae0\u4e2d\u60a8\u5c06\u770b\u5230)\uff0c\u5728\u7f16\u8bd1\u671f\u95f4\u4ecd\u7136\u4f1a\u51fa\u73b0\u201cunchecked\u201d\u8b66\u544a\u3002"),(0,r.kt)("p",null,"\u6709\u51e0\u6b21\uff0c\u5f53\u6211\u4eec\u8ba8\u8bba\u7279\u5b9a\u7684\u4f8b\u5b50\u65f6\uff0c\u6211\u76f4\u63a5\u4eceJava\u8bed\u8a00\u8bbe\u8ba1\u4eba\u5458\u90a3\u91cc\u542c\u5230\u6211\u5e94\u8be5\u4f7f\u7528\u96c6\u5408\u800c\u4e0d\u662f\u6570\u7ec4(\u6211\u4f7f\u7528\u6570\u7ec4\u6765\u6f14\u793a\u7279\u5b9a\u7684\u6280\u672f\uff0c\u6240\u4ee5\u6211\u6ca1\u6709\u8fd9\u4e2a\u9009\u9879)\u3002"),(0,r.kt)("p",null,"\u6240\u6709\u8fd9\u4e9b\u95ee\u9898\u90fd\u8868\u660e\uff0c\u5728\u4f7f\u7528Java\u7684\u6700\u65b0\u7248\u672c\u8fdb\u884c\u7f16\u7a0b\u65f6\uff0c\u5e94\u8be5\u201c\u4f18\u5148\u9009\u62e9\u96c6\u5408\u800c\u4e0d\u662f\u6570\u7ec4\u201d\u3002\u53ea\u6709\u5f53\u60a8\u8bc1\u660e\u6027\u80fd\u662f\u4e00\u4e2a\u95ee\u9898(\u5e76\u4e14\u5207\u6362\u5230\u4e00\u4e2a\u6570\u7ec4\u5b9e\u9645\u4e0a\u4f1a\u6709\u5f88\u5927\u7684\u4e0d\u540c)\u65f6\uff0c\u624d\u5e94\u8be5\u91cd\u6784\u5230\u6570\u7ec4\u3002\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u5927\u80c6\u7684\u58f0\u660e\uff0c\u4f46\u662f\u6709\u4e9b\u8bed\u8a00\u6839\u672c\u6ca1\u6709\u56fa\u5b9a\u5927\u5c0f\u7684\u4f4e\u7ea7\u6570\u7ec4\u3002\u5b83\u4eec\u53ea\u6709\u53ef\u8c03\u6574\u5927\u5c0f\u7684\u96c6\u5408\uff0c\u800c\u4e14\u6bd4C/C++/java\u98ce\u683c\u7684\u6570\u7ec4\u529f\u80fd\u591a\u5f97\u591a\u3002\u4f8b\u5982\uff0cPython\u6709\u4e00\u4e2a\u4f7f\u7528\u57fa\u672c\u6570\u7ec4\u8bed\u6cd5\u7684\u5217\u8868\u7c7b\u578b\uff0c\u4f46\u662f\u5177\u6709\u66f4\u5927\u7684\u529f\u80fd\u2014\u60a8\u751a\u81f3\u53ef\u4ee5\u4ece\u5b83\u7ee7\u627f:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Python"},"# arrays/PythonLists.py\n\naList=[1,2,3,4,5]print(type(aList)) #<type 'list'>\nprint(aList) # [1,2,3,4,5]\n        print(aList[4]) # 5Basic list indexing\n        aList.append(6) # lists can be resized\n        aList+=[7,8] # Add a list to a list\n        print(aList) # [1,2,3,4,5,6,7,8]\n        aSlice=aList[2:4]\n        print(aSlice) # [3,4]\n\nclass MyList(list): # Inherit from list\n        # Define a method;'this'pointer is explicit:\n        def getReversed(self):\n            reversed=self[:] # Copy list using slices\n            reversed.reverse() # Built-in list method\n            return reversed\n        # No'new'necessary for object creation:\n        list2=MyList(aList)\n        print(type(list2)) #<class '__main__.MyList'>\n        print(list2.getReversed()) # [8,7,6,5,4,3,2,1]\n        output=\"\"\"\n        <class 'list'>\n        [1, 2, 3, 4, 5]\n        5\n        [1, 2, 3, 4, 5, 6, 7, 8]\n        [3, 4]\n        <class '__main__.MyList'>\n        [8, 7, 6, 5, 4, 3, 2, 1]\n        \"\"\"\n\n")),(0,r.kt)("p",null,"\u524d\u4e00\u7ae0\u4ecb\u7ecd\u4e86\u57fa\u672c\u7684Python\u8bed\u6cd5\u3002\u5728\u8fd9\u91cc\uff0c\u901a\u8fc7\u7528\u65b9\u62ec\u53f7\u5305\u56f4\u4ee5\u9017\u53f7\u5206\u9694\u7684\u5bf9\u8c61\u5e8f\u5217\u6765\u521b\u5efa\u5217\u8868\u3002\u7ed3\u679c\u662f\u4e00\u4e2a\u8fd0\u884c\u65f6\u7c7b\u578b\u4e3alist\u7684\u5bf9\u8c61(print\u8bed\u53e5\u7684\u8f93\u51fa\u663e\u793a\u4e3a\u540c\u4e00\u884c\u4e2d\u7684\u6ce8\u91ca)\u3002\u6253\u5370\u5217\u8868\u7684\u7ed3\u679c\u4e0e\u5728Java\u4e2d\u4f7f\u7528Arrays.toString()\u7684\u7ed3\u679c\u76f8\u540c\u3002\n\u901a\u8fc7\u5c06 : \u64cd\u4f5c\u7b26\u653e\u5728\u7d22\u5f15\u64cd\u4f5c\u4e2d\uff0c\u901a\u8fc7\u5207\u7247\u6765\u521b\u5efa\u5217\u8868\u7684\u5b50\u5e8f\u5217\u3002list\u7c7b\u578b\u6709\u66f4\u591a\u7684\u5185\u7f6e\u64cd\u4f5c\uff0c\u901a\u5e38\u53ea\u9700\u8981\u5e8f\u5217\u7c7b\u578b\u3002\nMyList\u662f\u4e00\u4e2a\u7c7b\u5b9a\u4e49;\u57fa\u7c7b\u653e\u5728\u62ec\u53f7\u5185\u3002\u5728\u7c7b\u5185\u90e8\uff0cdef\u8bed\u53e5\u751f\u6210\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u5728Java\u4e2d\u81ea\u52a8\u4e0e\u4e4b\u7b49\u4ef7\uff0c\u9664\u4e86\u5728Python\u4e2d\u5b83\u662f\u663e\u5f0f\u7684\uff0c\u800c\u4e14\u6807\u8bc6\u7b26self\u662f\u6309\u7ea6\u5b9a\u4f7f\u7528\u7684(\u5b83\u4e0d\u662f\u5173\u952e\u5b57)\u3002\u6ce8\u610f\u6784\u9020\u51fd\u6570\u662f\u5982\u4f55\u81ea\u52a8\u7ee7\u627f\u7684\u3002"),(0,r.kt)("p",null,"\u867d\u7136\u4e00\u5207\u5728Python\u4e2d\u771f\u7684\u662f\u4e00\u4e2a\u5bf9\u8c61(\u5305\u62ec\u6574\u6570\u548c\u6d6e\u70b9\u7c7b\u578b),\u4f60\u4ecd\u7136\u6709\u4e00\u4e2a\u5b89\u5168\u95e8,\u56e0\u4e3a\u4f60\u53ef\u4ee5\u4f18\u5316\u6027\u80fd\u5173\u952e\u578b\u7684\u90e8\u5206\u4ee3\u7801\u7f16\u5199\u6269\u5c55\u7684C, c++\u6216\u4f7f\u7528\u7279\u6b8a\u7684\u5de5\u5177\u8bbe\u8ba1\u5bb9\u6613\u52a0\u901f\u60a8\u7684Python\u4ee3\u7801(\u6709\u5f88\u591a)\u3002\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u53ef\u4ee5\u5728\u4e0d\u5f71\u54cd\u6027\u80fd\u6539\u8fdb\u7684\u60c5\u51b5\u4e0b\u4fdd\u6301\u5bf9\u8c61\u7684\u7eaf\u5ea6\u3002"),(0,r.kt)("p",null,"PHP\u751a\u81f3\u66f4\u8fdb\u4e00\u6b65\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u6570\u7ec4\u7c7b\u578b\uff0c\u65e2\u5145\u5f53int\u7d22\u5f15\u6570\u7ec4\uff0c\u53c8\u5145\u5f53\u5173\u8054\u6570\u7ec4(Map)\u3002"),(0,r.kt)("p",null,"\u5728\u7ecf\u5386\u4e86\u8fd9\u4e48\u591a\u5e74\u7684Java\u53d1\u5c55\u4e4b\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u5f88\u6709\u8da3\u5730\u63a8\u6d4b\uff0c\u5982\u679c\u91cd\u65b0\u5f00\u59cb\uff0c\u8bbe\u8ba1\u4eba\u5458\u662f\u5426\u4f1a\u5c06\u539f\u751f\u7c7b\u578b\u548c\u4f4e\u7ea7\u6570\u7ec4\u653e\u5728\u8be5\u8bed\u8a00\u4e2d(\u540c\u6837\u5728JVM\u4e0a\u8fd0\u884c\u7684Scala\u8bed\u8a00\u4e0d\u5305\u62ec\u8fd9\u4e9b)\u3002\u5982\u679c\u4e0d\u8003\u8651\u8fd9\u4e9b\uff0c\u5c31\u6709\u53ef\u80fd\u5f00\u53d1\u51fa\u4e00\u79cd\u771f\u6b63\u7eaf\u7cb9\u7684\u9762\u5411\u5bf9\u8c61\u8bed\u8a00(\u5c3d\u7ba1\u6709\u8fd9\u6837\u7684\u8bf4\u6cd5\uff0cJava\u5e76\u4e0d\u662f\u4e00\u79cd\u7eaf\u7cb9\u7684\u9762\u5411\u5bf9\u8c61\u8bed\u8a00\uff0c\u8fd9\u6b63\u662f\u56e0\u4e3a\u5b83\u7684\u5e95\u5c42\u7f3a\u9677)\u3002\u5173\u4e8e\u6548\u7387\u7684\u6700\u521d\u4e89\u8bba\u603b\u662f\u4ee4\u4eba\u4fe1\u670d\u7684\uff0c\u4f46\u662f\u968f\u7740\u65f6\u95f4\u7684\u63a8\u79fb\uff0c\u6211\u4eec\u5df2\u7ecf\u770b\u5230\u4e86\u4ece\u8fd9\u4e2a\u60f3\u6cd5\u5411\u66f4\u9ad8\u5c42\u6b21\u7684\u7ec4\u4ef6(\u5982\u96c6\u5408)\u7684\u6f14\u8fdb\u3002\u6b64\u5916\uff0c\u5982\u679c\u96c6\u5408\u53ef\u4ee5\u50cf\u5728\u67d0\u4e9b\u8bed\u8a00\u4e2d\u4e00\u6837\u6784\u5efa\u5230\u6838\u5fc3\u8bed\u8a00\u4e2d\uff0c\u90a3\u4e48\u7f16\u8bd1\u5668\u5c31\u6709\u66f4\u597d\u7684\u673a\u4f1a\u8fdb\u884c\u4f18\u5316\u3002"),(0,r.kt)("p",null,"\u6487\u5f00\u201c\u201cGreen-fields\u201d\u7684\u63a8\u6d4b\u4e0d\u8c08\uff0c\u6211\u4eec\u80af\u5b9a\u4f1a\u88ab\u6570\u7ec4\u6240\u56f0\u6270\uff0c\u5f53\u4f60\u9605\u8bfb\u4ee3\u7801\u65f6\u5c31\u4f1a\u770b\u5230\u5b83\u4eec\u3002\u7136\u800c\uff0c\u96c6\u5408\u51e0\u4e4e\u603b\u662f\u66f4\u597d\u7684\u9009\u62e9\u3002"))}g.isMDXComponent=!0}}]);