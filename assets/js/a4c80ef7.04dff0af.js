"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2248],{3905:(e,t,a)=>{a.d(t,{Zo:()=>p,kt:()=>f});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var c=r.createContext({}),l=function(e){var t=r.useContext(c),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(a),f=n,m=u["".concat(c,".").concat(f)]||u[f]||h[f]||o;return a?r.createElement(m,i(i({ref:t},p),{},{components:a})):r.createElement(m,i({ref:t},p))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=u;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}u.displayName="MDXCreateElement"},2288:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=a(7462),n=(a(7294),a(3905));const o={},i=void 0,s={unversionedId:"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces",id:"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces",title:"Chapter-9-Item-64-Refer-to-objects-by-their-interfaces",description:"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09",source:"@site/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces.md",sourceDirName:"Books/EffectiveJava3/Chapter-9",slug:"/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces",permalink:"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chapter-9-Item-63-Beware-the-performance-of-string-concatenation",permalink:"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-63-Beware-the-performance-of-string-concatenation"},next:{title:"Chapter-9-Item-65-Prefer-interfaces-to-reflection",permalink:"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-65-Prefer-interfaces-to-reflection"}},c={},l=[{value:"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09",id:"chapter-9-general-programming\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1",level:2},{value:"Item 64: Refer to objects by their interfaces\uff08\u901a\u8fc7\u63a5\u53e3\u5f15\u7528\u5bf9\u8c61\uff09",id:"item-64-refer-to-objects-by-their-interfaces\u901a\u8fc7\u63a5\u53e3\u5f15\u7528\u5bf9\u8c61",level:3}],p={toc:l};function h(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"chapter-9-general-programming\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1"},"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09"),(0,n.kt)("h3",{id:"item-64-refer-to-objects-by-their-interfaces\u901a\u8fc7\u63a5\u53e3\u5f15\u7528\u5bf9\u8c61"},"Item 64: Refer to objects by their interfaces\uff08\u901a\u8fc7\u63a5\u53e3\u5f15\u7528\u5bf9\u8c61\uff09"),(0,n.kt)("p",null,"Item 51 says that you should use interfaces rather than classes as parameter types. More generally, you should favor the use of interfaces over classes to refer to objects. ",(0,n.kt)("strong",{parentName:"p"},"If appropriate interface types exist, then parameters, return values, variables, and fields should all be declared using interface types.")," The only time you really need to refer to an object\u2019s class is when you\u2019re creating it with a constructor. To make this concrete, consider the case of LinkedHashSet, which is an implementation of the Set interface. Get in the habit of typing this:"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"./Chapter-8-Item-51-Design-method-signatures-carefully"},"Item-51")," \u6307\u51fa\uff0c\u5e94\u8be5\u4f7f\u7528\u63a5\u53e3\u800c\u4e0d\u662f\u7c7b\u4f5c\u4e3a\u53c2\u6570\u7c7b\u578b\u3002\u66f4\u4e00\u822c\u5730\u8bf4\uff0c\u4f60\u5e94\u8be5\u4f18\u5148\u4f7f\u7528\u63a5\u53e3\u800c\u4e0d\u662f\u7c7b\u6765\u5f15\u7528\u5bf9\u8c61\u3002",(0,n.kt)("strong",{parentName:"p"},"\u5982\u679c\u5b58\u5728\u5408\u9002\u7684\u63a5\u53e3\u7c7b\u578b\uff0c\u90a3\u4e48\u5e94\u8be5\u4f7f\u7528\u63a5\u53e3\u7c7b\u578b\u58f0\u660e\u53c2\u6570\u3001\u8fd4\u56de\u503c\u3001\u53d8\u91cf\u548c\u5b57\u6bb5\u3002")," \u60df\u4e00\u771f\u6b63\u9700\u8981\u5f15\u7528\u5bf9\u8c61\u7684\u7c7b\u7684\u65f6\u5019\u662f\u4f7f\u7528\u6784\u9020\u51fd\u6570\u521b\u5efa\u5b83\u7684\u65f6\u5019\u3002\u4e3a\u4e86\u5177\u4f53\u8bf4\u660e\u8fd9\u4e00\u70b9\uff0c\u8003\u8651 LinkedHashSet \u7684\u60c5\u51b5\uff0c\u5b83\u662f Set \u63a5\u53e3\u7684\u4e00\u4e2a\u5b9e\u73b0\u3002\u58f0\u660e\u65f6\u5e94\u517b\u6210\u8fd9\u6837\u7684\u4e60\u60ef\uff1a"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"// Good - uses interface as type\nSet<Son> sonSet = new LinkedHashSet<>();\n")),(0,n.kt)("p",null,"not this:"),(0,n.kt)("p",null,"\u800c\u4e0d\u662f\u8fd9\u6837\uff1a"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"// Bad - uses class as type!\nLinkedHashSet<Son> sonSet = new LinkedHashSet<>();\n")),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"If you get into the habit of using interfaces as types, your program will be much more flexible.")," If you decide that you want to switch implementations, all you have to do is change the class name in the constructor (or use a different static factory). For example, the first declaration could be changed to read:"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"\u5982\u679c\u4f60\u517b\u6210\u4e86\u4f7f\u7528\u63a5\u53e3\u4f5c\u4e3a\u7c7b\u578b\u7684\u4e60\u60ef\uff0c\u90a3\u4e48\u4f60\u7684\u7a0b\u5e8f\u5c06\u66f4\u52a0\u7075\u6d3b\u3002")," \u5982\u679c\u4f60\u51b3\u5b9a\u8981\u5207\u6362\u5b9e\u73b0\uff0c\u53ea\u9700\u5728\u6784\u9020\u51fd\u6570\u4e2d\u66f4\u6539\u7c7b\u540d\uff08\u6216\u4f7f\u7528\u4e0d\u540c\u7684\u9759\u6001\u5de5\u5382\uff09\u3002\u4f8b\u5982\uff0c\u7b2c\u4e00\u4e2a\u58f0\u660e\u53ef\u4ee5\u6539\u4e3a\uff1a"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"Set<Son> sonSet = new HashSet<>();\n")),(0,n.kt)("p",null,"and all of the surrounding code would continue to work. The surrounding code was unaware of the old implementation type, so it would be oblivious to the change."),(0,n.kt)("p",null,"\u6240\u6709\u7684\u4ee3\u7801\u90fd\u4f1a\u7ee7\u7eed\u5de5\u4f5c\u3002\u5468\u56f4\u7684\u4ee3\u7801\u4e0d\u77e5\u9053\u65e7\u7684\u5b9e\u73b0\u7c7b\u578b\uff0c\u6240\u4ee5\u5b83\u4e0d\u4f1a\u5728\u610f\u66f4\u6539\u3002"),(0,n.kt)("p",null,"There is one caveat: if the original implementation offered some special functionality not required by the general contract of the interface and the code depended on that functionality, then it is critical that the new implementation provide the same functionality. For example, if the code surrounding the first declaration depended on LinkedHashSet\u2019s ordering policy, then it would be incorrect to substitute HashSet for LinkedHashSet in the declaration, because HashSet makes no guarantee concerning iteration order."),(0,n.kt)("p",null,"\u6709\u4e00\u70b9\u503c\u5f97\u6ce8\u610f\uff1a\u5982\u679c\u539f\u5b9e\u73b0\u63d0\u4f9b\u4e86\u63a5\u53e3\u7684\u901a\u7528\u7ea6\u5b9a\u4e0d\u9700\u8981\u7684\u4e00\u4e9b\u7279\u6b8a\u529f\u80fd\uff0c\u5e76\u4e14\u4ee3\u7801\u4f9d\u8d56\u4e8e\u8be5\u529f\u80fd\uff0c\u90a3\u4e48\u65b0\u5b9e\u73b0\u63d0\u4f9b\u76f8\u540c\u7684\u529f\u80fd\u5c31\u975e\u5e38\u91cd\u8981\u3002\u4f8b\u5982\uff0c\u5982\u679c\u56f4\u7ed5\u7b2c\u4e00\u4e2a\u58f0\u660e\u7684\u4ee3\u7801\u4f9d\u8d56\u4e8e LinkedHashSet \u7684\u6392\u5e8f\u7b56\u7565\uff0c\u90a3\u4e48\u5728\u58f0\u660e\u4e2d\u5c06 HashSet \u66ff\u6362\u4e3a LinkedHashSet \u5c06\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u56e0\u4e3a HashSet \u4e0d\u4fdd\u8bc1\u8fed\u4ee3\u987a\u5e8f\u3002"),(0,n.kt)("p",null,"So why would you want to change an implementation type? Because the second implementation offers better performance than the original, or because it offers desirable functionality that the original implementation lacks. For example, suppose a field contains a HashMap instance. Changing it to an EnumMap will provide better performance and iteration order consistent with the natural order of the keys, but you can only use an EnumMap if the key type is an enum type. Changing the HashMap to a LinkedHashMap will provide predictable iteration order with performance comparable to that of HashMap, without making any special demands on the key type."),(0,n.kt)("p",null,"\u90a3\u4e48\uff0c\u4e3a\u4ec0\u4e48\u8981\u66f4\u6539\u5b9e\u73b0\u7c7b\u578b\u5462\uff1f\u56e0\u4e3a\u7b2c\u4e8c\u4e2a\u5b9e\u73b0\u6bd4\u539f\u6765\u7684\u5b9e\u73b0\u63d0\u4f9b\u4e86\u66f4\u597d\u7684\u6027\u80fd\uff0c\u6216\u8005\u56e0\u4e3a\u5b83\u63d0\u4f9b\u4e86\u539f\u6765\u7684\u5b9e\u73b0\u6240\u7f3a\u4e4f\u7684\u7406\u60f3\u529f\u80fd\u3002\u4f8b\u5982\uff0c\u5047\u8bbe\u4e00\u4e2a\u5b57\u6bb5\u5305\u542b\u4e00\u4e2a HashMap \u5b9e\u4f8b\u3002\u5c06\u5176\u66f4\u6539\u4e3a EnumMap \u5c06\u4e3a\u8fed\u4ee3\u63d0\u4f9b\u66f4\u597d\u7684\u6027\u80fd\u548c\u4e0e\u952e\u7684\u81ea\u7136\u987a\u5e8f\uff0c\u4f46\u662f\u4f60\u53ea\u80fd\u5728\u952e\u7c7b\u578b\u4e3a enum \u7c7b\u578b\u7684\u60c5\u51b5\u4e0b\u4f7f\u7528 EnumMap\u3002\u5c06 HashMap \u66f4\u6539\u4e3a LinkedHashMap \u5c06\u63d0\u4f9b\u53ef\u9884\u6d4b\u7684\u8fed\u4ee3\u987a\u5e8f\uff0c\u6027\u80fd\u4e0e HashMap \u76f8\u5f53\uff0c\u800c\u4e0d\u9700\u8981\u5bf9\u952e\u7c7b\u578b\u4f5c\u51fa\u4efb\u4f55\u7279\u6b8a\u8981\u6c42\u3002"),(0,n.kt)("p",null,"You might think it\u2019s OK to declare a variable using its implementation type, because you can change the declaration type and the implementation type at the same time, but there is no guarantee that this change will result in a program that compiles. If the client code used methods on the original implementation type that are not also present on its replacement or if the client code passed the instance to a method that requires the original implementation type, then the code will no longer compile after making this change. Declaring the variable with the interface type keeps you honest."),(0,n.kt)("p",null,"\u4f60\u53ef\u80fd\u8ba4\u4e3a\u4f7f\u7528\u53d8\u91cf\u7684\u5b9e\u73b0\u7c7b\u578b\u58f0\u660e\u53d8\u91cf\u662f\u53ef\u4ee5\u7684\uff0c\u56e0\u4e3a\u4f60\u53ef\u4ee5\u540c\u65f6\u66f4\u6539\u58f0\u660e\u7c7b\u578b\u548c\u5b9e\u73b0\u7c7b\u578b\uff0c\u4f46\u662f\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u79cd\u66f4\u6539\u4f1a\u6b63\u786e\u7f16\u8bd1\u7a0b\u5e8f\u3002\u5982\u679c\u5ba2\u6237\u7aef\u4ee3\u7801\u5bf9\u539f\u5b9e\u73b0\u7c7b\u578b\u4f7f\u7528\u4e86\u66ff\u6362\u65f6\u4e0d\u5b58\u5728\u7684\u65b9\u6cd5\uff0c\u6216\u8005\u5ba2\u6237\u7aef\u4ee3\u7801\u5c06\u5b9e\u4f8b\u4f20\u9012\u7ed9\u9700\u8981\u539f\u5b9e\u73b0\u7c7b\u578b\u7684\u65b9\u6cd5\uff0c\u90a3\u4e48\u5728\u8fdb\u884c\u6b64\u66f4\u6539\u4e4b\u540e\uff0c\u4ee3\u7801\u5c06\u4e0d\u518d\u7f16\u8bd1\u3002\u4f7f\u7528\u63a5\u53e3\u7c7b\u578b\u58f0\u660e\u53d8\u91cf\u53ef\u4ee5\u4fdd\u6301\u4e00\u81f4\u3002"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"It is entirely appropriate to refer to an object by a class rather than an interface if no appropriate interface exists.")," For example, consider value classes, such as String and BigInteger. Value classes are rarely written with multiple implementations in mind. They are often final and rarely have corresponding interfaces. It is perfectly appropriate to use such a value class as a parameter, variable, field, or return type."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"\u5982\u679c\u6ca1\u6709\u5408\u9002\u7684\u63a5\u53e3\u5b58\u5728\uff0c\u90a3\u4e48\u7528\u7c7b\u5f15\u7528\u5bf9\u8c61\u662f\u5b8c\u5168\u5408\u9002\u7684\u3002")," \u4f8b\u5982\uff0c\u8003\u8651\u503c\u7c7b\uff0c\u5982 String \u548c BigInteger\u3002\u503c\u7c7b\u5f88\u5c11\u5728\u7f16\u5199\u65f6\u8003\u8651\u5230\u591a\u4e2a\u5b9e\u73b0\u3002\u5b83\u4eec\u901a\u5e38\u662f final \u7684\uff0c\u5f88\u5c11\u6709\u76f8\u5e94\u7684\u63a5\u53e3\u3002\u4f7f\u7528\u8fd9\u6837\u7684\u503c\u7c7b\u4f5c\u4e3a\u53c2\u6570\u3001\u53d8\u91cf\u3001\u5b57\u6bb5\u6216\u8fd4\u56de\u7c7b\u578b\u975e\u5e38\u5408\u9002\u3002"),(0,n.kt)("p",null,"A second case in which there is no appropriate interface type is that of objects belonging to a framework whose fundamental types are classes rather than interfaces. If an object belongs to such a class-based framework, it is preferable to refer to it by the relevant base class, which is often abstract, rather than by its implementation class. Many java.io classes such as OutputStream fall into this category."),(0,n.kt)("p",null,"\u6ca1\u6709\u5408\u9002\u63a5\u53e3\u7c7b\u578b\u7684\u7b2c\u4e8c\u79cd\u60c5\u51b5\u662f\u5c5e\u4e8e\u6846\u67b6\u7684\u5bf9\u8c61\uff0c\u6846\u67b6\u7684\u57fa\u672c\u7c7b\u578b\u662f\u7c7b\u800c\u4e0d\u662f\u63a5\u53e3\u3002\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u5c5e\u4e8e\u8fd9\u6837\u4e00\u4e2a\u57fa\u4e8e\u7c7b\u7684\u6846\u67b6\uff0c\u90a3\u4e48\u6700\u597d\u4f7f\u7528\u76f8\u5173\u7684\u57fa\u7c7b\u6765\u5f15\u7528\u5b83\uff0c\u8fd9\u901a\u5e38\u662f\u62bd\u8c61\u7684\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u5b83\u7684\u5b9e\u73b0\u7c7b\u3002\u5728 java.io \u7c7b\u4e2d\u8bb8\u591a\u8bf8\u5982 OutputStream \u4e4b\u7c7b\u7684\u5c31\u5c5e\u4e8e\u8fd9\u79cd\u60c5\u51b5\u3002"),(0,n.kt)("p",null,"A final case in which there is no appropriate interface type is that of classes that implement an interface but also provide extra methods not found in the interface\u2014for example, PriorityQueue has a comparator method that is not present on the Queue interface. Such a class should be used to refer to its instances only if the program relies on the extra methods, and this should be very rare."),(0,n.kt)("p",null,"\u6ca1\u6709\u5408\u9002\u63a5\u53e3\u7c7b\u578b\u7684\u6700\u540e\u4e00\u79cd\u60c5\u51b5\u662f\uff0c\u5b9e\u73b0\u63a5\u53e3\u4f46\u540c\u65f6\u63d0\u4f9b\u63a5\u53e3\u4e2d\u4e0d\u5b58\u5728\u7684\u989d\u5916\u65b9\u6cd5\u7684\u7c7b\uff0c\u4f8b\u5982\uff0cPriorityQueue \u6709\u4e00\u4e2a\u5728 Queue \u63a5\u53e3\u4e0a\u4e0d\u5b58\u5728\u7684\u6bd4\u8f83\u5668\u65b9\u6cd5\u3002\u53ea\u6709\u5f53\u7a0b\u5e8f\u4f9d\u8d56\u4e8e\u989d\u5916\u7684\u65b9\u6cd5\u65f6\uff0c\u624d\u5e94\u8be5\u4f7f\u7528\u8fd9\u6837\u7684\u7c7b\u6765\u5f15\u7528\u5b83\u7684\u5b9e\u4f8b\uff0c\u8fd9\u79cd\u60c5\u51b5\u5e94\u8be5\u975e\u5e38\u5c11\u89c1\u3002"),(0,n.kt)("p",null,"These three cases are not meant to be exhaustive but merely to convey the flavor of situations where it is appropriate to refer to an object by its class. In practice, it should be apparent whether a given object has an appropriate interface. If it does, your program will be more flexible and stylish if you use the interface to refer to the object. ",(0,n.kt)("strong",{parentName:"p"},"If there is no appropriate interface, just use the least specific class in the class hierarchy that provides the required functionality.")),(0,n.kt)("p",null,"\u8fd9\u4e09\u79cd\u60c5\u51b5\u5e76\u4e0d\u662f\u9762\u9762\u4ff1\u5230\u7684\uff0c\u800c\u4ec5\u4ec5\u662f\u4e3a\u4e86\u4f20\u8fbe\u9002\u5408\u901a\u8fc7\u7c7b\u5f15\u7528\u5bf9\u8c61\u7684\u60c5\u51b5\u3002\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u7ed9\u5b9a\u5bf9\u8c61\u662f\u5426\u5177\u6709\u9002\u5f53\u7684\u63a5\u53e3\u5e94\u8be5\u662f\u663e\u800c\u6613\u89c1\u7684\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u5982\u679c\u4f7f\u7528\u63a5\u53e3\u5f15\u7528\u5bf9\u8c61\uff0c\u7a0b\u5e8f\u5c06\u66f4\u52a0\u7075\u6d3b\u548c\u6d41\u884c\u3002",(0,n.kt)("strong",{parentName:"p"},"\u5982\u679c\u6ca1\u6709\u5408\u9002\u7684\u63a5\u53e3\uff0c\u5c31\u4f7f\u7528\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u63d0\u4f9b\u6240\u9700\u529f\u80fd\u7684\u6700\u5e95\u5c42\u7684\u7c7b")),(0,n.kt)("hr",null),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"./Chapter-9-Introduction"},"Back to contents of the chapter\uff08\u8fd4\u56de\u7ae0\u8282\u76ee\u5f55\uff09"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Previous Item\uff08\u4e0a\u4e00\u6761\u76ee\uff09\uff1a",(0,n.kt)("a",{parentName:"strong",href:"./Chapter-9-Item-63-Beware-the-performance-of-string-concatenation"},"Item 63: Beware the performance of string concatenation\uff08\u5f53\u5fc3\u5b57\u7b26\u4e32\u8fde\u63a5\u5f15\u8d77\u7684\u6027\u80fd\u95ee\u9898\uff09"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Next Item\uff08\u4e0b\u4e00\u6761\u76ee\uff09\uff1a",(0,n.kt)("a",{parentName:"strong",href:"./Chapter-9-Item-65-Prefer-interfaces-to-reflection"},"Item 65: Prefer interfaces to reflection\uff08\u63a5\u53e3\u4f18\u4e8e\u53cd\u5c04\uff09")))))}h.isMDXComponent=!0}}]);