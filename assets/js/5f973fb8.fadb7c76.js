"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[6500],{3905:(n,e,t)=>{t.d(e,{Zo:()=>p,kt:()=>g});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function l(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function s(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},i=Object.keys(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var o=a.createContext({}),u=function(n){var e=a.useContext(o),t=e;return n&&(t="function"==typeof n?n(e):l(l({},e),n)),t},p=function(n){var e=u(n.components);return a.createElement(o.Provider,{value:e},n.children)},d={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,o=n.parentName,p=s(n,["components","mdxType","originalType","parentName"]),c=u(t),g=r,m=c["".concat(o,".").concat(g)]||c[g]||d[g]||i;return t?a.createElement(m,l(l({ref:e},p),{},{components:t})):a.createElement(m,l({ref:e},p))}));function g(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,l=new Array(i);l[0]=c;var s={};for(var o in e)hasOwnProperty.call(e,o)&&(s[o]=e[o]);s.originalType=n,s.mdxType="string"==typeof n?n:r,l[1]=s;for(var u=2;u<i;u++)l[u]=t[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},1523:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>u});var a=t(7462),r=(t(7294),t(3905));const i={},l="\u9644\u5f55:\u7406\u89e3equals\u548chashCode\u65b9\u6cd5",s={unversionedId:"Books/OnJava8/Appendix-Understanding-equals-and-hashCode",id:"Books/OnJava8/Appendix-Understanding-equals-and-hashCode",title:"\u9644\u5f55:\u7406\u89e3equals\u548chashCode\u65b9\u6cd5",description:"\u5047\u8bbe\u6709\u4e00\u4e2a\u5bb9\u5668\u4f7f\u7528hash\u51fd\u6570\uff0c\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u653e\u5230\u8fd9\u4e2a\u5bb9\u5668\u65f6\uff0c\u4f60\u5fc5\u987b\u5b9a\u4e49 hashCode() \u51fd\u6570\u548c equals() \u51fd\u6570\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e00\u8d77\u88ab\u7528\u4e8ehash\u5bb9\u5668\u4e2d\u7684\u67e5\u8be2\u64cd\u4f5c\u3002",source:"@site/docs/Books/OnJava8/Appendix-Understanding-equals-and-hashCode.md",sourceDirName:"Books/OnJava8",slug:"/Books/OnJava8/Appendix-Understanding-equals-and-hashCode",permalink:"/docs/Books/OnJava8/Appendix-Understanding-equals-and-hashCode",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/OnJava8/Appendix-Understanding-equals-and-hashCode.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u9644\u5f55:C++\u548cJava\u7684\u4f18\u826f\u4f20\u7edf",permalink:"/docs/Books/OnJava8/Appendix-The-Positive-Legacy-of-C-plus-plus-and-Java"},next:{title:"GLOSSARY",permalink:"/docs/Books/OnJava8/GLOSSARY"}},o={},u=[{value:"equals\u89c4\u8303",id:"equals\u89c4\u8303",level:2},{value:"\u4e0d\u540c\u5b50\u7c7b\u7684\u76f8\u7b49\u6027",id:"\u4e0d\u540c\u5b50\u7c7b\u7684\u76f8\u7b49\u6027",level:3},{value:"\u54c8\u5e0c\u548c\u54c8\u5e0c\u7801",id:"\u54c8\u5e0c\u548c\u54c8\u5e0c\u7801",level:2},{value:"\u7406\u89e3 hashCode",id:"\u7406\u89e3-hashcode",level:3},{value:"\u4e3a\u4e86\u901f\u5ea6\u800c\u6563\u5217",id:"\u4e3a\u4e86\u901f\u5ea6\u800c\u6563\u5217",level:3},{value:"\u91cd\u5199 hashCode()",id:"\u91cd\u5199-hashcode",level:3},{value:"\u8c03\u4f18 HashMap",id:"\u8c03\u4f18-hashmap",level:2}],p={toc:u};function d(n){let{components:e,...t}=n;return(0,r.kt)("wrapper",(0,a.Z)({},p,t,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u9644\u5f55\u7406\u89e3equals\u548chashcode\u65b9\u6cd5"},"\u9644\u5f55:\u7406\u89e3equals\u548chashCode\u65b9\u6cd5"),(0,r.kt)("p",null,"\u5047\u8bbe\u6709\u4e00\u4e2a\u5bb9\u5668\u4f7f\u7528hash\u51fd\u6570\uff0c\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u653e\u5230\u8fd9\u4e2a\u5bb9\u5668\u65f6\uff0c\u4f60\u5fc5\u987b\u5b9a\u4e49 ",(0,r.kt)("strong",{parentName:"p"},"hashCode()")," \u51fd\u6570\u548c ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u51fd\u6570\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e00\u8d77\u88ab\u7528\u4e8ehash\u5bb9\u5668\u4e2d\u7684\u67e5\u8be2\u64cd\u4f5c\u3002"),(0,r.kt)("h2",{id:"equals\u89c4\u8303"},"equals\u89c4\u8303"),(0,r.kt)("p",null,"\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u7c7b\u7684\u65f6\u5019\uff0c\u5b83\u81ea\u52a8\u7ee7\u627f\u81ea ",(0,r.kt)("strong",{parentName:"p"},"Objcet")," \u7c7b\u3002\u5982\u679c\u4f60\u4e0d\u8986\u5199 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \uff0c\u4f60\u5c06\u4f1a\u83b7\u5f97 ",(0,r.kt)("strong",{parentName:"p"},"Objcet")," \u5bf9\u8c61\u7684 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u51fd\u6570\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd9\u4e2a\u51fd\u6570\u4f1a\u6bd4\u8f83\u5bf9\u8c61\u7684\u5730\u5740\u3002\u6240\u4ee5\u53ea\u6709\u4f60\u5728\u6bd4\u8f83\u540c\u4e00\u4e2a\u5bf9\u8c61\u7684\u65f6\u5019\uff0c\u4f60\u624d\u4f1a\u83b7\u5f97",(0,r.kt)("strong",{parentName:"p"},"true"),'\u3002\u9ed8\u8ba4\u7684\u60c5\u51b5\u662f"\u533a\u5206\u5ea6\u6700\u9ad8\u7684"\u3002'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// equalshashcode/DefaultComparison.java\nclass DefaultComparison {\n    private int i, j, k;\n    DefaultComparison(int i, int j, int k) {\n        this.i = i;\n        this.j = j;\n        this.k = k;\n    }\n    \n    public static void main(String[] args) {\n        DefaultComparison \n        a = new DefaultComparison(1, 2, 3),\n        b = new DefaultComparison(1, 2, 3);\n        System.out.println(a == a);\n        System.out.println(a == b);\n    } \n} \n/*\nOutput:\ntrue\nfalse\n*/\n\n")),(0,r.kt)("p",null,"\u901a\u5e38\u4f60\u4f1a\u5e0c\u671b\u653e\u5bbd\u8fd9\u4e2a\u9650\u5236\u3002\u4e00\u822c\u6765\u8bf4\u5982\u679c\u4e24\u4e2a\u5bf9\u8c61\u6709\u76f8\u540c\u7684\u7c7b\u578b\u548c\u76f8\u540c\u7684\u5b57\u6bb5\uff0c\u4f60\u4f1a\u8ba4\u4e3a\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u76f8\u7b49\uff0c\u4f46\u4e5f\u4f1a\u6709\u4e00\u4e9b\u4f60\u4e0d\u60f3\u52a0\u5165 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u51fd\u6570\u4e2d\u6765\u6bd4\u8f83\u7684\u5b57\u6bb5\u3002\u8fd9\u662f\u7c7b\u578b\u8bbe\u8ba1\u7684\u4e00\u90e8\u5206\u3002"),(0,r.kt)("p",null,"\u4e00\u4e2a\u5408\u9002\u7684 ",(0,r.kt)("strong",{parentName:"p"},"equals()"),"\u51fd\u6570\u5fc5\u987b\u6ee1\u8db3\u4ee5\u4e0b\u4e94\u70b9\u6761\u4ef6\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u53cd\u8eab\u6027\uff1a\u5bf9\u4e8e\u4efb\u4f55 ",(0,r.kt)("strong",{parentName:"li"},"x"),"\uff0c ",(0,r.kt)("strong",{parentName:"li"},"x.equals(x)")," \u5e94\u8be5\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"li"},"true"),"\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5bf9\u79f0\u6027\uff1a\u5bf9\u4e8e\u4efb\u4f55 ",(0,r.kt)("strong",{parentName:"li"},"x")," \u548c ",(0,r.kt)("strong",{parentName:"li"},"y"),"\uff0c ",(0,r.kt)("strong",{parentName:"li"},"x.equals(y)")," \u5e94\u8be5\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"li"},"true"),"\u5f53\u4e14\u4ec5\u5f53 ",(0,r.kt)("strong",{parentName:"li"},"y.equals(x)")," \u8fd4\u56de ",(0,r.kt)("strong",{parentName:"li"},"true")," \u3002"),(0,r.kt)("li",{parentName:"ol"},"\u4f20\u9012\u6027\uff1a\u5bf9\u4e8e\u4efb\u4f55",(0,r.kt)("strong",{parentName:"li"},"x"),",",(0,r.kt)("strong",{parentName:"li"},"y"),",\u8fd8\u6709",(0,r.kt)("strong",{parentName:"li"},"z"),"\uff0c\u5982\u679c ",(0,r.kt)("strong",{parentName:"li"},"x.equals(y)")," \u8fd4\u56de ",(0,r.kt)("strong",{parentName:"li"},"true")," \u5e76\u4e14 ",(0,r.kt)("strong",{parentName:"li"},"y.equals(z)")," \u8fd4\u56de ",(0,r.kt)("strong",{parentName:"li"},"true"),"\uff0c\u90a3\u4e48  ",(0,r.kt)("strong",{parentName:"li"},"x.equals(z)")," \u5e94\u8be5\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"li"},"true"),"\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u4e00\u81f4\u6027\uff1a\u5bf9\u4e8e\u4efb\u4f55 ",(0,r.kt)("strong",{parentName:"li"},"x"),"\u548c",(0,r.kt)("strong",{parentName:"li"},"y"),"\uff0c\u5728\u5bf9\u8c61\u6ca1\u6709\u88ab\u6539\u53d8\u7684\u60c5\u51b5\u4e0b\uff0c\u591a\u6b21\u8c03\u7528 ",(0,r.kt)("strong",{parentName:"li"},"x.equals(y)")," \u5e94\u8be5\u603b\u662f\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"li"},"true")," \u6216\u8005",(0,r.kt)("strong",{parentName:"li"},"false"),"\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5bf9\u4e8e\u4efb\u4f55\u975e",(0,r.kt)("strong",{parentName:"li"},"null"),"\u7684",(0,r.kt)("strong",{parentName:"li"},"x"),"\uff0c",(0,r.kt)("strong",{parentName:"li"},"x.equals(null)"),"\u5e94\u8be5\u8fd4\u56de",(0,r.kt)("strong",{parentName:"li"},"false"),"\u3002")),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u6ee1\u8db3\u8fd9\u4e9b\u6761\u4ef6\u7684\u6d4b\u8bd5\uff0c\u5e76\u4e14\u5224\u65ad\u5bf9\u8c61\u662f\u5426\u548c\u81ea\u5df1\u76f8\u7b49\uff08\u6211\u4eec\u8fd9\u91cc\u79f0\u547c\u5176\u4e3a",(0,r.kt)("strong",{parentName:"p"},"\u53f3\u503c"),"\uff09\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c",(0,r.kt)("strong",{parentName:"li"},"\u53f3\u503c"),"\u662f",(0,r.kt)("strong",{parentName:"li"},"null"),"\uff0c\u90a3\u4e48\u4e0d\u76f8\u7b49\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c",(0,r.kt)("strong",{parentName:"li"},"\u53f3\u503c"),"\u662f",(0,r.kt)("strong",{parentName:"li"},"this"),"\uff0c\u90a3\u4e48\u4e24\u4e2a\u5bf9\u8c61\u76f8\u7b49\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c",(0,r.kt)("strong",{parentName:"li"},"\u53f3\u503c"),"\u4e0d\u662f\u540c\u4e00\u4e2a\u7c7b\u578b\u6216\u8005\u5b50\u7c7b\uff0c\u90a3\u4e48\u4e24\u4e2a\u5bf9\u8c61\u4e0d\u76f8\u7b49\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5982\u679c\u6240\u6709\u4e0a\u9762\u7684\u68c0\u67e5\u901a\u8fc7\u4e86\uff0c\u90a3\u4e48\u4f60\u5fc5\u987b\u51b3\u5b9a ",(0,r.kt)("strong",{parentName:"li"},"\u53f3\u503c")," \u4e2d\u7684\u54ea\u4e9b\u5b57\u6bb5\u662f\u91cd\u8981\u7684\uff0c\u7136\u540e\u6bd4\u8f83\u8fd9\u4e9b\u5b57\u6bb5\u3002\nJava 7 \u5f15\u5165\u4e86 ",(0,r.kt)("strong",{parentName:"li"},"Objects")," \u7c7b\u578b\u6765\u5e2e\u52a9\u8fd9\u4e2a\u6d41\u7a0b\uff0c\u8fd9\u6837\u6211\u4eec\u80fd\u591f\u5199\u51fa\u66f4\u597d\u7684 ",(0,r.kt)("strong",{parentName:"li"},"equals()")," \u51fd\u6570\u3002")),(0,r.kt)("p",null,"\u4e0b\u9762\u7684\u4f8b\u5b50\u6bd4\u8f83\u4e86\u4e0d\u540c\u7c7b\u578b\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Equality"),"\u7c7b\u3002\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u7684\u4ee3\u7801\uff0c\u6211\u4eec\u4f7f\u7528",(0,r.kt)("em",{parentName:"p"},"\u5de5\u5382\u51fd\u6570\u8bbe\u8ba1\u6a21"),"\u5f0f\u6765\u5b9e\u73b0\u6837\u4f8b\u3002 ",(0,r.kt)("strong",{parentName:"p"},"EqualityFactory"),"\u63a5\u53e3\u63d0\u4f9b",(0,r.kt)("strong",{parentName:"p"},"make()"),"\u51fd\u6570\u6765\u751f\u6210\u4e00\u4e2a",(0,r.kt)("strong",{parentName:"p"},"Equaity"),"\u5bf9\u8c61\uff0c\u8fd9\u6837\u4e0d\u540c\u7684",(0,r.kt)("strong",{parentName:"p"},"EqualityFactory"),"\u80fd\u591f\u751f\u6210",(0,r.kt)("strong",{parentName:"p"},"Equality"),"\u4e0d\u540c\u7684\u5b50\u7c7b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// equalshashcode/EqualityFactory.java\nimport java.util.*;\ninterface EqualityFactory {\n    Equality make(int i, String s, double d);\n}\n")),(0,r.kt)("p",null,"\u73b0\u5728\u6211\u4eec\u6765\u5b9a\u4e49 ",(0,r.kt)("strong",{parentName:"p"},"Equality"),"\uff0c\u5b83\u5305\u542b\u4e09\u4e2a\u5b57\u6bb5\uff08\u6240\u6709\u7684\u5b57\u6bb5\u6211\u4eec\u8ba4\u4e3a\u5728\u6bd4\u8f83\u4e2d\u90fd\u5f88\u91cd\u8981\uff09\u548c\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u51fd\u6570\u7528\u6765\u6ee1\u8db3\u4e0a\u8ff0\u7684\u56db\u79cd\u68c0\u67e5\u3002\u6784\u9020\u51fd\u6570\u5c55\u793a\u4e86\u5b83\u7684\u7c7b\u540d\u6765\u4fdd\u8bc1\u6211\u4eec\u5728\u6267\u884c\u6211\u4eec\u60f3\u8981\u7684\u6d4b\u8bd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/Equality.java\nimport java.util.*;\npublic class Equality {\n    protected int i;\n    protected String s;\n    protected double d;\n    public Equality(int i, String s, double d) {\n        this.i = i;\n        this.s = s;\n        this.d = d;\n        System.out.println("made \'Equality\'");\n    } \n    \n    @Override\n    public boolean equals(Object rval) {\n        if(rval == null)\n            return false;\n        if(rval == this)\n            return true;\n        if(!(rval instanceof Equality))\n            return false;\n        Equality other = (Equality)rval;\n        if(!Objects.equals(i, other.i))\n            return false;\n        if(!Objects.equals(s, other.s))\n            return false;\n        if(!Objects.equals(d, other.d))return false;\n            return true;\n    } \n    \n    public void test(String descr, String expected, Object rval) {\n        System.out.format("-- Testing %s --%n" + "%s instanceof Equality: %s%n" +\n        "Expected %s, got %s%n",\n        descr, descr, rval instanceof Equality,\n        expected, equals(rval));\n    } \n    \n    public static void testAll(EqualityFactory eqf) {\n        Equality\n        e = eqf.make(1, "Monty", 3.14),\n        eq = eqf.make(1, "Monty", 3.14),\n        neq = eqf.make(99, "Bob", 1.618);\n        e.test("null", "false", null);\n        e.test("same object", "true", e);\n        e.test("different type",\n        "false", Integer.valueOf(99));e.test("same values", "true", eq);\n        e.test("different values", "false", neq);\n    } \n    \n    public static void main(String[] args) {\n        testAll( (i, s, d) -> new Equality(i, s, d));\n    } \n    \n} \n/*\nOutput:\nmade \'Equality\'\nmade \'Equality\'\nmade \'Equality\'\n-- Testing null --\nnull instanceof Equality: false\nExpected false, got false\n-- Testing same object --\nsame object instanceof Equality: true\nExpected true, got true\n-- Testing different type --\ndifferent type instanceof Equality: false\nExpected false, got false-- Testing same values --\nsame values instanceof Equality: true\nExpected true, got true\n-- Testing different values --\ndifferent values instanceof Equality: true\nExpected false, got false\n*/\n')),(0,r.kt)("p",null," ",(0,r.kt)("strong",{parentName:"p"},"testAll()")," \u6267\u884c\u4e86\u6211\u4eec\u671f\u671b\u7684\u6240\u6709\u4e0d\u540c\u7c7b\u578b\u5bf9\u8c61\u7684\u6bd4\u8f83\u3002\u5b83\u4f7f\u7528\u5de5\u5382\u521b\u5efa\u4e86",(0,r.kt)("strong",{parentName:"p"},"Equality"),"\u5bf9\u8c61\u3002"),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("strong",{parentName:"p"},"main()")," \u91cc\uff0c\u8bf7\u6ce8\u610f\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"testAll()")," \u7684\u8c03\u7528\u5f88\u7b80\u5355\u3002\u56e0\u4e3a",(0,r.kt)("strong",{parentName:"p"},"EqualityFactory"),"\u6709\u7740\u5355\u4e00\u7684\u51fd\u6570\uff0c\u5b83\u80fd\u591f\u548clambda\u8868\u8fbe\u5f0f\u4e00\u8d77\u4f7f\u7528\u6765\u8868\u793a ",(0,r.kt)("strong",{parentName:"p"},"make()")," \u51fd\u6570\u3002"),(0,r.kt)("p",null,"\u4e0a\u8ff0\u7684 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u51fd\u6570\u975e\u5e38\u7e41\u7410\uff0c\u5e76\u4e14\u6211\u4eec\u80fd\u591f\u5c06\u5176\u7b80\u5316\u6210\u89c4\u8303\u7684\u5f62\u5f0f\uff0c\u8bf7\u6ce8\u610f\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("strong",{parentName:"li"},"instanceof"),"\u68c0\u67e5\u51cf\u5c11\u4e86",(0,r.kt)("strong",{parentName:"li"},"null"),"\u68c0\u67e5\u7684\u9700\u8981\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u548c",(0,r.kt)("strong",{parentName:"li"},"this"),"\u7684\u6bd4\u8f83\u662f\u591a\u4f59\u7684\u3002\u4e00\u4e2a\u6b63\u786e\u4e66\u5199\u7684 ",(0,r.kt)("strong",{parentName:"li"},"equals()")," \u51fd\u6570\u80fd\u6b63\u786e\u5730\u548c\u81ea\u5df1\u6bd4\u8f83\u3002")),(0,r.kt)("p",null,"\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"&&")," \u662f\u4e00\u4e2a\u77ed\u8def\u6bd4\u8f83\uff0c\u5b83\u4f1a\u5728\u7b2c\u4e00\u6b21\u9047\u5230\u5931\u8d25\u7684\u65f6\u5019\u9000\u51fa\u5e76\u8fd4\u56de",(0,r.kt)("strong",{parentName:"p"},"false"),"\u3002\u6240\u4ee5\uff0c\u901a\u8fc7\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"&&")," \u5c06\u68c0\u67e5\u94fe\u63a5\u8d77\u6765\uff0c\u6211\u4eec\u53ef\u4ee5\u5199\u51fa\u66f4\u7cbe\u7b80\u7684 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u51fd\u6570\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// equalshashcode/SuccinctEquality.java\nimport java.util.*;\npublic class SuccinctEquality extends Equality {\n    public SuccinctEquality(int i, String s, double d) {\n        super(i, s, d);\n        System.out.println(\"made 'SuccinctEquality'\");\n    } \n    \n    @Override\n    public boolean equals(Object rval) {\n        return rval instanceof SuccinctEquality &&\n        Objects.equals(i, ((SuccinctEquality)rval).i) &&\n        Objects.equals(s, ((SuccinctEquality)rval).s) &&\n        Objects.equals(d, ((SuccinctEquality)rval).d);\n    } \n    public static void main(String[] args) {\n        Equality.testAll( (i, s, d) ->\n        new SuccinctEquality(i, s, d));\n    } \n    \n}\n/* Output:\nmade 'Equality'\nmade 'SuccinctEquality'\nmade 'Equality'\nmade 'SuccinctEquality'\nmade 'Equality'\nmade 'SuccinctEquality'\n-- Testing null --\nnull instanceof Equality: false\nExpected false, got false\n-- Testing same object --\nsame object instanceof Equality: true\nExpected true, got true\n-- Testing different type --\ndifferent type instanceof Equality: false\nExpected false, got false\n-- Testing same values --\nsame values instanceof Equality: true\nExpected true, got true\n-- Testing different values --different values instanceof Equality: true\nExpected false, got false\n*/\n")),(0,r.kt)("p",null,"\u5bf9\u4e8e\u6bcf\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"SuccinctEquality"),"\uff0c\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u5728\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u524d\u88ab\u8c03\u7528\uff0c\u8f93\u51fa\u663e\u793a\u6211\u4eec\u4f9d\u7136\u83b7\u5f97\u4e86\u6b63\u786e\u7684\u7ed3\u679c\uff0c\u4f60\u53ef\u4ee5\u53d1\u73b0\u77ed\u8def\u8fd4\u56de\u5df2\u7ecf\u53d1\u751f\u4e86\uff0c\u4e0d\u7136\u7684\u8bdd\uff0c",(0,r.kt)("strong",{parentName:"p"},"null"),"\u6d4b\u8bd5\u548c\u201c\u4e0d\u540c\u7c7b\u578b\u201d\u7684\u6d4b\u8bd5\u4f1a\u5728 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u51fd\u6570\u4e0b\u9762\u7684\u6bd4\u8f83\u4e2d\u5f3a\u5236\u8f6c\u5316\u7684\u65f6\u5019\u629b\u51fa\u5f02\u5e38\u3002\n",(0,r.kt)("strong",{parentName:"p"},"Objects.equals()")," \u4f1a\u5728\u4f60\u7ec4\u5408\u5176\u4ed6\u7c7b\u578b\u7684\u65f6\u5019\u53d1\u6325\u5f88\u5927\u7684\u4f5c\u7528\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// equalshashcode/ComposedEquality.java\nimport java.util.*;\nclass Part {\n    String ss;\n    double dd;\n    \n    Part(String ss, double dd) {\n        this.ss = ss;\n        this.dd = dd;\n    }\n    \n    @Override\n    public boolean equals(Object rval) {\n        return rval instanceof Part &&\n        Objects.equals(ss, ((Part)rval).ss) &&\n        Objects.equals(dd, ((Part)rval).dd);\n    } \n    \n} \n    \npublic class ComposedEquality extends SuccinctEquality {\n    Part part;\n    public ComposedEquality(int i, String s, double d) {\n        super(i, s, d);\n        part = new Part(s, d);\n        System.out.println(\"made 'ComposedEquality'\");\n    }\n    @Override\n    public boolean equals(Object rval) {\n        return rval instanceof ComposedEquality &&\n        super.equals(rval) &&\n        Objects.equals(part,\n        ((ComposedEquality)rval).part);\n        \n    } \n        \n    public static void main(String[] args) {\n        Equality.testAll( (i, s, d) ->\n        new ComposedEquality(i, s, d));\n    }\n}\n/*\nOutput:\nmade 'Equality'\nmade 'SuccinctEquality'\nmade 'ComposedEquality'\nmade 'Equality'\nmade 'SuccinctEquality'\nmade 'ComposedEquality'\nmade 'Equality'\nmade 'SuccinctEquality'\nmade 'ComposedEquality'\n-- Testing null --null instanceof Equality: false\nExpected false, got false\n-- Testing same object --\nsame object instanceof Equality: true\nExpected true, got true\n-- Testing different type --\ndifferent type instanceof Equality: false\nExpected false, got false\n-- Testing same values --\nsame values instanceof Equality: true\nExpected true, got true\n-- Testing different values --\ndifferent values instanceof Equality: true\nExpected false, got false\n*/\n")),(0,r.kt)("p",null,"\u6ce8\u610fsuper.equals()\u8fd9\u4e2a\u8c03\u7528\uff0c\u6ca1\u6709\u5fc5\u8981\u91cd\u65b0\u53d1\u660e\u5b83\uff08\u56e0\u4e3a\u4f60\u4e0d\u603b\u662f\u6709\u6743\u9650\u8bbf\u95ee\u57fa\u7c7b\u6240\u6709\u7684\u5fc5\u8981\u5b57\u6bb5\uff09"),(0,r.kt)("h3",{id:"\u4e0d\u540c\u5b50\u7c7b\u7684\u76f8\u7b49\u6027"},"\u4e0d\u540c\u5b50\u7c7b\u7684\u76f8\u7b49\u6027"),(0,r.kt)("p",null,"\u7ee7\u627f\u610f\u5473\u7740\u4e24\u4e2a\u4e0d\u540c\u5b50\u7c7b\u7684\u5bf9\u8c61\u5f53\u5176\u5411\u4e0a\u8f6c\u578b\u7684\u65f6\u5019\u53ef\u4ee5\u662f\u76f8\u7b49\u7684\u3002\u5047\u8bbe\u4f60\u6709\u4e00\u4e2aAnimal\u5bf9\u8c61\u7684\u96c6\u5408\u3002\u8fd9\u4e2a\u96c6\u5408\u5929\u7136\u63a5\u53d7",(0,r.kt)("strong",{parentName:"p"},"Animal"),"\u7684\u5b50\u7c7b\u3002\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\u662f",(0,r.kt)("strong",{parentName:"p"},"Dog"),"\u548c",(0,r.kt)("strong",{parentName:"p"},"Pig"),"\u3002\u6bcf\u4e2a",(0,r.kt)("strong",{parentName:"p"},"Animal"),"\u6709\u4e00\u4e2a",(0,r.kt)("strong",{parentName:"p"},"name"),"\u548c",(0,r.kt)("strong",{parentName:"p"},"size"),"\uff0c\u8fd8\u6709\u552f\u4e00\u7684\u5185\u90e8",(0,r.kt)("strong",{parentName:"p"},"id"),"\u6570\u5b57\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u901a\u8fc7",(0,r.kt)("strong",{parentName:"p"},"Objects"),"\u7c7b\uff0c\u4ee5\u89c4\u8303\u7684\u5f62\u5f0f\u5b9a\u4e49 ",(0,r.kt)("strong",{parentName:"p"},"equals()"),"\u51fd\u6570\u548c",(0,r.kt)("strong",{parentName:"p"},"hashCode()"),"\u3002\u4f46\u662f\u6211\u4eec\u53ea\u80fd\u5728\u57fa\u7c7b",(0,r.kt)("strong",{parentName:"p"},"Animal"),"\u4e2d\u5b9a\u4e49\u4ed6\u4eec\u3002\u5e76\u4e14\u6211\u4eec\u5728\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e2d\u6ca1\u6709\u5305\u542b",(0,r.kt)("strong",{parentName:"p"},"id"),"\u5b57\u6bb5\u3002\u4ece",(0,r.kt)("strong",{parentName:"p"},"equals()"),"\u51fd\u6570\u7684\u89d2\u5ea6\u770b\u5f85\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u53ea\u5173\u5fc3\u5b83\u662f\u5426\u662f",(0,r.kt)("strong",{parentName:"p"},"Animal"),"\uff0c\u800c\u4e0d\u5173\u5fc3\u662f\u5426\u662f",(0,r.kt)("strong",{parentName:"p"},"Animal"),"\u7684\u67d0\u4e2a\u5b50\u7c7b\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/SubtypeEquality.java\nimport java.util.*;\nenum Size { SMALL, MEDIUM, LARGE }\nclass Animal {\n    private static int counter = 0;\n    private final int id = counter++;\n    private final String name;\n    private final Size size;\n    Animal(String name, Size size) {\n        this.name = name;\n        this.size = size;\n    } \n    @Override\n    public boolean equals(Object rval) {\n        return rval instanceof Animal &&\n        // Objects.equals(id, ((Animal)rval).id) && // [1]\n        Objects.equals(name, ((Animal)rval).name) &&\n        Objects.equals(size, ((Animal)rval).size);\n    } \n    \n    @Override\n    public int hashCode() {\n        return Objects.hash(name, size);\n        // return Objects.hash(name, size, id); // [2]\n    } \n    \n    @Override\n    public String toString() {\n        return String.format("%s[%d]: %s %s %x",\n        getClass().getSimpleName(), id,\n        name, size, hashCode());\n    } \n} \n    \nclass Dog extends Animal {\n    Dog(String name, Size size) {\n    super(name, size);\n    } \n} \n\nclass Pig extends Animal {\n    Pig(String name, Size size) {\n    super(name, size);\n    } \n} \n    \npublic class SubtypeEquality {\n    public static void main(String[] args) {\n        Set<Animal> pets = new HashSet<>();\n        pets.add(new Dog("Ralph", Size.MEDIUM));\n        pets.add(new Pig("Ralph", Size.MEDIUM));\n        pets.forEach(System.out::println);\n    } \n} \n/*\nOutput:\nDog[0]: Ralph MEDIUM a752aeee\n*/\n')),(0,r.kt)("p",null,"\u5982\u679c\u6211\u4eec\u53ea\u8003\u8651\u7c7b\u578b\u7684\u8bdd\uff0c\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5b83\u7684\u786e\u8bf4\u5f97\u901a\u2014\u2014\u53ea\u4ece\u57fa\u7c7b\u7684\u89d2\u5ea6\u770b\u5f85\u95ee\u9898\uff0c\u8fd9\u662f\u674e\u6c0f\u66ff\u6362\u539f\u5219\u7684\u57fa\u77f3\u3002\u8fd9\u4e2a\u4ee3\u7801\u5b8c\u7f8e\u7b26\u5408\u66ff\u6362\u7406\u8bba\u56e0\u4e3a\u6d3e\u751f\u7c7b\u6ca1\u6709\u6dfb\u52a0\u4efb\u4f55\u989d\u5916\u4e0d\u518d\u57fa\u7c7b\u4e2d\u7684\u989d\u5916\u51fd\u6570\u3002\u6d3e\u751f\u7c7b\u53ea\u662f\u5728\u8868\u73b0\u4e0a\u4e0d\u540c\uff0c\u800c\u4e0d\u662f\u5728\u63a5\u53e3\u4e0a\u3002\uff08\u5f53\u7136\u8fd9\u4e0d\u662f\u5e38\u6001\uff09"),(0,r.kt)("p",null,"\u4f46\u662f\u5f53\u6211\u4eec\u63d0\u4f9b\u4e86\u4e24\u4e2a\u6709\u7740\u76f8\u540c\u6570\u636e\u7684\u4e0d\u540c\u7684\u5bf9\u8c61\u7c7b\u578b\uff0c\u7136\u540e\u5c06\u4ed6\u4eec\u653e\u7f6e\u5728 ",(0,r.kt)("strong",{parentName:"p"},"HashSet","<","Animal",">")," \u4e2d\u3002\u53ea\u6709\u4ed6\u4eec\u4e2d\u7684\u4e00\u4e2a\u80fd\u5b58\u6d3b\u3002\u8fd9\u5f3a\u8c03\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u4e0d\u662f\u5b8c\u7f8e\u7684\u6570\u5b66\u7406\u8bba\uff0c\u800c\u53ea\u662f\u673a\u68b0\u822c\u7684\u7406\u8bba\u3002\n",(0,r.kt)("strong",{parentName:"p"},"hashCode()")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u5fc5\u987b\u80fd\u591f\u5141\u8bb8\u7c7b\u578b\u5728hash\u6570\u636e\u7ed3\u6784\u4e2d\u6b63\u5e38\u5de5\u4f5c\u3002\u4f8b\u5b50\u4e2d ",(0,r.kt)("strong",{parentName:"p"},"Dog")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"Pig")," \u4f1a\u88ab\u6620\u5c04\u5230\u540c ",(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u7684\u540c\u4e00\u4e2a\u6876\u4e2d\u3002\u8fd9\u4e2a\u65f6\u5019\uff0c",(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u56de\u9000\u5230 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u6765\u533a\u5206\u5bf9\u8c61\uff0c\u4f46\u662f ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u4e5f\u8ba4\u4e3a\u4e24\u4e2a\u5bf9\u8c61\u662f\u76f8\u540c\u7684\u3002",(0,r.kt)("strong",{parentName:"p"},"HashSet"),"\u56e0\u4e3a\u5df2\u7ecf\u6709\u4e00\u4e2a\u76f8\u540c\u7684\u5bf9\u8c61\u4e86\uff0c\u6240\u4ee5\u6ca1\u6709\u6dfb\u52a0 ",(0,r.kt)("strong",{parentName:"p"},"Pig"),"\u3002\n\u6211\u4eec\u4f9d\u7136\u80fd\u591f\u901a\u8fc7\u4f7f\u5f97\u5176\u4ed6\u5b57\u6bb5\u5bf9\u8c61\u4e0d\u540c\u6765\u8ba9\u4f8b\u5b50\u80fd\u591f\u6b63\u5e38\u5de5\u4f5c\u3002\u5728\u8fd9\u91cc\u6bcf\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Animal")," \u5df2\u7ecf\u6709\u4e86\u4e00\u4e2a\u72ec\u4e00\u65e0\u4e8c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"id")," \uff0c\u6240\u4ee5\u4f60\u80fd\u591f\u53d6\u6d88  ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u51fd\u6570\u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"[1]")," \u884c\u6ce8\u91ca\uff0c\u6216\u8005\u53d6\u6d88 ",(0,r.kt)("strong",{parentName:"p"},"hashCode()")," \u51fd\u6570\u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"[2]")," \u884c\u6ce8\u91ca\u3002\u6309\u7167\u89c4\u8303\uff0c\u4f60\u5e94\u8be5\u540c\u65f6\u5b8c\u6210\u8fd9\u4e24\u4e2a\u64cd\u4f5c\uff0c\u5982\u6b64\u80fd\u591f\u5c06\u6240\u6709\u201c\u4e0d\u53d8\u7684\u201d\u5b57\u6bb5\u5305\u542b\u5728\u4e24\u4e2a\u64cd\u4f5c\u4e2d\uff08\u201c\u4e0d\u53d8\u201d\u6240\u4ee5 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"hashCode()")," \u5728\u54c8\u5e0c\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u6392\u5e8f\u548c\u53d6\u503c\u65f6\uff0c\u4e0d\u4f1a\u751f\u6210\u4e0d\u540c\u7684\u503c\u3002\u6211\u5c06\u201c\u4e0d\u53d8\u7684\u201d\u653e\u5728\u5f15\u53f7\u4e2d\u56e0\u4e3a\u4f60\u5fc5\u987b\u8ba1\u7b97\u51fa\u662f\u5426\u5df2\u7ecf\u53d1\u751f\u53d8\u5316\uff09\u3002"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},(0,r.kt)("strong",{parentName:"p"},"\u65c1\u6ce8"),"\uff1a \u5728",(0,r.kt)("strong",{parentName:"p"},"hashCode()"),"\u4e2d\uff0c\u5982\u679c\u4f60\u53ea\u80fd\u591f\u4f7f\u7528\u4e00\u4e2a\u5b57\u6bb5\uff0c\u4f7f\u7528",(0,r.kt)("strong",{parentName:"p"},"Objcets.hashCode()"),"\u3002\u5982\u679c\u4f60\u4f7f\u7528\u591a\u4e2a\u5b57\u6bb5\uff0c\u90a3\u4e48\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Objects.hash()"),"\u3002")),(0,r.kt)("p",null,"\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6807\u51c6\u65b9\u5f0f\uff0c\u5c06 ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u5b9a\u4e49\u5728\u5b50\u7c7b\u4e2d\uff08\u4e0d\u5305\u542b ",(0,r.kt)("strong",{parentName:"p"},"id")," \uff09\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/SubtypeEquality2.java\nimport java.util.*;\nclass Dog2 extends Animal {\n    Dog2(String name, Size size) {\n        super(name, size);\n    } \n    \n    @Override\n    public boolean equals(Object rval) {\n        return rval instanceof Dog2 &&super.equals(rval);\n    } \n} \n\nclass Pig2 extends Animal {\n    Pig2(String name, Size size) {\n    super(name, size);\n    } \n    \n    @Override\n    public boolean equals(Object rval) {\n        return rval instanceof Pig2 &&\n        super.equals(rval);\n    } \n}\n\npublic class SubtypeEquality2 {\n    public static void main(String[] args) {\n        Set<Animal> pets = new HashSet<>();\n        pets.add(new Dog2("Ralph", Size.MEDIUM));\n        pets.add(new Pig2("Ralph", Size.MEDIUM));\n        pets.forEach(System.out::println);\n    }\n} \n/*\nOutput:\nDog2[0]: Ralph MEDIUM a752aeee\nPig2[1]: Ralph MEDIUM a752aeee\n*/\n')),(0,r.kt)("p",null,"\u6ce8\u610f ",(0,r.kt)("strong",{parentName:"p"},"hashCode()")," \u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff0c\u4f46\u662f\u56e0\u4e3a\u5bf9\u8c61\u4e0d\u518d ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \uff0c\u6240\u4ee5\u4e24\u4e2a\u51fd\u6570\u90fd\u51fa\u73b0\u5728",(0,r.kt)("strong",{parentName:"p"},"HashSet"),"\u4e2d\u3002\u53e6\u5916\uff0c",(0,r.kt)("strong",{parentName:"p"},"super.equals()")," \u610f\u5473\u7740\u6211\u4eec\u4e0d\u9700\u8981\u8bbf\u95ee\u57fa\u7c7b\u7684",(0,r.kt)("strong",{parentName:"p"},"private"),"\u5b57\u6bb5\u3002"),(0,r.kt)("p",null,"\u4e00\u79cd\u8bf4\u6cd5\u662fJava\u4ece",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u548c",(0,r.kt)("strong",{parentName:"p"},"hashCode()")," \u7684\u5b9a\u4e49\u4e2d\u5206\u79bb\u4e86\u53ef\u66ff\u4ee3\u6027\u3002\u6211\u4eec\u4ecd\u7136\u80fd\u591f\u5c06",(0,r.kt)("strong",{parentName:"p"},"Dog"),"\u548c",(0,r.kt)("strong",{parentName:"p"},"Pig"),"\u653e\u7f6e\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Set","<","Animal\\",">")," \u4e2d\uff0c\u65e0\u8bba ",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"hashCode()")," \u662f\u5982\u4f55\u5b9a\u4e49\u7684\uff0c\u4f46\u662f\u5bf9\u8c61\u4e0d\u4f1a\u5728\u54c8\u5e0c\u6570\u636e\u7ed3\u6784\u4e2d\u6b63\u5e38\u5de5\u4f5c\uff0c\u9664\u975e\u8fd9\u4e9b\u51fd\u6570\u80fd\u591f\u88ab\u5408\u7406\u5b9a\u4e49\u3002\u4e0d\u5e78\u7684\u662f\uff0c",(0,r.kt)("strong",{parentName:"p"},"equals()")," \u4e0d\u603b\u662f\u548c ",(0,r.kt)("strong",{parentName:"p"},"hashCode()")," \u4e00\u8d77\u4f7f\u7528\uff0c\u8fd9\u5728\u4f60\u5c1d\u8bd5\u4e3a\u4e86\u67d0\u4e2a\u7279\u6b8a\u7c7b\u578b\u907f\u514d\u5b9a\u4e49\u5b83\u7684\u65f6\u5019\u4f1a\u8ba9\u95ee\u9898\u590d\u6742\u5316\u3002\u5e76\u4e14\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48\u9075\u5faa\u89c4\u8303\u662f\u6709\u4ef7\u503c\u7684\u3002\u7136\u800c\u8fd9\u4f1a\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u56e0\u4e3a\u4f60\u4e0d\u603b\u662f\u9700\u8981\u5b9a\u4e49\u5176\u4e2d\u4e00\u4e2a\u51fd\u6570\u3002"),(0,r.kt)("h2",{id:"\u54c8\u5e0c\u548c\u54c8\u5e0c\u7801"},"\u54c8\u5e0c\u548c\u54c8\u5e0c\u7801"),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("a",{parentName:"p",href:"./Collections"},"\u96c6\u5408")," \u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528\u9884\u5148\u5b9a\u4e49\u7684\u7c7b\u4f5c\u4e3a HashMap \u7684\u952e\u3002\u8fd9\u4e9b\u793a\u4f8b\u4e4b\u6240\u4ee5\u6709\u7528\uff0c\u662f\u56e0\u4e3a\u9884\u5b9a\u4e49\u7684\u7c7b\u5177\u6709\u6240\u6709\u5fc5\u9700\u7684\u8fde\u7ebf\uff0c\u4ee5\u4f7f\u5b83\u4eec\u6b63\u786e\u5730\u5145\u5f53\u952e\u3002"),(0,r.kt)("p",null,"\u5f53\u521b\u5efa\u81ea\u5df1\u7684\u7c7b\u4f5c\u4e3aHashMap\u7684\u952e\u65f6\uff0c\u4f1a\u53d1\u751f\u4e00\u4e2a\u5e38\u89c1\u7684\u9677\u9631\uff0c\u4ece\u800c\u5fd8\u8bb0\u8fdb\u884c\u5fc5\u8981\u7684\u63a5\u7ebf\u3002\u4f8b\u5982\uff0c\u8003\u8651\u4e00\u4e2a\u5c06Earthhog \u5bf9\u8c61\u4e0e Prediction \u5bf9\u8c61\u5339\u914d\u7684\u5929\u6c14\u9884\u62a5\u7cfb\u7edf\u3002\u8fd9\u4f3c\u4e4e\u5f88\u7b80\u5355\uff1a\u4f7f\u7528Groundhog\u4f5c\u4e3a\u952e\uff0c\u4f7f\u7528Prediction\u4f5c\u4e3a\u503c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/Groundhog.java\n// Looks plausible, but doesn\'t work as a HashMap key\npublic class Groundhog {\n    protected int number;\n    public Groundhog(int n) { number = n; }\n    @Override\n    public String toString() {\n        return "Groundhog #" + number;\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/Prediction.java\n// Predicting the weather\nimport java.util.*;\npublic class Prediction {\n    private static Random rand = new Random(47);\n    @Override\n    public String toString() {\n        return rand.nextBoolean() ?\n                "Six more weeks of Winter!" : "Early Spring!";\n    }\n}\n')),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/SpringDetector.java\n// What will the weather be?\nimport java.util.*;\nimport java.util.stream.*;\nimport java.util.function.*;\nimport java.lang.reflect.*;\npublic class SpringDetector {\n    public static <T extends Groundhog>\n    void detectSpring(Class<T> type) {\n        try {\n            Constructor<T> ghog =\n                    type.getConstructor(int.class);\n            Map<Groundhog, Prediction> map =\n                    IntStream.range(0, 10)\n                            .mapToObj(i -> {\n                                try {\n                                    return ghog.newInstance(i);\n                                } catch(Exception e) {\n                                    throw new RuntimeException(e);\n                                }\n                            })\n                            .collect(Collectors.toMap(\n                                    Function.identity(),\n                                    gh -> new Prediction()));\n            map.forEach((k, v) ->\n                    System.out.println(k + ": " + v));\n            Groundhog gh = ghog.newInstance(3);\n            System.out.println(\n                    "Looking up prediction for " + gh);\n            if(map.containsKey(gh))\n                System.out.println(map.get(gh));\n            else\n                System.out.println("Key not found: " + gh);\n        } catch(NoSuchMethodException |\n                IllegalAccessException |\n                InvocationTargetException |\n                InstantiationException e) {\n            throw new RuntimeException(e);\n        }\n    }\n    public static void main(String[] args) {\n        detectSpring(Groundhog.class);\n    }\n}\n/* Output:\nGroundhog #3: Six more weeks of Winter!\nGroundhog #0: Early Spring!\nGroundhog #8: Six more weeks of Winter!\nGroundhog #6: Early Spring!\nGroundhog #4: Early Spring!\nGroundhog #2: Six more weeks of Winter!\nGroundhog #1: Early Spring!\nGroundhog #9: Early Spring!\nGroundhog #5: Six more weeks of Winter!\nGroundhog #7: Six more weeks of Winter!\nLooking up prediction for Groundhog #3\nKey not found: Groundhog #3\n*/\n')),(0,r.kt)("p",null,"\u6bcf\u4e2a Groundhog \u90fd\u88ab\u8d4b\u4e88\u4e86\u4e00\u4e2a\u5e38\u6570\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u7684\u65b9\u5f0f\u5728 HashMap \u4e2d\u5bfb\u627e\u5bf9\u5e94\u7684 Prediction\u3002\u201c\u7ed9\u6211\u4e00\u4e2a\u548c Groundhog#3 \u76f8\u5173\u8054\u7684 Prediction\u201d\u3002\u800c Prediction \u901a\u8fc7\u4e00\u4e2a\u968f\u673a\u751f\u6210\u7684 boolean \u6765\u9009\u62e9\u5929\u6c14\u3002",(0,r.kt)("inlineCode",{parentName:"p"},"detectSpring()")," \u65b9\u6cd5\u901a\u8fc7\u53cd\u5c04\u6765\u5b9e\u4f8b\u5316 Groundhog \u7c7b\uff0c\u6216\u8005\u5b83\u7684\u5b50\u7c7b\u3002\u7a0d\u540e\uff0c\u5f53\u6211\u4eec\u7ee7\u627f\u4e00\u79cd\u65b0\u578b\u7684\u201cGroundhog \u201d\u4ee5\u89e3\u51b3\u6b64\u5904\u6f14\u793a\u7684\u95ee\u9898\u65f6\uff0c\u8fd9\u5c06\u6d3e\u4e0a\u7528\u573a\u3002"),(0,r.kt)("p",null,"\u8fd9\u91cc\u7684 HashMap \u88ab Groundhog  \u548c\u5176\u76f8\u5173\u8054\u7684 Prediction \u5145\u6ee1\u3002\u5e76\u4e14\u4e0a\u9762\u5c55\u793a\u4e86 HashMap \u91cc\u9762\u586b\u5145\u7684\u5185\u5bb9\u3002\u63a5\u4e0b\u6765\u6211\u4eec\u4f7f\u7528\u586b\u5145\u4e86\u5e38\u6570 3 \u7684 Groundhog \u4f5c\u4e3a key \u7528\u4e8e\u5bfb\u627e\u5bf9\u5e94\u7684 Prediction \u3002\uff08\u8fd9\u4e2a\u952e\u503c\u5bf9\u80af\u5b9a\u5728 Map \u4e2d\uff09\u3002"),(0,r.kt)("p",null,"\u8fd9\u770b\u8d77\u6765\u5341\u5206\u7b80\u5355\uff0c\u4f46\u662f\u8fd9\u6837\u505a\u5e76\u6ca1\u6709\u594f\u6548 \u2014\u2014 \u5b83\u65e0\u6cd5\u627e\u5230\u6570\u5b573\u8fd9\u4e2a\u952e\u3002\u95ee\u9898\u51fa\u5728Groundhog\u81ea\u52a8\u5730\u7ee7\u627f\u81ea\u57fa\u7c7bObject\uff0c\u6240\u4ee5\u8fd9\u91cc\u4f7f\u7528Object\u7684hashCode0\u65b9\u6cd5\u751f\u6210\u6563\u5217\u7801\uff0c\u800c\u5b83\u9ed8\u8ba4\u662f\u4f7f\u7528\u5bf9\u8c61\u7684\u5730\u5740\u8ba1\u7b97\u6563\u5217\u7801\u3002\u56e0\u6b64\uff0c\u7531Groundhog(3)\u751f\u6210\u7684\u7b2c\u4e00\u4e2a\u5b9e\u4f8b\u7684\u6563\u5217\u7801\u4e0e\u7531Groundhog(3)\u751f\u6210\u7684\u7b2c\u4e8c\u4e2a\u5b9e\u4f8b\u7684\u6563\u5217\u7801\u662f\u4e0d\u540c\u7684\uff0c\u800c\u6211\u4eec\u6b63\u662f\u4f7f\u7528\u540e\u8005\u8fdb\u884c\u67e5\u627e\u7684\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u9700\u8981\u6070\u5f53\u7684\u91cd\u5199hashCode()\u65b9\u6cd5\u3002\u4f46\u662f\u5b83\u4ecd\u7136\u65e0\u6cd5\u6b63\u5e38\u8fd0\u884c\uff0c\u9664\u975e\u4f60\u540c\u65f6\u91cd\u5199 equals()\u65b9\u6cd5\uff0c\u5b83\u4e5f\u662fObject\u7684\u4e00\u90e8\u5206\u3002HashMap\u4f7f\u7528equals()\u5224\u65ad\u5f53\u524d\u7684\u952e\u662f\u5426\u4e0e\u8868\u4e2d\u5b58\u5728\u7684\u952e\u76f8\u540c\u3002"),(0,r.kt)("p",null,"\u8fd9\u662f\u56e0\u4e3a\u9ed8\u8ba4\u7684Object.equals()\u53ea\u662f\u6bd4\u8f83\u5bf9\u8c61\u7684\u5730\u5740\uff0c\u6240\u4ee5\u4e00\u4e2aGroundhog(3)\u5e76\u4e0d\u7b49\u4e8e\u53e6\u4e00\u4e2aGroundhog(3)\uff0c\u56e0\u6b64\uff0c\u5982\u679c\u8981\u4f7f\u7528\u81ea\u5df1\u7684\u7c7b\u4f5c\u4e3aHashMap\u7684\u952e\uff0c\u5fc5\u987b\u540c\u65f6\u91cd\u8f7dhashCode()\u548cequals()\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// equalshashcode/Groundhog2.java\n// A class that's used as a key in a HashMap\n// must override hashCode() and equals()\nimport java.util.*;\npublic class Groundhog2 extends Groundhog {\n    public Groundhog2(int n) { super(n); }\n    @Override\n    public int hashCode() { return number; }\n    @Override\n    public boolean equals(Object o) {\n        return o instanceof Groundhog2 &&\n                Objects.equals(\n                        number, ((Groundhog2)o).number);\n    }\n}\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// equalshashcode/SpringDetector2.java\n// A working key\npublic class SpringDetector2 {\n    public static void main(String[] args) {\n        SpringDetector.detectSpring(Groundhog2.class);\n    }\n}\n/* Output:\nGroundhog #0: Six more weeks of Winter!\nGroundhog #1: Early Spring!\nGroundhog #2: Six more weeks of Winter!\nGroundhog #3: Early Spring!\nGroundhog #4: Early Spring!\nGroundhog #5: Six more weeks of Winter!\nGroundhog #6: Early Spring!\nGroundhog #7: Early Spring!\nGroundhog #8: Six more weeks of Winter!\nGroundhog #9: Six more weeks of Winter!\nLooking up prediction for Groundhog #3\nEarly Spring!\n*/\n")),(0,r.kt)("p",null,"Groundhog2.hashCode0\u8fd4\u56deGroundhog\u7684\u6807\u8bc6\u6570\u5b57\uff08\u7f16\u53f7\uff09\u4f5c\u4e3a\u6563\u5217\u7801\u3002\u5728\u6b64\u4f8b\u4e2d\uff0c\u7a0b\u5e8f\u5458\u8d1f\u8d23\u786e\u4fdd\u4e0d\u540c\u7684Groundhog\u5177\u6709\u4e0d\u540c\u7684\u7f16\u53f7\u3002hashCode()\u5e76\u4e0d\u9700\u8981\u603b\u662f\u80fd\u591f\u8fd4\u56de\u552f\u4e00\u7684\u6807\u8bc6\u7801\uff08\u7a0d\u540e\u4f60\u4f1a\u7406\u89e3\u5176\u539f\u56e0\uff09\uff0c\u4f46\u662fequals() \u65b9\u6cd5\u5fc5\u987b\u4e25\u683c\u5730\u5224\u65ad\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u540c\u3002\u6b64\u5904\u7684equals()\u662f\u5224\u65adGroundhog\u7684\u53f7\u7801\uff0c\u6240\u4ee5\u4f5c\u4e3aHashMap\u4e2d\u7684\u952e\uff0c\u5982\u679c\u4e24\u4e2aGroundhog2\u5bf9\u8c61\u5177\u6709\u76f8\u540c\u7684Groundhog\u7f16\u53f7\uff0c\u7a0b\u5e8f\u5c31\u51fa\u9519\u4e86\u3002"),(0,r.kt)("p",null,"\u5982\u4f55\u5b9a\u4e49 equals() \u65b9\u6cd5\u5728\u4e0a\u4e00\u8282 ",(0,r.kt)("a",{parentName:"p",href:"#equals%E8%A7%84%E8%8C%83"},"equals \u89c4\u8303"),"\u4e2d\u63d0\u5230\u4e86\u3002\u8f93\u51fa\u8868\u660e\u6211\u4eec\u73b0\u5728\u7684\u8f93\u51fa\u662f\u6b63\u786e\u7684\u3002"),(0,r.kt)("h3",{id:"\u7406\u89e3-hashcode"},"\u7406\u89e3 hashCode"),(0,r.kt)("p",null,"\u524d\u9762\u7684\u4f8b\u5b50\u53ea\u662f\u6b63\u786e\u89e3\u51b3\u95ee\u9898\u7684\u7b2c\u4e00\u6b65\u3002\u5b83\u53ea\u8bf4\u660e\uff0c\u5982\u679c\u4e0d\u4e3a\u4f60\u7684\u952e\u8986\u76d6hashCode() \u548cequals() \uff0c\u90a3\u4e48\u4f7f\u7528\u6563\u5217\u7684\u6570\u636e\u7ed3\u6784\uff08HashSet\uff0cHashMap\uff0cLinkedHashst\u6216LinkedHashMap\uff09\u5c31\u65e0\u6cd5\u6b63\u786e\u5904\u7406\u4f60\u7684\u952e\u3002\u7136\u800c\uff0c\u8981\u5f88\u597d\u5730\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u4f60\u5fc5\u987b\u4e86\u89e3\u8fd9\u4e9b\u6570\u636e\u7ed3\u6784\u7684\u5185\u90e8\u6784\u9020\u3002"),(0,r.kt)("p",null,"\u9996\u5148\uff0c\u4f7f\u7528\u6563\u5217\u7684\u76ee\u7684\u5728\u4e8e\uff1a\u60f3\u8981\u4f7f\u7528\u4e00\u4e2a\u5bf9\u8c61\u6765\u67e5\u627e\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u4e0d\u8fc7\u4f7f\u7528TreeMap\u6216\u8005\u4f60\u81ea\u5df1\u5b9e\u73b0\u7684Map\u4e5f\u53ef\u4ee5\u8fbe\u5230\u6b64\u76ee\u7684\u3002\u4e0e\u6563\u5217\u5b9e\u73b0\u76f8\u53cd\uff0c\u4e0b\u9762\u7684\u793a\u4f8b\u7528\u4e00\u5bf9ArrayLists\u5b9e\u73b0\u4e86\u4e00\u4e2aMap\uff0c\u4e0eAssociativeArray.java\u4e0d\u540c\uff0c\u8fd9\u5176\u4e2d\u5305\u542b\u4e86Map\u63a5\u53e3\u7684\u5b8c\u6574\u5b9e\u73b0\uff0c\u56e0\u6b64\u63d0\u4f9b\u4e86entrySet()\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/SlowMap.java\n// A Map implemented with ArrayLists\nimport java.util.*;\nimport onjava.*;\npublic class SlowMap<K, V> extends AbstractMap<K, V> {\n    private List<K> keys = new ArrayList<>();\n    private List<V> values = new ArrayList<>();\n    @Override\n    public V put(K key, V value) {\n        V oldValue = get(key); // The old value or null\n        if(!keys.contains(key)) {\n            keys.add(key);\n            values.add(value);\n        } else\n            values.set(keys.indexOf(key), value);\n        return oldValue;\n    }\n    @Override\n    public V get(Object key) { // key: type Object, not K\n        if(!keys.contains(key))\n            return null;\n        return values.get(keys.indexOf(key));\n    }\n    @Override\n    public Set<Map.Entry<K, V>> entrySet() {\n        Set<Map.Entry<K, V>> set= new HashSet<>();\n        Iterator<K> ki = keys.iterator();\n        Iterator<V> vi = values.iterator();\n        while(ki.hasNext())\n            set.add(new MapEntry<>(ki.next(), vi.next()));\n        return set;\n    }\n    public static void main(String[] args) {\n        SlowMap<String,String> m= new SlowMap<>();\n        m.putAll(Countries.capitals(8));\n        m.forEach((k, v) ->\n                System.out.println(k + "=" + v));\n        System.out.println(m.get("BENIN"));\n        m.entrySet().forEach(System.out::println);\n    }\n}\n/* Output:\nCAMEROON=Yaounde\nANGOLA=Luanda\nBURKINA FASO=Ouagadougou\nBURUNDI=Bujumbura\nALGERIA=Algiers\nBENIN=Porto-Novo\nCAPE VERDE=Praia\nBOTSWANA=Gaberone\nPorto-Novo\nCAMEROON=Yaounde\nANGOLA=Luanda\nBURKINA FASO=Ouagadougou\nBURUNDI=Bujumbura\nALGERIA=Algiers\nBENIN=Porto-Novo\nCAPE VERDE=Praia\nBOTSWANA=Gaberone\n*/\n')),(0,r.kt)("p",null,"put()\u65b9\u6cd5\u53ea\u662f\u5c06\u952e\u4e0e\u503c\u653e\u5165\u76f8\u5e94\u7684ArrayList\u3002\u4e3a\u4e86\u4e0eMap\u63a5\u53e3\u4fdd\u6301\u4e00\u81f4\uff0c\u5b83\u5fc5\u987b\u8fd4\u56de\u65e7\u7684\u952e\uff0c\u6216\u8005\u5728\u6ca1\u6709\u4efb\u4f55\u65e7\u952e\u7684\u60c5\u51b5\u4e0b\u8fd4\u56denull\u3002"),(0,r.kt)("p",null,"\u540c\u6837\u9075\u5faa\u4e86Map\u89c4\u8303\uff0cget()\u4f1a\u5728\u952e\u4e0d\u5728SlowMap\u4e2d\u7684\u65f6\u5019\u4ea7\u751fnull\u3002\u5982\u679c\u952e\u5b58\u5728\uff0c\u5b83\u5c06\u88ab\u7528\u6765\u67e5\u627e\u8868\u793a\u5b83\u5728keys\u5217\u8868\u4e2d\u7684\u4f4d\u7f6e\u7684\u6570\u503c\u578b\u7d22\u5f15\uff0c\u5e76\u4e14\u8fd9\u4e2a\u6570\u5b57\u88ab\u7528\u4f5c\u7d22\u5f15\u6765\u4ea7\u751f\u4e0evalues\u5217\u8868\u76f8\u5173\u8054\u7684\u503c\u3002\u6ce8\u610f\uff0c\u5728get()\u4e2dkey\u7684\u7c7b\u578b\u662fObject\uff0c\u800c\u4e0d\u662f\u4f60\u6240\u671f\u671b\u7684\u53c2\u6570\u5316\u7c7b\u578bK\uff08\u5e76\u4e14\u662f\u5728AssociativeArrayjava\u4e2d\u771f\u6b63\u4f7f\u7528\u7684\u7c7b\u578b\uff09\uff0c\u8fd9\u662f\u5c06\u6cdb\u578b\u6ce8\u5165\u5230Java\u8bed\u8a00\u4e2d\u7684\u65f6\u523b\u5982\u6b64\u4e4b\u665a\u6240\u5bfc\u81f4\u7684\u7ed3\u679c-\u5982\u679c\u6cdb\u578b\u662fJava\u8bed\u8a00\u6700\u521d\u5c31\u5177\u5907\u7684\u5c5e\u6027\uff0c\u90a3\u4e48get()\u5c31\u53ef\u4ee5\u6267\u884c\u5176\u53c2\u6570\u7684\u7c7b\u578b\u3002"),(0,r.kt)("p",null,"Map.entrySet() \u65b9\u6cd5\u5fc5\u987b\u4ea7\u751f\u4e00\u4e2aMap.Entry\u5bf9\u8c61\u96c6\u3002\u4f46\u662f\uff0cMap.Entry\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u7528\u6765\u63cf\u8ff0\u4f9d\u8d56\u4e8e\u5b9e\u73b0\u7684\u7ed3\u6784\uff0c\u56e0\u6b64\u5982\u679c\u4f60\u60f3\u8981\u521b\u5efa\u81ea\u5df1\u7684Map\u7c7b\u578b\uff0c\u5c31\u5fc5\u987b\u540c\u65f6\u5b9a\u4e49Map.Entry\u7684\u5b9e\u73b0\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/MapEntry.java\n// A simple Map.Entry for sample Map implementations\nimport java.util.*;\npublic class MapEntry<K, V> implements Map.Entry<K, V> {\n    private K key;\n    private V value;\n    public MapEntry(K key, V value) {\n        this.key = key;\n        this.value = value;\n    }\n    @Override\n    public K getKey() { return key; }\n    @Override\n    public V getValue() { return value; }\n    @Override\n    public V setValue(V v) {\n        V result = value;\n        value = v;\n        return result;\n    }\n    @Override\n    public int hashCode() {\n        return Objects.hash(key, value);\n    }\n    @SuppressWarnings("unchecked")\n    @Override\n    public boolean equals(Object rval) {\n        return rval instanceof MapEntry &&\n                Objects.equals(key,\n                        ((MapEntry<K, V>)rval).getKey()) &&\n                Objects.equals(value,\n                        ((MapEntry<K, V>)rval).getValue());\n    }\n    @Override\n    public String toString() {\n        return key + "=" + value;\n    }\n}\n')),(0,r.kt)("p",null,"\u8fd9\u91cc equals \u65b9\u6cd5\u7684\u5b9e\u73b0\u9075\u5faa\u4e86",(0,r.kt)("a",{parentName:"p",href:"#equals%E8%A7%84%E8%8C%83"},"equals \u89c4\u8303"),"\u3002\u5728 Objects \u7c7b\u4e2d\u6709\u4e00\u4e2a\u975e\u5e38\u719f\u6089\u7684\u65b9\u6cd5\u53ef\u4ee5\u5e2e\u52a9\u521b\u5efa hashCode() \u65b9\u6cd5\uff1a Objects.hash()\u3002\u5f53\u4f60\u5b9a\u4e49\u542b\u6709\u8d85\u8fc7\u4e00\u4e2a\u5c5e\u6027\u7684\u5bf9\u8c61\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u65f6\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u8fd9\u4e2a\u65b9\u6cd5\u3002\u5982\u679c\u4f60\u7684\u5bf9\u8c61\u53ea\u6709\u4e00\u4e2a\u5c5e\u6027\uff0c\u53ef\u4ee5\u76f4\u63a5\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"}," Objects.hashCode()"),"\u3002"),(0,r.kt)("p",null,"\u5c3d\u7ba1\u8fd9\u4e2a\u89e3\u51b3\u65b9\u6848\u975e\u5e38\u7b80\u5355\uff0c\u5e76\u4e14\u770b\u8d77\u6765\u5728SlowMap.main() \u7684\u7410\u788e\u6d4b\u8bd5\u4e2d\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u4f46\u662f\u8fd9\u5e76\u4e0d\u662f\u4e00\u4e2a\u6070\u5f53\u7684\u5b9e\u73b0\uff0c\u56e0\u4e3a\u5b83\u521b\u5efa\u4e86\u952e\u548c\u503c\u7684\u526f\u672c\u3002entrySet()  \u7684\u6070\u5f53\u5b9e\u73b0\u5e94\u8be5\u5728Map\u4e2d\u63d0\u4f9b\u89c6\u56fe\uff0c\u800c\u4e0d\u662f\u526f\u672c\uff0c\u5e76\u4e14\u8fd9\u4e2a\u89c6\u56fe\u5141\u8bb8\u5bf9\u539f\u59cb\u6620\u5c04\u8868\u8fdb\u884c\u4fee\u6539\uff08\u526f\u672c\u5c31\u4e0d\u884c\uff09\u3002"),(0,r.kt)("h3",{id:"\u4e3a\u4e86\u901f\u5ea6\u800c\u6563\u5217"},"\u4e3a\u4e86\u901f\u5ea6\u800c\u6563\u5217"),(0,r.kt)("p",null,"SlowMap.java \u8bf4\u660e\u4e86\u521b\u5efa\u4e00\u79cd\u65b0\u7684Map\u5e76\u4e0d\u56f0\u96be\u3002\u4f46\u662f\u6b63\u5982\u5b83\u7684\u540d\u79f0SlowMap\u6240\u793a\uff0c\u5b83\u4e0d\u4f1a\u5f88\u5feb\uff0c\u6240\u4ee5\u5982\u679c\u6709\u66f4\u597d\u7684\u9009\u62e9\uff0c\u5c31\u5e94\u8be5\u653e\u5f03\u5b83\u3002\u5b83\u7684\u95ee\u9898\u5728\u4e8e\u5bf9\u952e\u7684\u67e5\u8be2\uff0c\u952e\u6ca1\u6709\u6309\u7167\u4efb\u4f55\u7279\u5b9a\u987a\u5e8f\u4fdd\u5b58\uff0c\u6240\u4ee5\u53ea\u80fd\u4f7f\u7528\u7b80\u5355\u7684\u7ebf\u6027\u67e5\u8be2\uff0c\u800c\u7ebf\u6027\u67e5\u8be2\u662f\u6700\u6162\u7684\u67e5\u8be2\u65b9\u5f0f\u3002"),(0,r.kt)("p",null,"\u6563\u5217\u7684\u4ef7\u503c\u5728\u4e8e\u901f\u5ea6\uff1a\u6563\u5217\u4f7f\u5f97\u67e5\u8be2\u5f97\u4ee5\u5feb\u901f\u8fdb\u884c\u3002\u7531\u4e8e\u74f6\u9888\u4f4d\u4e8e\u952e\u7684\u67e5\u8be2\u901f\u5ea6\uff0c\u56e0\u6b64\u89e3\u51b3\u65b9\u6848\u4e4b\u4e00\u5c31\u662f\u4fdd\u6301\u952e\u7684\u6392\u5e8f\u72b6\u6001\uff0c\u7136\u540e\u4f7f\u7528Collections.binarySearch()\u8fdb\u884c\u67e5\u8be2\u3002"),(0,r.kt)("p",null,"\u6563\u5217\u5219\u66f4\u8fdb\u4e00\u6b65\uff0c\u5b83\u5c06\u952e\u4fdd\u5b58\u5728\u67d0\u5904\uff0c\u4ee5\u4fbf\u80fd\u591f\u5f88\u5feb\u627e\u5230\u3002\u5b58\u50a8\u4e00\u7ec4\u5143\u7d20\u6700\u5feb\u7684\u6570\u636e\u7ed3\u6784\u662f\u6570\u7ec4\uff0c\u6240\u4ee5\u4f7f\u7528\u5b83\u6765\u8868\u793a\u952e\u7684\u4fe1\u606f\uff08\u8bf7\u5c0f\u5fc3\u7559\u610f\uff0c\u6211\u662f\u8bf4\u952e\u7684\u4fe1\u606f\uff0c\u800c\u4e0d\u662f\u952e\u672c\u8eab\uff09\u3002\u4f46\u662f\u56e0\u4e3a\u6570\u7ec4\u4e0d\u80fd\u8c03\u6574\u5bb9\u91cf\uff0c\u56e0\u6b64\u5c31\u6709\u4e00\u4e2a\u95ee\u9898\uff1a\u6211\u4eec\u5e0c\u671b\u5728Map\u4e2d\u4fdd\u5b58\u6570\u91cf\u4e0d\u786e\u5b9a\u7684\u503c\uff0c\u4f46\u662f\u5982\u679c\u952e\u7684\u6570\u91cf\u88ab\u6570\u7ec4\u7684\u5bb9\u91cf\u9650\u5236\u4e86\uff0c\u8be5\u600e\u4e48\u529e\u5462\uff1f"),(0,r.kt)("p",null,"\u7b54\u6848\u5c31\u662f\uff1a\u6570\u7ec4\u5e76\u4e0d\u4fdd\u5b58\u952e\u672c\u8eab\u3002\u800c\u662f\u901a\u8fc7\u952e\u5bf9\u8c61\u751f\u6210\u4e00\u4e2a\u6570\u5b57\uff0c\u5c06\u5176\u4f5c\u4e3a\u6570\u7ec4\u7684\u4e0b\u6807\u3002\u8fd9\u4e2a\u6570\u5b57\u5c31\u662f\u6563\u5217\u7801\uff0c\u7531\u5b9a\u4e49\u5728Object\u4e2d\u7684\u3001\u4e14\u53ef\u80fd\u7531\u4f60\u7684\u7c7b\u8986\u76d6\u7684hashCode()\u65b9\u6cd5\uff08\u5728\u8ba1\u7b97\u673a\u79d1\u5b66\u7684\u672f\u8bed\u4e2d\u79f0\u4e3a\u6563\u5217\u51fd\u6570\uff09\u751f\u6210\u3002"),(0,r.kt)("p",null,"\u4e8e\u662f\u67e5\u8be2\u4e00\u4e2a\u503c\u7684\u8fc7\u7a0b\u9996\u5148\u5c31\u662f\u8ba1\u7b97\u6563\u5217\u7801\uff0c\u7136\u540e\u4f7f\u7528\u6563\u5217\u7801\u67e5\u8be2\u6570\u7ec4\u3002\u5982\u679c\u80fd\u591f\u4fdd\u8bc1\u6ca1\u6709\u51b2\u7a81\uff08\u5982\u679c\u503c\u7684\u6570\u91cf\u662f\u56fa\u5b9a\u7684\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\uff09\uff0c\u90a3\u53ef\u5c31\u6709\u4e86\u4e00\u4e2a\u5b8c\u7f8e\u7684\u6563\u5217\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u79cd\u60c5\u51b5\u53ea\u662f\u7279\u4f8b\u3002",(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1")),"\u3002\u901a\u5e38\uff0c\u51b2\u7a81\u7531\u5916\u90e8\u94fe\u63a5\u5904\u7406\uff1a\u6570\u7ec4\u5e76\u4e0d\u76f4\u63a5\u4fdd\u5b58\u503c\uff0c\u800c\u662f\u4fdd\u5b58\u503c\u7684 list\u3002\u7136\u540e\u5bf9 list\u4e2d\u7684\u503c\u4f7f\u7528equals()\u65b9\u6cd5\u8fdb\u884c\u7ebf\u6027\u7684\u67e5\u8be2\u3002\u8fd9\u90e8\u5206\u7684\u67e5\u8be2\u81ea\u7136\u4f1a\u6bd4\u8f83\u6162\uff0c\u4f46\u662f\uff0c\u5982\u679c\u6563\u5217\u51fd\u6570\u597d\u7684\u8bdd\uff0c\u6570\u7ec4\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u5c31\u53ea\u6709\u8f83\u5c11\u7684\u503c\u3002\u56e0\u6b64\uff0c\u4e0d\u662f\u67e5\u8be2\u6574\u4e2alist\uff0c\u800c\u662f\u5feb\u901f\u5730\u8df3\u5230\u6570\u7ec4\u7684\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u53ea\u5bf9\u5f88\u5c11\u7684\u5143\u7d20\u8fdb\u884c\u6bd4\u8f83\u3002\u8fd9\u4fbf\u662fHashMap\u4f1a\u5982\u6b64\u5feb\u7684\u539f\u56e0\u3002"),(0,r.kt)("p",null,"\u7406\u89e3\u4e86\u6563\u5217\u7684\u539f\u7406\uff0c\u6211\u4eec\u5c31\u80fd\u591f\u5b9e\u73b0\u4e00\u4e2a\u7b80\u5355\u7684\u6563\u5217Map\u4e86\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/SimpleHashMap.java\n// A demonstration hashed Map\nimport java.util.*;\nimport onjava.*;\npublic\nclass SimpleHashMap<K, V> extends AbstractMap<K, V> {\n    // Choose a prime number for the hash table\n// size, to achieve a uniform distribution:\n    static final int SIZE = 997;\n    // You can\'t have a physical array of generics,\n// but you can upcast to one:\n    @SuppressWarnings("unchecked")\n    LinkedList<MapEntry<K, V>>[] buckets =\n            new LinkedList[SIZE];\n    @Override\n    public V put(K key, V value) {\n        V oldValue = null;\n        int index = Math.abs(key.hashCode()) % SIZE;\n        if(buckets[index] == null)\n            buckets[index] = new LinkedList<>();\n        LinkedList<MapEntry<K, V>> bucket = buckets[index];\n        MapEntry<K, V> pair = new MapEntry<>(key, value);\n        boolean found = false;\n        ListIterator<MapEntry<K, V>> it =\n                bucket.listIterator();\n        while(it.hasNext()) {\n            MapEntry<K, V> iPair = it.next();\n            if(iPair.getKey().equals(key)) {\n                oldValue = iPair.getValue();\n                it.set(pair); // Replace old with new\n                found = true;\n                break;\n            }\n        }\n        if(!found)\n            buckets[index].add(pair);\n        return oldValue;\n    }\n    @Override\n    public V get(Object key) {\n        int index = Math.abs(key.hashCode()) % SIZE;\n        if(buckets[index] == null) return null;\n        for(MapEntry<K, V> iPair : buckets[index])\n            if(iPair.getKey().equals(key))\n                return iPair.getValue();\n        return null;\n    }\n    @Override\n    public Set<Map.Entry<K, V>> entrySet() {\n        Set<Map.Entry<K, V>> set= new HashSet<>();\n        for(LinkedList<MapEntry<K, V>> bucket : buckets) {\n            if(bucket == null) continue;\n            for(MapEntry<K, V> mpair : bucket)\n                set.add(mpair);\n        }\n        return set;\n    }\n    public static void main(String[] args) {\n        SimpleHashMap<String,String> m =\n                new SimpleHashMap<>();\n        m.putAll(Countries.capitals(8));\n        m.forEach((k, v) ->\n                System.out.println(k + "=" + v));\n        System.out.println(m.get("BENIN"));\n        m.entrySet().forEach(System.out::println);\n    }\n}\n/* Output:\nCAMEROON=Yaounde\nANGOLA=Luanda\nBURKINA FASO=Ouagadougou\nBURUNDI=Bujumbura\nALGERIA=Algiers\nBENIN=Porto-Novo\nCAPE VERDE=Praia\nBOTSWANA=Gaberone\nPorto-Novo\nCAMEROON=Yaounde\nANGOLA=Luanda\nBURKINA FASO=Ouagadougou\nBURUNDI=Bujumbura\nALGERIA=Algiers\nBENIN=Porto-Novo\nCAPE VERDE=Praia\nBOTSWANA=Gaberone\n*/\n')),(0,r.kt)("p",null,"\u7531\u4e8e\u6563\u5217\u8868\u4e2d\u7684\u201c\u69fd\u4f4d\u201d\uff08slot\uff09\u901a\u5e38\u79f0\u4e3a\u6876\u4f4d\uff08bucket\uff09\uff0c\u56e0\u6b64\u6211\u4eec\u5c06\u8868\u793a\u5b9e\u9645\u6563\u5217\u8868\u7684\u6570\u7ec4\u547d\u540d\u4e3abucket\uff0c\u4e3a\u4f7f\u6563\u5217\u5206\u5e03\u5747\u5300\uff0c\u6876\u7684\u6570\u91cf\u901a\u5e38\u4f7f\u7528\u8d28\u6570",(0,r.kt)("sup",{parentName:"p",id:"fnref-2"},(0,r.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2")),"\u3002\u6ce8\u610f\uff0c\u4e3a\u4e86\u80fd\u591f\u81ea\u52a8\u5904\u7406\u51b2\u7a81\uff0c\u4f7f\u7528\u4e86\u4e00\u4e2aLinkedList\u7684\u6570\u7ec4\uff1b\u6bcf\u4e00\u4e2a\u65b0\u7684\u5143\u7d20\u53ea\u662f\u76f4\u63a5\u6dfb\u52a0\u5230list\u5c3e\u7684\u67d0\u4e2a\u7279\u5b9a\u6876\u4f4d\u4e2d\u3002\u5373\u4f7fJava\u4e0d\u5141\u8bb8\u4f60\u521b\u5efa\u6cdb\u578b\u6570\u7ec4\uff0c\u90a3\u4f60\u4e5f\u53ef\u4ee5\u521b\u5efa\u6307\u5411\u8fd9\u79cd\u6570\u7ec4\u7684\u5f15\u7528\u3002\u8fd9\u91cc\uff0c\u5411\u4e0a\u8f6c\u578b\u4e3a\u8fd9\u79cd\u6570\u7ec4\u662f\u5f88\u65b9\u4fbf\u7684\uff0c\u8fd9\u6837\u53ef\u4ee5\u9632\u6b62\u5728\u540e\u9762\u7684\u4ee3\u7801\u4e2d\u8fdb\u884c\u989d\u5916\u7684\u8f6c\u578b\u3002"),(0,r.kt)("p",null,"\u5bf9\u4e8eput()  \u65b9\u6cd5\uff0chashCode() \u5c06\u9488\u5bf9\u952e\u800c\u88ab\u8c03\u7528\uff0c\u5e76\u4e14\u5176\u7ed3\u679c\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u6b63\u6570\u3002\u4e3a\u4e86\u4f7f\u4ea7\u751f\u7684\u6570\u5b57\u9002\u5408bucket\u6570\u7ec4\u7684\u5927\u5c0f\uff0c\u53d6\u6a21\u64cd\u4f5c\u7b26\u5c06\u6309\u7167\u8be5\u6570\u7ec4\u7684\u5c3a\u5bf8\u53d6\u6a21\u3002\u5982\u679c\u6570\u7ec4\u7684\u67d0\u4e2a\u4f4d\u7f6e\u662f null\uff0c\u8fd9\u8868\u793a\u8fd8\u6ca1\u6709\u5143\u7d20\u88ab\u6563\u5217\u81f3\u6b64\uff0c\u6240\u4ee5\uff0c\u4e3a\u4e86\u4fdd\u5b58\u521a\u6563\u5217\u5230\u8be5\u5b9a\u4f4d\u7684\u5bf9\u8c61\uff0c\u9700\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684LinkedList\u3002\u4e00\u822c\u7684\u8fc7\u7a0b\u662f\uff0c\u67e5\u770b\u5f53\u524d\u4f4d\u7f6e\u7684ist\u4e2d\u662f\u5426\u6709\u76f8\u540c\u7684\u5143\u7d20\uff0c\u5982\u679c\u6709\uff0c\u5219\u5c06\u65e7\u7684\u503c\u8d4b\u7ed9oldValue\uff0c\u7136\u540e\u7528\u65b0\u7684\u503c\u53d6\u4ee3\u65e7\u7684\u503c\u3002\u6807\u8bb0found\u7528\u6765\u8ddf\u8e2a\u662f\u5426\u627e\u5230\uff08\u76f8\u540c\u7684\uff09\u65e7\u7684\u952e\u503c\u5bf9\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u5c06\u65b0\u7684\u5bf9\u6dfb\u52a0\u5230list\u7684\u672b\u5c3e\u3002"),(0,r.kt)("p",null,"get()\u65b9\u6cd5\u6309\u7167\u4e0eput()\u65b9\u6cd5\u76f8\u540c\u7684\u65b9\u5f0f\u8ba1\u7b97\u5728buckets\u6570\u7ec4\u4e2d\u7684\u7d22\u5f15\uff08\u8fd9\u5f88\u91cd\u8981\uff0c\u56e0\u4e3a\u8fd9\u6837\u53ef\u4ee5\u4fdd\u8bc1\u4e24\u4e2a\u65b9\u6cd5\u53ef\u4ee5\u8ba1\u7b97\u51fa\u76f8\u540c\u7684\u4f4d\u7f6e\uff09\u5982\u679c\u6b64\u4f4d\u7f6e\u6709LinkedList\u5b58\u5728\uff0c\u5c31\u5bf9\u5176\u8fdb\u884c\u67e5\u8be2\u3002"),(0,r.kt)("p",null,"\u6ce8\u610f\uff0c\u8fd9\u4e2a\u5b9e\u73b0\u5e76\u4e0d\u610f\u5473\u7740\u5bf9\u6027\u80fd\u8fdb\u884c\u4e86\u8c03\u4f18\uff0c\u5b83\u53ea\u662f\u60f3\u8981\u5c55\u793a\u6563\u5217\u6620\u5c04\u8868\u6267\u884c\u7684\u5404\u79cd\u64cd\u4f5c\u3002\u5982\u679c\u4f60\u6d4f\u89c8\u4e00\u4e0bjava.util.HashMap\u7684\u6e90\u4ee3\u7801\uff0c\u4f60\u5c31\u4f1a\u770b\u5230\u4e00\u4e2a\u8c03\u8fc7\u4f18\u7684\u5b9e\u73b0\u3002\u540c\u6837\uff0c\u4e3a\u4e86\u7b80\u5355\uff0cSimpleHashMap\u4f7f\u7528\u4e86\u4e0eSlowMap\u76f8\u540c\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0entrySet()\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u6709\u4e9b\u8fc7\u4e8e\u7b80\u5355\uff0c\u4e0d\u80fd\u7528\u4e8e\u901a\u7528\u7684Map\u3002"),(0,r.kt)("h3",{id:"\u91cd\u5199-hashcode"},"\u91cd\u5199 hashCode()"),(0,r.kt)("p",null,"\u5728\u660e\u767d\u4e86\u5982\u4f55\u6563\u5217\u4e4b\u540e\uff0c\u7f16\u5199\u81ea\u5df1\u7684hashCode()\u5c31\u66f4\u6709\u610f\u4e49\u4e86\u3002"),(0,r.kt)("p",null,"\u9996\u5148\uff0c\u4f60\u65e0\u6cd5\u63a7\u5236bucket\u6570\u7ec4\u7684\u4e0b\u6807\u503c\u7684\u4ea7\u751f\u3002\u8fd9\u4e2a\u503c\u4f9d\u8d56\u4e8e\u5177\u4f53\u7684HashMap\u5bf9\u8c61\u7684\u5bb9\u91cf\uff0c\u800c\u5bb9\u91cf\u7684\u6539\u53d8\u4e0e\u5bb9\u5668\u7684\u5145\u6ee1\u7a0b\u5ea6\u548c\u8d1f\u8f7d\u56e0\u5b50\uff08\u672c\u7ae0\u7a0d\u540e\u4f1a\u4ecb\u7ecd\u8fd9\u4e2a\u672f\u8bed\uff09\u6709\u5173\u3002hashCode()\u751f\u6210\u7684\u7ed3\u679c\uff0c\u7ecf\u8fc7\u5904\u7406\u540e\u6210\u4e3a\u6876\u4f4d\u7684\u4e0b\u6807\uff08\u5728SimpleHashMap\u4e2d\uff0c\u53ea\u662f\u5bf9\u5176\u53d6\u6a21\uff0c\u6a21\u6570\u4e3abucket\u6570\u7ec4\u7684\u5927\u5c0f\uff09\u3002"),(0,r.kt)("p",null,"\u8bbe\u8ba1hashCode()\u65f6\u6700\u91cd\u8981\u7684\u56e0\u7d20\u5c31\u662f\uff1a\u65e0\u8bba\u4f55\u65f6\uff0c\u5bf9\u540c\u4e00\u4e2a\u5bf9\u8c61\u8c03\u7528hashCode()\u90fd\u5e94\u8be5\u751f\u6210\u540c\u6837\u7684\u503c\u3002\u5982\u679c\u5728\u5c06\u4e00\u4e2a\u5bf9\u8c61\u7528put()\u6dfb\u52a0\u8fdbHashMap\u65f6\u4ea7\u751f\u4e00\u4e2ahashCode()\u503c\uff0c\u800c\u7528get()\u53d6\u51fa\u65f6\u5374\u4ea7\u751f\u4e86\u53e6\u4e00\u4e2ahashCode()\u503c\uff0c\u90a3\u4e48\u5c31\u65e0\u6cd5\u91cd\u65b0\u53d6\u5f97\u8be5\u5bf9\u8c61\u4e86\u3002\u6240\u4ee5\uff0c\u5982\u679c\u4f60\u7684hashCode()\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u5bf9\u8c61\u4e2d\u6613\u53d8\u7684\u6570\u636e\uff0c\u7528\u6237\u5c31\u8981\u5f53\u5fc3\u4e86\uff0c\u56e0\u4e3a\u6b64\u6570\u636e\u53d1\u751f\u53d8\u5316\u65f6\uff0chashCode()\u5c31\u4f1a\u751f\u6210\u4e00\u4e2a\u4e0d\u540c\u7684\u6563\u5217\u7801\uff0c\u76f8\u5f53\u4e8e\u4ea7\u751f\u4e86\u4e00\u4e2a\u4e0d\u540c\u7684\u952e\u3002"),(0,r.kt)("p",null,"\u6b64\u5916\uff0c\u4e5f\u4e0d\u5e94\u8be5\u4f7fhashCode()\u4f9d\u8d56\u4e8e\u5177\u6709\u552f\u4e00\u6027\u7684\u5bf9\u8c61\u4fe1\u606f\uff0c\u5c24\u5176\u662f\u4f7f\u7528this\u503c\uff0c\u8fd9\u53ea\u80fd\u4ea7\u751f\u5f88\u7cdf\u7cd5\u7684hashCode()\uff0c\u56e0\u4e3a\u8fd9\u6837\u505a\u65e0\u6cd5\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u952e\uff0c\u4f7f\u4e4b\u4e0eput()\u4e2d\u539f\u59cb\u7684\u952e\u503c\u5bf9\u4e2d\u7684\u952e\u76f8\u540c\u3002\u8fd9\u6b63\u662fSpringDetector.java\u7684\u95ee\u9898\u6240\u5728\uff0c\u56e0\u4e3a\u5b83\u9ed8\u8ba4\u7684hashCode0\u4f7f\u7528\u7684\u662f\u5bf9\u8c61\u7684\u5730\u5740\u3002\u6240\u4ee5\uff0c\u5e94\u8be5\u4f7f\u7528\u5bf9\u8c61\u5185\u6709\u610f\u4e49\u7684\u8bc6\u522b\u4fe1\u606f\u3002"),(0,r.kt)("p",null,'\u4e0b\u9762\u4ee5String\u7c7b\u4e3a\u4f8b\u3002String\u6709\u4e2a\u7279\u70b9\uff1a\u5982\u679c\u7a0b\u5e8f\u4e2d\u6709\u591a\u4e2aString\u5bf9\u8c61\uff0c\u90fd\u5305\u542b\u76f8\u540c\u7684\u5b57\u7b26\u4e32\u5e8f\u5217\uff0c\u90a3\u4e48\u8fd9\u4e9bString\u5bf9\u8c61\u90fd\u6620\u5c04\u5230\u540c\u4e00\u5757\u5185\u5b58\u533a\u57df\u3002\u6240\u4ee5new String("hello")\u751f\u6210\u7684\u4e24\u4e2a\u5b9e\u4f8b\uff0c\u867d\u7136\u662f\u76f8\u4e92\u72ec\u7acb\u7684\uff0c\u4f46\u662f\u5bf9\u5b83\u4eec\u4f7f\u7528hashCode()\u5e94\u8be5\u751f\u6210\u540c\u6837\u7684\u7ed3\u679c\u3002\u901a\u8fc7\u4e0b\u9762\u7684\u7a0b\u5e8f\u53ef\u4ee5\u770b\u5230\u8fd9\u79cd\u60c5\u51b5\uff1a'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/StringHashCode.java\npublic class StringHashCode {\n    public static void main(String[] args) {\n        String[] hellos = "Hello Hello".split(" ");\n        System.out.println(hellos[0].hashCode());\n        System.out.println(hellos[1].hashCode());\n    }\n}\n/* Output:\n69609650\n69609650\n*/\n')),(0,r.kt)("p",null,"\u5bf9\u4e8eString\u800c\u8a00\uff0chashCode() \u660e\u663e\u662f\u57fa\u4e8eString\u7684\u5185\u5bb9\u7684\u3002"),(0,r.kt)("p",null,"\u56e0\u6b64\uff0c\u8981\u60f3\u4f7fhashCode()  \u5b9e\u7528\uff0c\u5b83\u5fc5\u987b\u901f\u5ea6\u5feb\uff0c\u5e76\u4e14\u5fc5\u987b\u6709\u610f\u4e49\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u5fc5\u987b\u57fa\u4e8e\u5bf9\u8c61\u7684\u5185\u5bb9\u751f\u6210\u6563\u5217\u7801\u3002\u8bb0\u5f97\u5417\uff0c\u6563\u5217\u7801\u4e0d\u5fc5\u662f\u72ec\u4e00\u65e0\u4e8c\u7684\uff08\u5e94\u8be5\u66f4\u5173\u6ce8\u751f\u6210\u901f\u5ea6\uff0c\u800c\u4e0d\u662f\u552f\u4e00\u6027\uff09\uff0c\u4f46\u662f\u901a\u8fc7 hashCode() \u548c equals() \uff0c\u5fc5\u987b\u80fd\u591f\u5b8c\u5168\u786e\u5b9a\u5bf9\u8c61\u7684\u8eab\u4efd\u3002"),(0,r.kt)("p",null,"\u56e0\u4e3a\u5728\u751f\u6210\u6876\u7684\u4e0b\u6807\u524d\uff0chashCode()\u8fd8\u9700\u8981\u505a\u8fdb\u4e00\u6b65\u7684\u5904\u7406\uff0c\u6240\u4ee5\u6563\u5217\u7801\u7684\u751f\u6210\u8303\u56f4\u5e76\u4e0d\u91cd\u8981\uff0c\u53ea\u8981\u662fint\u5373\u53ef\u3002"),(0,r.kt)("p",null,"\u8fd8\u6709\u53e6\u4e00\u4e2a\u5f71\u54cd\u56e0\u7d20\uff1a\u597d\u7684hashCode() \u5e94\u8be5\u4ea7\u751f\u5206\u5e03\u5747\u5300\u7684\u6563\u5217\u7801\u3002\u5982\u679c\u6563\u5217\u7801\u90fd\u96c6\u4e2d\u5728\u4e00\u5757\uff0c\u90a3\u4e48HashMap\u6216\u8005HashSet\u5728\u67d0\u4e9b\u533a\u57df\u7684\u8d1f\u8f7d\u4f1a\u5f88\u91cd\uff0c\u8fd9\u6837\u5c31\u4e0d\u5982\u5206\u5e03\u5747\u5300\u7684\u6563\u5217\u51fd\u6570\u5feb\u3002"),(0,r.kt)("p",null,"\u5728Effective Java Programming Language Guide\uff08Addison-Wesley 2001\uff09\u8fd9\u672c\u4e66\u4e2d\uff0cJoshua Bloch\u4e3a\u600e\u6837\u5199\u51fa\u4e00\u4efd\u50cf\u6837\u7684hashCode()\u7ed9\u51fa\u4e86\u57fa\u672c\u7684\u6307\u5bfc\uff1a "),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u7ed9int\u53d8\u91cfresult\u8d4b\u4e88\u67d0\u4e2a\u975e\u96f6\u503c\u5e38\u91cf\uff0c\u4f8b\u598217\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u4e3a\u5bf9\u8c61\u5185\u6bcf\u4e2a\u6709\u610f\u4e49\u7684\u5b57\u6bb5\uff08\u5373\u6bcf\u4e2a\u53ef\u4ee5\u505aequals\uff09\u64cd\u4f5c\u7684\u5b57\u6bb5\u8ba1\u7b97\u51fa\u4e00\u4e2aint\u6563\u5217\u7801c\uff1a")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"\u5b57\u6bb5\u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:null},"\u8ba1\u7b97\u516c\u5f0f"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"boolean"),(0,r.kt)("td",{parentName:"tr",align:null},"c = (f ? 0 : 1)")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"byte ,  char ,  short , or  int"),(0,r.kt)("td",{parentName:"tr",align:null},"c = (int)f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"long"),(0,r.kt)("td",{parentName:"tr",align:null},"c = (int)(f ^ (f>>>32))")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"float"),(0,r.kt)("td",{parentName:"tr",align:null},"c = Float.floatToIntBits(f);")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"double"),(0,r.kt)("td",{parentName:"tr",align:null},"long l =Double.doubleToLongBits(f); ",(0,r.kt)("br",null),"c = (int)(l ^ (l >>> 32))")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Object , where  equals() calls equals() for this field"),(0,r.kt)("td",{parentName:"tr",align:null},"c = f.hashCode()")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Array"),(0,r.kt)("td",{parentName:"tr",align:null},"\u5e94\u7528\u4ee5\u4e0a\u89c4\u5219\u5230\u6bcf\u4e00\u4e2a\u5143\u7d20\u4e2d")))),(0,r.kt)("ol",{start:3},(0,r.kt)("li",{parentName:"ol"},"\u5408\u5e76\u8ba1\u7b97\u5f97\u5230\u7684\u6563\u5217\u7801\uff1a ",(0,r.kt)("strong",{parentName:"li"},"result = 37 * result + c;\u200b")),(0,r.kt)("li",{parentName:"ol"},"\u8fd4\u56de result\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u68c0\u67e5hashCode()\u6700\u540e\u751f\u6210\u7684\u7ed3\u679c\uff0c\u786e\u4fdd\u76f8\u540c\u7684\u5bf9\u8c61\u6709\u76f8\u540c\u7684\u6563\u5217\u7801\u3002")),(0,r.kt)("p",null,"\u4e0b\u9762\u4fbf\u662f\u9075\u5faa\u8fd9\u4e9b\u6307\u5bfc\u7684\u4e00\u4e2a\u4f8b\u5b50\u3002\u63d0\u793a\uff0c\u4f60\u6ca1\u6709\u5fc5\u8981\u4e66\u5199\u50cf\u5982\u4e0b\u7684\u4ee3\u7801 \u2014\u2014 \u76f8\u53cd\uff0c\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"Objects.hash()")," \u53bb\u7528\u4e8e\u6563\u5217\u591a\u5b57\u6bb5\u7684\u5bf9\u8c61\uff08\u5982\u540c\u5728\u672c\u4f8b\u4e2d\u7684\u90a3\u6837\uff09\uff0c\u7136\u540e\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"Objects.hashCode()")," \u5982\u6563\u5217\u5355\u5b57\u6bb5\u7684\u5bf9\u8c61\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// equalshashcode/CountedString.java\n// Creating a good hashCode()\nimport java.util.*;\npublic class CountedString {\n    private static List<String> created =\n            new ArrayList<>();\n    private String s;\n    private int id = 0;\n    public CountedString(String str) {\n        s = str;\n        created.add(s);\n// id is the total number of instances\n// of this String used by CountedString:\n        for(String s2 : created)\n            if(s2.equals(s))\n                id++;\n    }\n    @Override\n    public String toString() {\n        return "String: " + s + " id: " + id +\n                " hashCode(): " + hashCode();\n    }\n    @Override\n    public int hashCode() {\n// The very simple approach:\n// return s.hashCode() * id;\n// Using Joshua Bloch\'s recipe:\n        int result = 17;\n        result = 37 * result + s.hashCode();\n        result = 37 * result + id;\n        return result;\n    }\n    @Override\n    public boolean equals(Object o) {\n        return o instanceof CountedString &&\n                Objects.equals(s, ((CountedString)o).s) &&\n                Objects.equals(id, ((CountedString)o).id);\n    }\n    public static void main(String[] args) {\n        Map<CountedString,Integer> map = new HashMap<>();\n        CountedString[] cs = new CountedString[5];\n        for(int i = 0; i < cs.length; i++) {\n            cs[i] = new CountedString("hi");\n            map.put(cs[i], i); // Autobox int to Integer\n        }\n        System.out.println(map);\n        for(CountedString cstring : cs) {\n            System.out.println("Looking up " + cstring);\n            System.out.println(map.get(cstring));\n        }\n    }\n}\n/* Output:\n{String: hi id: 4 hashCode(): 146450=3, String: hi id:\n5 hashCode(): 146451=4, String: hi id: 2 hashCode():\n146448=1, String: hi id: 3 hashCode(): 146449=2,\nString: hi id: 1 hashCode(): 146447=0}\nLooking up String: hi id: 1 hashCode(): 146447\n0\nLooking up String: hi id: 2 hashCode(): 146448\n1\nLooking up String: hi id: 3 hashCode(): 146449\n2\nLooking up String: hi id: 4 hashCode(): 146450\n3\nLooking up String: hi id: 5 hashCode(): 146451\n4\n*/\n')),(0,r.kt)("p",null,"CountedString\u7531\u4e00\u4e2aString\u548c\u4e00\u4e2aid\u7ec4\u6210\uff0c\u6b64id\u4ee3\u8868\u5305\u542b\u76f8\u540cString\u7684CountedString\u5bf9\u8c61\u7684\u7f16\u53f7\u3002\u6240\u6709\u7684String\u90fd\u88ab\u5b58\u50a8\u5728static ArrayList\u4e2d\uff0c\u5728\u6784\u9020\u5668\u4e2d\u901a\u8fc7\u9009\u4ee3\u904d\u5386\u6b64ArrayList\u5b8c\u6210\u5bf9id\u7684\u8ba1\u7b97\u3002"),(0,r.kt)("p",null,"hashCode()\u548cequals() \u90fd\u57fa\u4e8eCountedString\u7684\u8fd9\u4e24\u4e2a\u5b57\u6bb5\u6765\u751f\u6210\u7ed3\u679c\uff1b\u5982\u679c\u5b83\u4eec\u53ea\u57fa\u4e8eString\u6216\u8005\u53ea\u57fa\u4e8eid\uff0c\u4e0d\u540c\u7684\u5bf9\u8c61\u5c31\u53ef\u80fd\u4ea7\u751f\u76f8\u540c\u7684\u503c\u3002"),(0,r.kt)("p",null,"\u5728main\uff09\u4e2d\uff0c\u4f7f\u7528\u76f8\u540c\u7684String\u521b\u5efa\u4e86\u591a\u4e2aCountedString\u5bf9\u8c61\u3002\u8fd9\u8bf4\u660e\uff0c\u867d\u7136String\u76f8\u540c\uff0c\u4f46\u662f\u7531\u4e8eid\u4e0d\u540c\uff0c\u6240\u4ee5\u4f7f\u5f97\u5b83\u4eec\u7684\u6563\u5217\u7801\u5e76\u4e0d\u76f8\u540c\u3002\u5728\u7a0b\u5e8f\u4e2d\uff0cHashMap\u88ab\u6253\u5370\u4e86\u51fa\u6765\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u5230\u5b83\u5185\u90e8\u662f\u5982\u4f55\u5b58\u50a8\u5143\u7d20\u7684\uff08\u4ee5\u65e0\u6cd5\u8fa8\u522b\u7684\u6b21\u5e8f\uff09\uff0c\u7136\u540e\u5355\u72ec\u67e5\u8be2\u6bcf\u4e00\u4e2a\u952e\uff0c\u4ee5\u6b64\u8bc1\u660e\u67e5\u8be2\u673a\u5236\u5de5\u4f5c\u6b63\u5e38\u3002"),(0,r.kt)("p",null,"\u4f5c\u4e3a\u7b2c\u4e8c\u4e2a\u793a\u4f8b\uff0c\u8bf7\u8003\u8651Individual\u7c7b\uff0c\u5b83\u88ab\u7528\u4f5c",(0,r.kt)("a",{parentName:"p",href:"./Type-Information"},"\u7c7b\u578b\u4fe1\u606f"),"\u4e2d\u6240\u5b9a\u4e49\u7684typeinfo.pet\u7c7b\u5e93\u7684\u57fa\u7c7b\u3002Individual\u7c7b\u5728\u90a3\u4e00\u7ae0\u4e2d\u5c31\u7528\u5230\u4e86\uff0c\u800c\u5b83\u7684\u5b9a\u4e49\u5219\u653e\u5230\u4e86\u672c\u7ae0\uff0c\u56e0\u6b64\u4f60\u53ef\u4ee5\u6b63\u786e\u5730\u7406\u89e3\u5176\u5b9e\u73b0\u3002"),(0,r.kt)("p",null,"\u5728\u8fd9\u91cc\u66ff\u6362\u4e86\u624b\u5de5\u53bb\u8ba1\u7b97 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()"),"\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u66f4\u5408\u9002\u7684\u65b9\u5f0f ",(0,r.kt)("inlineCode",{parentName:"p"},"Objects.hash()"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// typeinfo/pets/Individual.java\npackage typeinfo.pets;\nimport java.util.*;\npublic class\nIndividual implements Comparable<Individual> {\n    private static long counter = 0;\n    private final long id = counter++;\n    private String name;\n    public Individual(String name) { this.name = name; }\n    // \'name\' is optional:\n    public Individual() {}\n    @Override\n    public String toString() {\n        return getClass().getSimpleName() +\n                (name == null ? "" : " " + name);\n    }\n    public long id() { return id; }\n    @Override\n    public boolean equals(Object o) {\n        return o instanceof Individual &&\n                Objects.equals(id, ((Individual)o).id);\n    }\n    @Override\n    public int hashCode() {\n        return Objects.hash(name, id);\n    }\n    @Override\n    public int compareTo(Individual arg) {\n        // Compare by class name first:\n        String first = getClass().getSimpleName();\n        String argFirst = arg.getClass().getSimpleName();\n        int firstCompare = first.compareTo(argFirst);\n        if(firstCompare != 0)\n            return firstCompare;\n        if(name != null && arg.name != null) {\n            int secondCompare = name.compareTo(arg.name);\n            if(secondCompare != 0)\n                return secondCompare;\n        }\n        return (arg.id < id ? -1 : (arg.id == id ? 0 : 1));\n    }\n}\n')),(0,r.kt)("p",null,"compareTo() \u65b9\u6cd5\u6709\u4e00\u4e2a\u6bd4\u8f83\u7ed3\u6784\uff0c\u56e0\u6b64\u5b83\u4f1a\u4ea7\u751f\u4e00\u4e2a\u6392\u5e8f\u5e8f\u5217\uff0c\u6392\u5e8f\u7684\u89c4\u5219\u9996\u5148\u6309\u7167\u5b9e\u9645\u7c7b\u578b\u6392\u5e8f\uff0c\u7136\u540e\u5982\u679c\u6709\u540d\u5b57\u7684\u8bdd\uff0c\u6309\u7167name\u6392\u5e8f\uff0c\u6700\u540e\u6309\u7167\u521b\u5efa\u7684\u987a\u5e8f\u6392\u5e8f\u3002\u4e0b\u9762\u7684\u793a\u4f8b\u8bf4\u660e\u4e86\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// equalshashcode/IndividualTest.java\nimport collections.MapOfList;\nimport typeinfo.pets.*;\nimport java.util.*;\npublic class IndividualTest {\n    public static void main(String[] args) {\n        Set<Individual> pets = new TreeSet<>();\n        for(List<? extends Pet> lp :\n                MapOfList.petPeople.values())\n            for(Pet p : lp)\n                pets.add(p);\n        pets.forEach(System.out::println);\n    }\n}\n/* Output:\nCat Elsie May\nCat Pinkola\nCat Shackleton\nCat Stanford\nCymric Molly\nDog Margrett\nMutt Spot\nPug Louie aka Louis Snorkelstein Dupree\nRat Fizzy\nRat Freckly\nRat Fuzzy\n*/\n")),(0,r.kt)("p",null,"\u7531\u4e8e\u6240\u6709\u7684\u5ba0\u7269\u90fd\u6709\u540d\u5b57\uff0c\u56e0\u6b64\u5b83\u4eec\u9996\u5148\u6309\u7167\u7c7b\u578b\u6392\u5e8f\uff0c\u7136\u540e\u5728\u540c\u7c7b\u578b\u4e2d\u6309\u7167\u540d\u5b57\u6392\u5e8f\u3002"),(0,r.kt)("h2",{id:"\u8c03\u4f18-hashmap"},"\u8c03\u4f18 HashMap"),(0,r.kt)("p",null,"\u6211\u4eec\u6709\u53ef\u80fd\u624b\u52a8\u8c03\u4f18HashMap\u4ee5\u63d0\u9ad8\u5176\u5728\u7279\u5b9a\u5e94\u7528\u7a0b\u5e8f\u4e2d\u7684\u6027\u80fd\u3002\u4e3a\u4e86\u7406\u89e3\u8c03\u6574HashMap\u65f6\u7684\u6027\u80fd\u95ee\u9898\uff0c\u4e00\u4e9b\u672f\u8bed\u662f\u5fc5\u8981\u7684\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u5bb9\u91cf\uff08Capacity\uff09\uff1a\u8868\u4e2d\u5b58\u50a8\u7684\u6876\u6570\u91cf\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u521d\u59cb\u5bb9\u91cf\uff08Initial Capacity\uff09\uff1a\u5f53\u8868\u88ab\u521b\u5efa\u65f6\uff0c\u6876\u7684\u521d\u59cb\u4e2a\u6570\u3002 HashMap \u548c HashSet \u6709\u53ef\u4ee5\u8ba9\u4f60\u6307\u5b9a\u521d\u59cb\u5bb9\u91cf\u7684\u6784\u9020\u5668\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u4e2a\u6570\uff08Size\uff09\uff1a\u76ee\u524d\u5b58\u50a8\u5728\u8868\u4e2d\u7684\u952e\u503c\u5bf9\u7684\u4e2a\u6570\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u8d1f\u8f7d\u56e0\u5b50\uff08Load factor\uff09\uff1a\u901a\u5e38\u8868\u73b0\u4e3a $\\frac{size}{capacity}$\u3002\u5f53\u8d1f\u8f7d\u56e0\u5b50\u5927\u5c0f\u4e3a 0 \u7684\u65f6\u5019\u8868\u793a\u4e3a\u4e00\u4e2a\u7a7a\u8868\u3002\u5f53\u8d1f\u8f7d\u56e0\u5b50\u5927\u5c0f\u4e3a 0.5 \u8868\u793a\u4e3a\u4e00\u4e2a\u534a\u6ee1\u8868\uff08half-full table\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8f7b\u8d1f\u8f7d\u7684\u8868\u51e0\u4e4e\u6ca1\u6709\u51b2\u7a81\uff0c\u56e0\u6b64\u662f\u63d2\u5165\u548c\u67e5\u627e\u7684\u6700\u4f73\u9009\u62e9\uff08\u4f46\u4f1a\u51cf\u6162\u4f7f\u7528\u8fed\u4ee3\u5668\u8fdb\u884c\u904d\u5386\u7684\u8fc7\u7a0b\uff09\u3002 HashMap \u548c HashSet \u6709\u53ef\u4ee5\u8ba9\u4f60\u6307\u5b9a\u8d1f\u8f7d\u56e0\u5b50\u7684\u6784\u9020\u5668\u3002\u5f53\u8868\u5185\u5bb9\u91cf\u8fbe\u5230\u4e86\u8d1f\u8f7d\u56e0\u5b50\uff0c\u96c6\u5408\u5c31\u4f1a\u81ea\u52a8\u6269\u5145\u4e3a\u539f\u59cb\u5bb9\u91cf\uff08\u6876\u7684\u6570\u91cf\uff09\u7684\u4e24\u500d\uff0c\u5e76\u4e14\u4f1a\u5c06\u539f\u59cb\u7684\u5bf9\u8c61\u5b58\u50a8\u5728\u65b0\u7684\u6876\u96c6\u5408\u4e2d\uff08\u4e5f\u88ab\u79f0\u4e3a rehashing\uff09")),(0,r.kt)("p",null,"HashMap \u4e2d\u8d1f\u8f7d\u56e0\u5b50\u7684\u5927\u5c0f\u4e3a 0.75\uff08\u5f53\u8868\u5185\u5bb9\u91cf\u5927\u5c0f\u4e0d\u8db3\u56db\u5206\u4e4b\u4e09\u7684\u65f6\u5019\uff0c\u4e0d\u4f1a\u53d1\u751f rehashing \u73b0\u8c61\uff09\u3002\u8fd9\u770b\u8d77\u6765\u662f\u4e00\u4e2a\u975e\u5e38\u597d\u7684\u540c\u65f6\u8003\u8651\u5230\u65f6\u95f4\u548c\u7a7a\u95f4\u6d88\u8017\u7684\u5e73\u8861\u7b56\u7565\u3002\u66f4\u9ad8\u7684\u8d1f\u8f7d\u56e0\u5b50\u4f1a\u51cf\u5c11\u7a7a\u95f4\u7684\u6d88\u8017\uff0c\u4f46\u662f\u4f1a\u589e\u52a0\u67e5\u8be2\u7684\u8017\u65f6\u3002\u91cd\u8981\u7684\u662f\uff0c\u67e5\u8be2\u64cd\u4f5c\u662f\u4f60\u4f7f\u7528\u7684\u6700\u9891\u7e41\u7684\u4e00\u4e2a\u64cd\u4f5c\uff08\u5305\u62ec ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"put()")," \u65b9\u6cd5\uff09\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u4f60\u77e5\u9053\u5b58\u50a8\u5728 HashMap \u4e2d\u786e\u5207\u7684\u6761\u76ee\u4e2a\u6570\uff0c\u76f4\u63a5\u521b\u5efa\u4e00\u4e2a\u8db3\u591f\u5bb9\u91cf\u5927\u5c0f\u7684 HashMap\uff0c\u4ee5\u907f\u514d\u81ea\u52a8\u53d1\u751f\u7684 rehashing \u64cd\u4f5c\u3002"),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-1"},(0,r.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-2"},"\u4e8b\u5b9e\u8bc1\u660e\uff0c\u8d28\u6570\u5b9e\u9645\u4e0a\u5e76\u4e0d\u662f\u6563\u5217\u6876\u7684\u7406\u60f3\u5bb9\u91cf\u3002\u8fd1\u6765\uff0c\uff08\u7ecf\u8fc7\u5e7f\u6cdb\u7684\u6d4b\u8bd5\uff09Java\u7684\u6563\u5217\u51fd\u6570\u90fd\u4f7f\u75282\u7684\u6574\u6570\u6b21\u65b9\u3002\u5bf9\u73b0\u4ee3\u7684\u5904\u7406\u5668\u6765\u8bf4\uff0c\u9664\u6cd5\u4e0e\u6c42\u4f59\u6570\u662f\u6700\u6162\u7684\u64cd\u4f5c\u3002\u4f7f\u75282\u7684\u6574\u6570\u6b21\u65b9\u957f\u5ea6\u7684\u6563\u5217\u8868\uff0c\u53ef\u7528\u63a9\u7801\u4ee3\u66ff\u9664\u6cd5\u3002",(0,r.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")))))}d.isMDXComponent=!0}}]);