"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2925],{3905:(n,t,e)=>{e.d(t,{Zo:()=>m,kt:()=>c});var a=e(7294);function r(n,t,e){return t in n?Object.defineProperty(n,t,{value:e,enumerable:!0,configurable:!0,writable:!0}):n[t]=e,n}function i(n,t){var e=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(n,t).enumerable}))),e.push.apply(e,a)}return e}function o(n){for(var t=1;t<arguments.length;t++){var e=null!=arguments[t]?arguments[t]:{};t%2?i(Object(e),!0).forEach((function(t){r(n,t,e[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(e)):i(Object(e)).forEach((function(t){Object.defineProperty(n,t,Object.getOwnPropertyDescriptor(e,t))}))}return n}function l(n,t){if(null==n)return{};var e,a,r=function(n,t){if(null==n)return{};var e,a,r={},i=Object.keys(n);for(a=0;a<i.length;a++)e=i[a],t.indexOf(e)>=0||(r[e]=n[e]);return r}(n,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)e=i[a],t.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(n,e)&&(r[e]=n[e])}return r}var p=a.createContext({}),s=function(n){var t=a.useContext(p),e=t;return n&&(e="function"==typeof n?n(t):o(o({},t),n)),e},m=function(n){var t=s(n.components);return a.createElement(p.Provider,{value:t},n.children)},u={inlineCode:"code",wrapper:function(n){var t=n.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(n,t){var e=n.components,r=n.mdxType,i=n.originalType,p=n.parentName,m=l(n,["components","mdxType","originalType","parentName"]),k=s(e),c=r,d=k["".concat(p,".").concat(c)]||k[c]||u[c]||i;return e?a.createElement(d,o(o({ref:t},m),{},{components:e})):a.createElement(d,o({ref:t},m))}));function c(n,t){var e=arguments,r=t&&t.mdxType;if("string"==typeof n||r){var i=e.length,o=new Array(i);o[0]=k;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=n,l.mdxType="string"==typeof n?n:r,o[1]=l;for(var s=2;s<i;s++)o[s]=e[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,e)}k.displayName="MDXCreateElement"},5839:(n,t,e)=>{e.r(t),e.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var a=e(7462),r=(e(7294),e(3905));const i={},o="\u9644\u5f55:\u96c6\u5408\u4e3b\u9898",l={unversionedId:"Books/OnJava8/Appendix-Collection-Topics",id:"Books/OnJava8/Appendix-Collection-Topics",title:"\u9644\u5f55:\u96c6\u5408\u4e3b\u9898",description:"\u672c\u9644\u5f55\u662f\u4e00\u4e9b\u6bd4\u7b2c\u5341\u4e8c\u7ae0 \u96c6\u5408\u4e2d\u4ecb\u7ecd\u7684\u66f4\u9ad8\u7ea7\u7684\u5185\u5bb9\u3002",source:"@site/docs/Books/OnJava8/Appendix-Collection-Topics.md",sourceDirName:"Books/OnJava8",slug:"/Books/OnJava8/Appendix-Collection-Topics",permalink:"/docs/Books/OnJava8/Appendix-Collection-Topics",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/OnJava8/Appendix-Collection-Topics.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u9644\u5f55:\u9759\u6001\u8bed\u8a00\u7c7b\u578b\u68c0\u67e5",permalink:"/docs/Books/OnJava8/Appendix-Benefits-and-Costs-of-Static-Type-Checking"},next:{title:"\u9644\u5f55:\u6570\u636e\u538b\u7f29",permalink:"/docs/Books/OnJava8/Appendix-Data-Compression"}},p={},s=[{value:"\u793a\u4f8b\u6570\u636e",id:"\u793a\u4f8b\u6570\u636e",level:2},{value:"List\u884c\u4e3a",id:"list\u884c\u4e3a",level:2},{value:"Set\u884c\u4e3a",id:"set\u884c\u4e3a",level:2},{value:"\u5728Map\u4e2d\u4f7f\u7528\u51fd\u6570\u5f0f\u64cd\u4f5c",id:"\u5728map\u4e2d\u4f7f\u7528\u51fd\u6570\u5f0f\u64cd\u4f5c",level:2},{value:"\u9009\u62e9Map\u7247\u6bb5",id:"\u9009\u62e9map\u7247\u6bb5",level:2},{value:"\u586b\u5145\u96c6\u5408",id:"\u586b\u5145\u96c6\u5408",level:2},{value:"\u4f7f\u7528 Suppliers \u586b\u5145\u96c6\u5408",id:"\u4f7f\u7528-suppliers-\u586b\u5145\u96c6\u5408",level:3},{value:"Map Suppliers",id:"map-suppliers",level:3},{value:"\u4f7f\u7528\u4eab\u5143\uff08Flyweight\uff09\u81ea\u5b9a\u4e49Collection\u548cMap",id:"\u4f7f\u7528\u4eab\u5143flyweight\u81ea\u5b9a\u4e49collection\u548cmap",level:2},{value:"\u96c6\u5408\u529f\u80fd",id:"\u96c6\u5408\u529f\u80fd",level:2},{value:"\u53ef\u9009\u64cd\u4f5c",id:"\u53ef\u9009\u64cd\u4f5c",level:2},{value:"\u4e0d\u652f\u6301\u7684\u64cd\u4f5c",id:"\u4e0d\u652f\u6301\u7684\u64cd\u4f5c",level:3},{value:"Set\u548c\u5b58\u50a8\u987a\u5e8f",id:"set\u548c\u5b58\u50a8\u987a\u5e8f",level:2},{value:"SortedSet",id:"sortedset",level:3},{value:"\u961f\u5217",id:"\u961f\u5217",level:2},{value:"\u4f18\u5148\u7ea7\u961f\u5217",id:"\u4f18\u5148\u7ea7\u961f\u5217",level:3},{value:"\u53cc\u7aef\u961f\u5217",id:"\u53cc\u7aef\u961f\u5217",level:3},{value:"\u7406\u89e3Map",id:"\u7406\u89e3map",level:2},{value:"\u6027\u80fd",id:"\u6027\u80fd",level:3},{value:"SortedMap",id:"sortedmap",level:3},{value:"LinkedHashMap",id:"linkedhashmap",level:3},{value:"\u96c6\u5408\u5de5\u5177\u7c7b",id:"\u96c6\u5408\u5de5\u5177\u7c7b",level:2},{value:"\u6392\u5e8f\u548c\u641c\u7d22\u5217\u8868",id:"\u6392\u5e8f\u548c\u641c\u7d22\u5217\u8868",level:3},{value:"\u521b\u5efa\u4e0d\u53ef\u4fee\u6539\u7684 Collection \u6216 Map",id:"\u521b\u5efa\u4e0d\u53ef\u4fee\u6539\u7684-collection-\u6216-map",level:3},{value:"\u540c\u6b65 Collection \u6216 Map",id:"\u540c\u6b65-collection-\u6216-map",level:3},{value:"Fail Fast",id:"fail-fast",level:4},{value:"\u6301\u6709\u5f15\u7528",id:"\u6301\u6709\u5f15\u7528",level:2},{value:"WeakHashMap",id:"weakhashmap",level:3},{value:"Java 1.0 / 1.1 \u7684\u96c6\u5408\u7c7b",id:"java-10--11-\u7684\u96c6\u5408\u7c7b",level:2},{value:"Vector \u548c Enumeration",id:"vector-\u548c-enumeration",level:3},{value:"Hashtable",id:"hashtable",level:3},{value:"Stack",id:"stack",level:3},{value:"BitSet",id:"bitset",level:3},{value:"\u672c\u7ae0\u5c0f\u7ed3",id:"\u672c\u7ae0\u5c0f\u7ed3",level:2}],m={toc:s};function u(n){let{components:t,...e}=n;return(0,r.kt)("wrapper",(0,a.Z)({},m,e,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u9644\u5f55\u96c6\u5408\u4e3b\u9898"},"\u9644\u5f55:\u96c6\u5408\u4e3b\u9898"),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"\u672c\u9644\u5f55\u662f\u4e00\u4e9b\u6bd4",(0,r.kt)("a",{parentName:"p",href:"./Collections"},"\u7b2c\u5341\u4e8c\u7ae0 \u96c6\u5408"),"\u4e2d\u4ecb\u7ecd\u7684\u66f4\u9ad8\u7ea7\u7684\u5185\u5bb9\u3002")),(0,r.kt)("h2",{id:"\u793a\u4f8b\u6570\u636e"},"\u793a\u4f8b\u6570\u636e"),(0,r.kt)("p",null,"\u8fd9\u91cc\u521b\u5efa\u4e00\u4e9b\u6837\u672c\u6570\u636e\u7528\u4e8e\u96c6\u5408\u793a\u4f8b\u3002 \u4ee5\u4e0b\u6570\u636e\u5c06\u989c\u8272\u540d\u79f0\u4e0eHTML\u989c\u8272\u7684RGB\u503c\u76f8\u5173\u8054\u3002\u8bf7\u6ce8\u610f\uff0c\u6bcf\u4e2a\u952e\u548c\u503c\u90fd\u662f\u552f\u4e00\u7684\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// onjava/HTMLColors.java\n// Sample data for collection examples\npackage onjava;\nimport java.util.*;\nimport java.util.stream.*;\nimport java.util.concurrent.*;\n\npublic class HTMLColors {\n  public static final Object[][] ARRAY = {\n    { 0xF0F8FF, "AliceBlue" },\n    { 0xFAEBD7, "AntiqueWhite" },\n    { 0x7FFFD4, "Aquamarine" },\n    { 0xF0FFFF, "Azure" },\n    { 0xF5F5DC, "Beige" },\n    { 0xFFE4C4, "Bisque" },\n    { 0x000000, "Black" },\n    { 0xFFEBCD, "BlanchedAlmond" },\n    { 0x0000FF, "Blue" },\n    { 0x8A2BE2, "BlueViolet" },\n    { 0xA52A2A, "Brown" },\n    { 0xDEB887, "BurlyWood" },\n    { 0x5F9EA0, "CadetBlue" },\n    { 0x7FFF00, "Chartreuse" },\n    { 0xD2691E, "Chocolate" },\n    { 0xFF7F50, "Coral" },\n    { 0x6495ED, "CornflowerBlue" },\n    { 0xFFF8DC, "Cornsilk" },\n    { 0xDC143C, "Crimson" },\n    { 0x00FFFF, "Cyan" },\n    { 0x00008B, "DarkBlue" },\n    { 0x008B8B, "DarkCyan" },\n    { 0xB8860B, "DarkGoldenRod" },\n    { 0xA9A9A9, "DarkGray" },\n    { 0x006400, "DarkGreen" },\n    { 0xBDB76B, "DarkKhaki" },\n    { 0x8B008B, "DarkMagenta" },\n    { 0x556B2F, "DarkOliveGreen" },\n    { 0xFF8C00, "DarkOrange" },\n    { 0x9932CC, "DarkOrchid" },\n    { 0x8B0000, "DarkRed" },\n    { 0xE9967A, "DarkSalmon" },\n    { 0x8FBC8F, "DarkSeaGreen" },\n    { 0x483D8B, "DarkSlateBlue" },\n    { 0x2F4F4F, "DarkSlateGray" },\n    { 0x00CED1, "DarkTurquoise" },\n    { 0x9400D3, "DarkViolet" },\n    { 0xFF1493, "DeepPink" },\n    { 0x00BFFF, "DeepSkyBlue" },\n    { 0x696969, "DimGray" },\n    { 0x1E90FF, "DodgerBlue" },\n    { 0xB22222, "FireBrick" },\n    { 0xFFFAF0, "FloralWhite" },\n    { 0x228B22, "ForestGreen" },\n    { 0xDCDCDC, "Gainsboro" },\n    { 0xF8F8FF, "GhostWhite" },\n    { 0xFFD700, "Gold" },\n    { 0xDAA520, "GoldenRod" },\n    { 0x808080, "Gray" },\n    { 0x008000, "Green" },\n    { 0xADFF2F, "GreenYellow" },\n    { 0xF0FFF0, "HoneyDew" },\n    { 0xFF69B4, "HotPink" },\n    { 0xCD5C5C, "IndianRed" },\n    { 0x4B0082, "Indigo" },\n    { 0xFFFFF0, "Ivory" },\n    { 0xF0E68C, "Khaki" },\n    { 0xE6E6FA, "Lavender" },\n    { 0xFFF0F5, "LavenderBlush" },\n    { 0x7CFC00, "LawnGreen" },\n    { 0xFFFACD, "LemonChiffon" },\n    { 0xADD8E6, "LightBlue" },\n    { 0xF08080, "LightCoral" },\n    { 0xE0FFFF, "LightCyan" },\n    { 0xFAFAD2, "LightGoldenRodYellow" },\n    { 0xD3D3D3, "LightGray" },\n    { 0x90EE90, "LightGreen" },\n    { 0xFFB6C1, "LightPink" },\n    { 0xFFA07A, "LightSalmon" },\n    { 0x20B2AA, "LightSeaGreen" },\n    { 0x87CEFA, "LightSkyBlue" },\n    { 0x778899, "LightSlateGray" },\n    { 0xB0C4DE, "LightSteelBlue" },\n    { 0xFFFFE0, "LightYellow" },\n    { 0x00FF00, "Lime" },\n    { 0x32CD32, "LimeGreen" },\n    { 0xFAF0E6, "Linen" },\n    { 0xFF00FF, "Magenta" },\n    { 0x800000, "Maroon" },\n    { 0x66CDAA, "MediumAquaMarine" },\n    { 0x0000CD, "MediumBlue" },\n    { 0xBA55D3, "MediumOrchid" },\n    { 0x9370DB, "MediumPurple" },\n    { 0x3CB371, "MediumSeaGreen" },\n    { 0x7B68EE, "MediumSlateBlue" },\n    { 0x00FA9A, "MediumSpringGreen" },\n    { 0x48D1CC, "MediumTurquoise" },\n    { 0xC71585, "MediumVioletRed" },\n    { 0x191970, "MidnightBlue" },\n    { 0xF5FFFA, "MintCream" },\n    { 0xFFE4E1, "MistyRose" },\n    { 0xFFE4B5, "Moccasin" },\n    { 0xFFDEAD, "NavajoWhite" },\n    { 0x000080, "Navy" },\n    { 0xFDF5E6, "OldLace" },\n    { 0x808000, "Olive" },\n    { 0x6B8E23, "OliveDrab" },\n    { 0xFFA500, "Orange" },\n    { 0xFF4500, "OrangeRed" },\n    { 0xDA70D6, "Orchid" },\n    { 0xEEE8AA, "PaleGoldenRod" },\n    { 0x98FB98, "PaleGreen" },\n    { 0xAFEEEE, "PaleTurquoise" },\n    { 0xDB7093, "PaleVioletRed" },\n    { 0xFFEFD5, "PapayaWhip" },\n    { 0xFFDAB9, "PeachPuff" },\n    { 0xCD853F, "Peru" },\n    { 0xFFC0CB, "Pink" },\n    { 0xDDA0DD, "Plum" },\n    { 0xB0E0E6, "PowderBlue" },\n    { 0x800080, "Purple" },\n    { 0xFF0000, "Red" },\n    { 0xBC8F8F, "RosyBrown" },\n    { 0x4169E1, "RoyalBlue" },\n    { 0x8B4513, "SaddleBrown" },\n    { 0xFA8072, "Salmon" },\n    { 0xF4A460, "SandyBrown" },\n    { 0x2E8B57, "SeaGreen" },\n    { 0xFFF5EE, "SeaShell" },\n    { 0xA0522D, "Sienna" },\n    { 0xC0C0C0, "Silver" },\n    { 0x87CEEB, "SkyBlue" },\n    { 0x6A5ACD, "SlateBlue" },\n    { 0x708090, "SlateGray" },\n    { 0xFFFAFA, "Snow" },\n    { 0x00FF7F, "SpringGreen" },\n    { 0x4682B4, "SteelBlue" },\n    { 0xD2B48C, "Tan" },\n    { 0x008080, "Teal" },\n    { 0xD8BFD8, "Thistle" },\n    { 0xFF6347, "Tomato" },\n    { 0x40E0D0, "Turquoise" },\n    { 0xEE82EE, "Violet" },\n    { 0xF5DEB3, "Wheat" },\n    { 0xFFFFFF, "White" },\n    { 0xF5F5F5, "WhiteSmoke" },\n    { 0xFFFF00, "Yellow" },\n    { 0x9ACD32, "YellowGreen" },\n  };\n  public static final Map<Integer,String> MAP =\n    Arrays.stream(ARRAY)\n      .collect(Collectors.toMap(\n        element -> (Integer)element[0],\n        element -> (String)element[1],\n        (v1, v2) -> { // Merge function\n          throw new IllegalStateException();\n        },\n        LinkedHashMap::new\n      ));\n  // Inversion only works if values are unique:\n  public static <V, K> Map<V, K>\n  invert(Map<K, V> map) {\n    return map.entrySet().stream()\n      .collect(Collectors.toMap(\n        Map.Entry::getValue,\n        Map.Entry::getKey,\n        (v1, v2) -> {\n          throw new IllegalStateException();\n        },\n        LinkedHashMap::new\n      ));\n  }\n  public static final Map<String,Integer>\n    INVMAP = invert(MAP);\n  // Look up RGB value given a name:\n  public static Integer rgb(String colorName) {\n    return INVMAP.get(colorName);\n  }\n  public static final List<String> LIST =\n    Arrays.stream(ARRAY)\n      .map(item -> (String)item[1])\n      .collect(Collectors.toList());\n  public static final List<Integer> RGBLIST =\n    Arrays.stream(ARRAY)\n      .map(item -> (Integer)item[0])\n      .collect(Collectors.toList());\n  public static\n  void show(Map.Entry<Integer,String> e) {\n    System.out.format(\n      "0x%06X: %s%n", e.getKey(), e.getValue());\n  }\n  public static void\n  show(Map<Integer,String> m, int count) {\n    m.entrySet().stream()\n      .limit(count)\n      .forEach(e -> show(e));\n  }\n  public static void show(Map<Integer,String> m) {\n    show(m, m.size());\n  }\n  public static\n  void show(Collection<String> lst, int count) {\n    lst.stream()\n      .limit(count)\n      .forEach(System.out::println);\n  }\n  public static void show(Collection<String> lst) {\n    show(lst, lst.size());\n  }\n  public static\n  void showrgb(Collection<Integer> lst, int count) {\n    lst.stream()\n      .limit(count)\n      .forEach(n -> System.out.format("0x%06X%n", n));\n  }\n  public static void showrgb(Collection<Integer> lst) {\n    showrgb(lst, lst.size());\n  }\n  public static\n  void showInv(Map<String,Integer> m, int count) {\n    m.entrySet().stream()\n      .limit(count)\n      .forEach(e ->\n        System.out.format(\n          "%-20s  0x%06X%n", e.getKey(), e.getValue()));\n  }\n  public static void showInv(Map<String,Integer> m) {\n    showInv(m, m.size());\n  }\n  public static void border() {\n    System.out.println(\n      "******************************");\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"MAP")," \u662f\u4f7f\u7528Streams\uff08",(0,r.kt)("a",{parentName:"p",href:"./Streams"},"\u7b2c\u5341\u56db\u7ae0 \u6d41\u5f0f\u7f16\u7a0b"),"\uff09\u521b\u5efa\u7684\u3002 \u4e8c\u7ef4\u6570\u7ec4 ",(0,r.kt)("strong",{parentName:"p"},"ARRAY")," \u4f5c\u4e3a\u6d41\u4f20\u8f93\u5230 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u4e2d\uff0c\u4f46\u8bf7\u6ce8\u610f\u6211\u4eec\u4e0d\u4ec5\u4ec5\u662f\u4f7f\u7528\u7b80\u5355\u7248\u672c\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collectors.toMap()")," \u3002 \u90a3\u4e2a\u7248\u672c\u751f\u6210\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"HashMap")," \uff0c\u5b83\u4f7f\u7528\u6563\u5217\u51fd\u6570\u6765\u63a7\u5236\u5bf9\u952e\u7684\u6392\u5e8f\u3002 \u4e3a\u4e86\u4fdd\u7559\u539f\u6765\u7684\u987a\u5e8f\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u952e\u503c\u5bf9\u76f4\u63a5\u653e\u5165 ",(0,r.kt)("strong",{parentName:"p"},"TreeMap")," \u4e2d\uff0c\u8fd9\u610f\u5473\u7740\u6211\u4eec\u9700\u8981\u4f7f\u7528\u66f4\u590d\u6742\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collectors.toMap()")," \u7248\u672c\u3002\u8fd9\u9700\u8981\u4e24\u4e2a\u51fd\u6570\u4ece\u6bcf\u4e2a\u6d41\u5143\u7d20\u4e2d\u63d0\u53d6\u952e\u548c\u503c\uff0c\u5c31\u50cf\u7b80\u5355\u7248\u672c\u7684",(0,r.kt)("inlineCode",{parentName:"p"},"Collectors.toMap()")," \u4e00\u6837\u3002 \u7136\u540e\u5b83\u9700\u8981\u4e00\u4e2a",(0,r.kt)("em",{parentName:"p"},"\u5408\u5e76\u51fd\u6570"),"\uff08merge function\uff09\uff0c\u5b83\u89e3\u51b3\u4e86\u4e0e\u540c\u4e00\u4e2a\u952e\u76f8\u5173\u7684\u4e24\u4e2a\u503c\u4e4b\u95f4\u7684\u51b2\u7a81\u3002\u8fd9\u91cc\u7684\u6570\u636e\u5df2\u7ecf\u9884\u5148\u5ba1\u67e5\u8fc7\uff0c\u56e0\u6b64\u7edd\u4e0d\u4f1a\u53d1\u751f\u8fd9\u79cd\u60c5\u51b5\uff0c\u5982\u679c\u6709\u7684\u8bdd\uff0c\u8fd9\u91cc\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u6700\u540e\uff0c\u4f20\u9012\u751f\u6210\u6240\u9700\u7c7b\u578b\u7684\u7a7amap\u7684\u51fd\u6570\uff0c\u7136\u540e\u7528\u6d41\u6765\u586b\u5145\u5b83\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"rgb()")," \u65b9\u6cd5\u662f\u4e00\u4e2a\u4fbf\u6377\u51fd\u6570\uff08convenience function\uff09\uff0c\u5b83\u63a5\u53d7\u989c\u8272\u540d\u79f0 ",(0,r.kt)("strong",{parentName:"p"},"String")," \u53c2\u6570\u5e76\u751f\u6210\u5176\u6570\u5b57RGB\u503c\u3002\u4e3a\u6b64\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a\u53cd\u8f6c\u7248\u672c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"COLORS")," \uff0c\u5b83\u63a5\u53d7\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"String"),"\u952e\u5e76\u67e5\u627eRGB\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Integer")," \u503c\u3002 \u8fd9\u662f\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"invert()")," \u65b9\u6cd5\u5b9e\u73b0\u7684\uff0c\u5982\u679c\u4efb\u4f55 ",(0,r.kt)("strong",{parentName:"p"},"COLORS")," \u503c\u4e0d\u552f\u4e00\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u8fd8\u521b\u5efa\u5305\u542b\u6240\u6709\u540d\u79f0\u7684 ",(0,r.kt)("strong",{parentName:"p"},"LIST")," \uff0c\u4ee5\u53ca\u5305\u542b\u5341\u516d\u8fdb\u5236\u8868\u793a\u6cd5\u7684RGB\u503c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"RGBLIST")," \u3002"),(0,r.kt)("p",null,"\u7b2c\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"show()")," \u65b9\u6cd5\u63a5\u53d7\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Map.Entry")," \u5e76\u663e\u793a\u4ee5\u5341\u516d\u8fdb\u5236\u8868\u793a\u7684\u952e\uff0c\u4ee5\u4fbf\u8f7b\u677e\u5730\u5bf9\u539f\u59cb ",(0,r.kt)("strong",{parentName:"p"},"ARRAY")," \u8fdb\u884c\u53cc\u91cd\u68c0\u67e5\u3002 \u540d\u79f0\u4ee5 ",(0,r.kt)("strong",{parentName:"p"},"show")," \u5f00\u5934\u7684\u6bcf\u4e2a\u65b9\u6cd5\u90fd\u4f1a\u91cd\u8f7d\u4e24\u4e2a\u7248\u672c\uff0c\u5176\u4e2d\u4e00\u4e2a\u7248\u672c\u91c7\u7528 ",(0,r.kt)("strong",{parentName:"p"},"count")," \u53c2\u6570\u6765\u6307\u793a\u8981\u663e\u793a\u7684\u5143\u7d20\u6570\u91cf\uff0c\u7b2c\u4e8c\u4e2a\u7248\u672c\u663e\u793a\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002"),(0,r.kt)("p",null,"\u8fd9\u91cc\u662f\u4e00\u4e2a\u57fa\u672c\u7684\u6d4b\u8bd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// collectiontopics/HTMLColorTest.java\nimport static onjava.HTMLColors.*;\n\npublic class HTMLColorTest {\n  static final int DISPLAY_SIZE = 20;\n  public static void main(String[] args) {\n    show(MAP, DISPLAY_SIZE);\n    border();\n    showInv(INVMAP, DISPLAY_SIZE);\n    border();\n    show(LIST, DISPLAY_SIZE);\n    border();\n    showrgb(RGBLIST, DISPLAY_SIZE);\n  }\n}\n/* Output:\n0xF0F8FF: AliceBlue\n0xFAEBD7: AntiqueWhite\n0x7FFFD4: Aquamarine\n0xF0FFFF: Azure\n0xF5F5DC: Beige\n0xFFE4C4: Bisque\n0x000000: Black\n0xFFEBCD: BlanchedAlmond\n0x0000FF: Blue\n0x8A2BE2: BlueViolet\n0xA52A2A: Brown\n0xDEB887: BurlyWood\n0x5F9EA0: CadetBlue\n0x7FFF00: Chartreuse\n0xD2691E: Chocolate\n0xFF7F50: Coral\n0x6495ED: CornflowerBlue\n0xFFF8DC: Cornsilk\n0xDC143C: Crimson\n0x00FFFF: Cyan\n******************************\nAliceBlue             0xF0F8FF\nAntiqueWhite          0xFAEBD7\nAquamarine            0x7FFFD4\nAzure                 0xF0FFFF\nBeige                 0xF5F5DC\nBisque                0xFFE4C4\nBlack                 0x000000\nBlanchedAlmond        0xFFEBCD\nBlue                  0x0000FF\nBlueViolet            0x8A2BE2\nBrown                 0xA52A2A\nBurlyWood             0xDEB887\nCadetBlue             0x5F9EA0\nChartreuse            0x7FFF00\nChocolate             0xD2691E\nCoral                 0xFF7F50\nCornflowerBlue        0x6495ED\nCornsilk              0xFFF8DC\nCrimson               0xDC143C\nCyan                  0x00FFFF\n******************************\nAliceBlue\nAntiqueWhite\nAquamarine\nAzure\nBeige\nBisque\nBlack\nBlanchedAlmond\nBlue\nBlueViolet\nBrown\nBurlyWood\nCadetBlue\nChartreuse\nChocolate\nCoral\nCornflowerBlue\nCornsilk\nCrimson\nCyan\n******************************\n0xF0F8FF\n0xFAEBD7\n0x7FFFD4\n0xF0FFFF\n0xF5F5DC\n0xFFE4C4\n0x000000\n0xFFEBCD\n0x0000FF\n0x8A2BE2\n0xA52A2A\n0xDEB887\n0x5F9EA0\n0x7FFF00\n0xD2691E\n0xFF7F50\n0x6495ED\n0xFFF8DC\n0xDC143C\n0x00FFFF\n*/\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"LinkedHashMap")," \u786e\u5b9e\u80fd\u591f\u4fdd\u7559 ",(0,r.kt)("strong",{parentName:"p"},"HTMLColors.ARRAY")," \u7684\u987a\u5e8f\u3002"),(0,r.kt)("h2",{id:"list\u884c\u4e3a"},"List\u884c\u4e3a"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Lists")," \u662f\u5b58\u50a8\u548c\u68c0\u7d22\u5bf9\u8c61\uff08\u6b21\u4e8e\u6570\u7ec4\uff09\u7684\u6700\u57fa\u672c\u65b9\u6cd5\u3002\u57fa\u672c\u5217\u8868\u64cd\u4f5c\u5305\u62ec\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"add()")," \u7528\u4e8e\u63d2\u5165\u5143\u7d20"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"get()")," \u7528\u4e8e\u968f\u673a\u8bbf\u95ee\u5143\u7d20"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"iterator()")," \u83b7\u53d6\u5e8f\u5217\u4e0a\u7684\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"li"},"Iterator")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"stream()")," \u751f\u6210\u5143\u7d20\u7684\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"li"},"Stream"))),(0,r.kt)("p",null,"\u5217\u8868\u6784\u9020\u65b9\u6cd5\u59cb\u7ec8\u4fdd\u7559\u5143\u7d20\u7684\u6dfb\u52a0\u987a\u5e8f\u3002"),(0,r.kt)("p",null,"\u4ee5\u4e0b\u793a\u4f8b\u4e2d\u7684\u65b9\u6cd5\u5404\u81ea\u6db5\u76d6\u4e86\u4e00\u7ec4\u4e0d\u540c\u7684\u884c\u4e3a\uff1a\u6bcf\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"List")," \u53ef\u4ee5\u6267\u884c\u7684\u64cd\u4f5c\uff08 ",(0,r.kt)("inlineCode",{parentName:"p"},"basicTest()")," \uff09\uff0c\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Iterator")," \uff08 ",(0,r.kt)("inlineCode",{parentName:"p"},"iterMotion()")," \uff09\u904d\u5386\u5e8f\u5217\uff0c\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Iterator")," \uff08 ",(0,r.kt)("inlineCode",{parentName:"p"},"iterManipulation()")," \uff09\u66f4\u6539\u5185\u5bb9\uff0c\u67e5\u770b ",(0,r.kt)("strong",{parentName:"p"},"List")," \u64cd\u4f5c\uff08 ",(0,r.kt)("inlineCode",{parentName:"p"},"testVisual()")," \uff09\u7684\u6548\u679c\uff0c\u4ee5\u53ca\u4ec5\u53ef\u7528\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"LinkedLists")," \u7684\u64cd\u4f5c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/ListOps.java\n// Things you can do with Lists\nimport java.util.*;\nimport onjava.HTMLColors;\n\npublic class ListOps {\n  // Create a short list for testing:\n  static final List<String> LIST =\n    HTMLColors.LIST.subList(0, 10);\n  private static boolean b;\n  private static String s;\n  private static int i;\n  private static Iterator<String> it;\n  private static ListIterator<String> lit;\n  public static void basicTest(List<String> a) {\n    a.add(1, "x"); // Add at location 1\n    a.add("x"); // Add at end\n    // Add a collection:\n    a.addAll(LIST);\n    // Add a collection starting at location 3:\n    a.addAll(3, LIST);\n    b = a.contains("1"); // Is it in there?\n    // Is the entire collection in there?\n    b = a.containsAll(LIST);\n    // Lists allow random access, which is cheap\n    // for ArrayList, expensive for LinkedList:\n    s = a.get(1); // Get (typed) object at location 1\n    i = a.indexOf("1"); // Tell index of object\n    b = a.isEmpty(); // Any elements inside?\n    it = a.iterator(); // Ordinary Iterator\n    lit = a.listIterator(); // ListIterator\n    lit = a.listIterator(3); // Start at location 3\n    i = a.lastIndexOf("1"); // Last match\n    a.remove(1); // Remove location 1\n    a.remove("3"); // Remove this object\n    a.set(1, "y"); // Set location 1 to "y"\n    // Keep everything that\'s in the argument\n    // (the intersection of the two sets):\n    a.retainAll(LIST);\n    // Remove everything that\'s in the argument:\n    a.removeAll(LIST);\n    i = a.size(); // How big is it?\n    a.clear(); // Remove all elements\n  }\n  public static void iterMotion(List<String> a) {\n    ListIterator<String> it = a.listIterator();\n    b = it.hasNext();\n    b = it.hasPrevious();\n    s = it.next();\n    i = it.nextIndex();\n    s = it.previous();\n    i = it.previousIndex();\n  }\n  public static void iterManipulation(List<String> a) {\n    ListIterator<String> it = a.listIterator();\n    it.add("47");\n    // Must move to an element after add():\n    it.next();\n    // Remove the element after the new one:\n    it.remove();\n    // Must move to an element after remove():\n    it.next();\n    // Change the element after the deleted one:\n    it.set("47");\n  }\n  public static void testVisual(List<String> a) {\n    System.out.println(a);\n    List<String> b = LIST;\n    System.out.println("b = " + b);\n    a.addAll(b);\n    a.addAll(b);\n    System.out.println(a);\n    // Insert, remove, and replace elements\n    // using a ListIterator:\n    ListIterator<String> x =\n      a.listIterator(a.size()/2);\n    x.add("one");\n    System.out.println(a);\n    System.out.println(x.next());\n    x.remove();\n    System.out.println(x.next());\n    x.set("47");\n    System.out.println(a);\n    // Traverse the list backwards:\n    x = a.listIterator(a.size());\n    while(x.hasPrevious())\n      System.out.print(x.previous() + " ");\n    System.out.println();\n    System.out.println("testVisual finished");\n  }\n  // There are some things that only LinkedLists can do:\n  public static void testLinkedList() {\n    LinkedList<String> ll = new LinkedList<>();\n    ll.addAll(LIST);\n    System.out.println(ll);\n    // Treat it like a stack, pushing:\n    ll.addFirst("one");\n    ll.addFirst("two");\n    System.out.println(ll);\n    // Like "peeking" at the top of a stack:\n    System.out.println(ll.getFirst());\n    // Like popping a stack:\n    System.out.println(ll.removeFirst());\n    System.out.println(ll.removeFirst());\n    // Treat it like a queue, pulling elements\n    // off the tail end:\n    System.out.println(ll.removeLast());\n    System.out.println(ll);\n  }\n  public static void main(String[] args) {\n    // Make and fill a new list each time:\n    basicTest(new LinkedList<>(LIST));\n    basicTest(new ArrayList<>(LIST));\n    iterMotion(new LinkedList<>(LIST));\n    iterMotion(new ArrayList<>(LIST));\n    iterManipulation(new LinkedList<>(LIST));\n    iterManipulation(new ArrayList<>(LIST));\n    testVisual(new LinkedList<>(LIST));\n    testLinkedList();\n  }\n}\n/* Output:\n[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet]\nb = [AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet]\n[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet,\nAliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet,\nAliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet]\n[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet,\nAliceBlue, AntiqueWhite, Aquamarine, Azure, Beige, one,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet,\nAliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet]\nBisque\nBlack\n[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet,\nAliceBlue, AntiqueWhite, Aquamarine, Azure, Beige, one,\n47, BlanchedAlmond, Blue, BlueViolet, AliceBlue,\nAntiqueWhite, Aquamarine, Azure, Beige, Bisque, Black,\nBlanchedAlmond, Blue, BlueViolet]\nBlueViolet Blue BlanchedAlmond Black Bisque Beige Azure\nAquamarine AntiqueWhite AliceBlue BlueViolet Blue\nBlanchedAlmond 47 one Beige Azure Aquamarine\nAntiqueWhite AliceBlue BlueViolet Blue BlanchedAlmond\nBlack Bisque Beige Azure Aquamarine AntiqueWhite\nAliceBlue\ntestVisual finished\n[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue, BlueViolet]\n[two, one, AliceBlue, AntiqueWhite, Aquamarine, Azure,\nBeige, Bisque, Black, BlanchedAlmond, Blue, BlueViolet]\ntwo\ntwo\none\nBlueViolet\n[AliceBlue, AntiqueWhite, Aquamarine, Azure, Beige,\nBisque, Black, BlanchedAlmond, Blue]\n*/\n')),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"basicTest()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"iterMotion()")," \u4e2d\uff0c\u65b9\u6cd5\u8c03\u7528\u662f\u4e3a\u4e86\u5c55\u793a\u6b63\u786e\u7684\u8bed\u6cd5\uff0c\u5c3d\u7ba1\u83b7\u53d6\u4e86\u8fd4\u56de\u503c\uff0c\u4f46\u4e0d\u4f1a\u4f7f\u7528\u5b83\u3002\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u6839\u672c\u4e0d\u4f1a\u53bb\u83b7\u53d6\u8fd4\u56de\u503c\u3002\u5728\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\u4e4b\u524d\uff0c\u8bf7\u67e5\u770bJDK\u6587\u6863\u4e2d\u8fd9\u4e9b\u65b9\u6cd5\u7684\u5b8c\u6574\u7528\u6cd5\u3002"),(0,r.kt)("h2",{id:"set\u884c\u4e3a"},"Set\u884c\u4e3a"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Set")," \u7684\u4e3b\u8981\u7528\u5904\u662f\u6d4b\u8bd5\u6210\u5458\u8eab\u4efd\uff0c\u4e0d\u8fc7\u4e5f\u53ef\u4ee5\u5c06\u5176\u7528\u4f5c\u5220\u9664\u91cd\u590d\u5143\u7d20\u7684\u5de5\u5177\u3002\u5982\u679c\u4e0d\u5173\u5fc3\u5143\u7d20\u987a\u5e8f\u6216\u5e76\u53d1\u6027\uff0c ",(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u603b\u662f\u6700\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u662f\u4e13\u95e8\u4e3a\u4e86\u5feb\u901f\u67e5\u627e\u800c\u8bbe\u8ba1\u7684\uff08\u8fd9\u91cc\u4f7f\u7528\u4e86\u5728",(0,r.kt)("a",{parentName:"p",href:"./Appendix-Understanding-equals-and-hashCode"},"\u9644\u5f55\uff1a\u7406\u89e3equals\u548chashCode\u65b9\u6cd5"),"\u7ae0\u8282\u4e2d\u63a2\u8ba8\u7684\u6563\u5217\u51fd\u6570\uff09\u3002"),(0,r.kt)("p",null,"\u5176\u5b83\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u5b9e\u73b0\u4ea7\u751f\u4e0d\u540c\u7684\u6392\u5e8f\u884c\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/SetOrder.java\nimport java.util.*;\nimport onjava.HTMLColors;\n\npublic class SetOrder {\n  static String[] sets = {\n    "java.util.HashSet",\n    "java.util.TreeSet",\n    "java.util.concurrent.ConcurrentSkipListSet",\n    "java.util.LinkedHashSet",\n    "java.util.concurrent.CopyOnWriteArraySet",\n  };\n  static final List<String> RLIST =\n    new ArrayList<>(HTMLColors.LIST);\n  static {\n    Collections.reverse(RLIST);\n  }\n  public static void\n  main(String[] args) throws Exception {\n    for(String type: sets) {\n      System.out.format("[-> %s <-]%n",\n        type.substring(type.lastIndexOf(\'.\') + 1));\n      @SuppressWarnings("unchecked")\n      Set<String> set = (Set<String>)\n        Class.forName(type).newInstance();\n      set.addAll(RLIST);\n      set.stream()\n        .limit(10)\n        .forEach(System.out::println);\n    }\n  }\n}\n/* Output:\n[-> HashSet <-]\nMediumOrchid\nPaleGoldenRod\nSienna\nLightSlateGray\nDarkSeaGreen\nBlack\nGainsboro\nOrange\nLightCoral\nDodgerBlue\n[-> TreeSet <-]\nAliceBlue\nAntiqueWhite\nAquamarine\nAzure\nBeige\nBisque\nBlack\nBlanchedAlmond\nBlue\nBlueViolet\n[-> ConcurrentSkipListSet <-]\nAliceBlue\nAntiqueWhite\nAquamarine\nAzure\nBeige\nBisque\nBlack\nBlanchedAlmond\nBlue\nBlueViolet\n[-> LinkedHashSet <-]\nYellowGreen\nYellow\nWhiteSmoke\nWhite\nWheat\nViolet\nTurquoise\nTomato\nThistle\nTeal\n[-> CopyOnWriteArraySet <-]\nYellowGreen\nYellow\nWhiteSmoke\nWhite\nWheat\nViolet\nTurquoise\nTomato\nThistle\nTeal\n*/\n')),(0,r.kt)("p",null,"\u8fd9\u91cc\u9700\u8981\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"@SuppressWarnings(\u201cunchecked\u201d)")," \uff0c\u56e0\u4e3a\u8fd9\u91cc\u5c06\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"String")," \uff08\u53ef\u80fd\u662f\u4efb\u4f55\u4e1c\u897f\uff09\u4f20\u9012\u7ed9\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"Class.forName(type).newInstance()")," \u3002\u7f16\u8bd1\u5668\u5e76\u4e0d\u80fd\u4fdd\u8bc1\u8fd9\u662f\u4e00\u6b21\u6210\u529f\u7684\u64cd\u4f5c\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"RLIST")," \u662f ",(0,r.kt)("strong",{parentName:"p"},"HTMLColors.LIST")," \u7684\u53cd\u8f6c\u7248\u672c\u3002\u56e0\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"Collections.reverse()")," \u662f\u901a\u8fc7\u4fee\u6539\u53c2\u6570\u6765\u6267\u884c\u53cd\u5411\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u8fd4\u56de\u5305\u542b\u53cd\u5411\u5143\u7d20\u7684\u65b0 ",(0,r.kt)("strong",{parentName:"p"},"List")," \uff0c\u6240\u4ee5\u8be5\u8c03\u7528\u5728 ",(0,r.kt)("strong",{parentName:"p"},"static")," \u5757\u5185\u6267\u884c\u3002  ",(0,r.kt)("strong",{parentName:"p"},"RLIST")," \u53ef\u4ee5\u9632\u6b62\u6211\u4eec\u610f\u5916\u5730\u8ba4\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u5bf9\u5176\u7ed3\u679c\u8fdb\u884c\u4e86\u6392\u5e8f\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u7684\u8f93\u51fa\u7ed3\u679c\u4f3c\u4e4e\u6ca1\u6709\u53ef\u8fa8\u522b\u7684\u987a\u5e8f\uff0c\u56e0\u4e3a\u5b83\u662f\u57fa\u4e8e\u6563\u5217\u51fd\u6570\u7684\u3002 ",(0,r.kt)("strong",{parentName:"p"},"TreeSet")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"ConcurrentSkipListSet")," \u90fd\u5bf9\u5b83\u4eec\u7684\u5143\u7d20\u8fdb\u884c\u4e86\u6392\u5e8f\uff0c\u5b83\u4eec\u90fd\u5b9e\u73b0\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"SortedSet")," \u63a5\u53e3\u6765\u6807\u8bc6\u8fd9\u4e2a\u7279\u70b9\u3002\u56e0\u4e3a\u5b9e\u73b0\u8be5\u63a5\u53e3\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u6309\u987a\u5e8f\u6392\u5217\uff0c\u6240\u4ee5\u8be5\u63a5\u53e3\u8fd8\u6709\u4e00\u4e9b\u5176\u4ed6\u7684\u53ef\u7528\u64cd\u4f5c\u3002 ",(0,r.kt)("strong",{parentName:"p"},"LinkedHashSet")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"CopyOnWriteArraySet")," \u5c3d\u7ba1\u6ca1\u6709\u7528\u4e8e\u6807\u8bc6\u7684\u63a5\u53e3\uff0c\u4f46\u5b83\u4eec\u8fd8\u662f\u4fdd\u7559\u4e86\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ConcurrentSkipListSet")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"CopyOnWriteArraySet")," \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002"),(0,r.kt)("p",null,"\u5728\u9644\u5f55\u7684\u6700\u540e\uff0c\u6211\u4eec\u5c06\u4e86\u89e3\u5728\u975e ",(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u5b9e\u73b0\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u4e0a\u6dfb\u52a0\u989d\u5916\u6392\u5e8f\u7684\u6027\u80fd\u6210\u672c\uff0c\u4ee5\u53ca\u4e0d\u540c\u5b9e\u73b0\u4e2d\u7684\u4efb\u4f55\u5176\u4ed6\u529f\u80fd\u7684\u6210\u672c\u3002"),(0,r.kt)("h2",{id:"\u5728map\u4e2d\u4f7f\u7528\u51fd\u6570\u5f0f\u64cd\u4f5c"},"\u5728Map\u4e2d\u4f7f\u7528\u51fd\u6570\u5f0f\u64cd\u4f5c"),(0,r.kt)("p",null,"\u4e0e ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u63a5\u53e3\u4e00\u6837\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"forEach()")," \u4e5f\u5185\u7f6e\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u63a5\u53e3\u4e2d\u3002\u4f46\u662f\u5982\u679c\u60f3\u8981\u6267\u884c\u4efb\u4f55\u5176\u4ed6\u7684\u57fa\u672c\u529f\u80fd\u64cd\u4f5c\uff0c\u6bd4\u5982 ",(0,r.kt)("inlineCode",{parentName:"p"},"map()")," \uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"flatMap()")," \uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"reduce()")," \u6216 ",(0,r.kt)("inlineCode",{parentName:"p"},"filter()")," \u65f6\uff0c\u8be5\u600e\u4e48\u529e\uff1f \u67e5\u770b ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u63a5\u53e3\u53d1\u73b0\u5e76\u6ca1\u6709\u8fd9\u4e9b\u3002"),(0,r.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"entrySet()")," \u8fde\u63a5\u5230\u8fd9\u4e9b\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u4f1a\u751f\u6210\u4e00\u4e2a\u7531 ",(0,r.kt)("strong",{parentName:"p"},"Map.Entry")," \u5bf9\u8c61\u7ec4\u6210\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u3002\u8fd9\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u5305\u542b ",(0,r.kt)("inlineCode",{parentName:"p"},"stream()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"parallelStream()")," \u65b9\u6cd5\u3002\u53ea\u9700\u8981\u8bb0\u4f4f\u4e00\u4ef6\u4e8b\uff0c\u8fd9\u91cc\u6b63\u5728\u4f7f\u7528\u7684\u662f ",(0,r.kt)("strong",{parentName:"p"},"Map.Entry")," \u5bf9\u8c61\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/FunctionalMap.java\n// Functional operations on a Map\nimport java.util.*;\nimport java.util.stream.*;\nimport java.util.concurrent.*;\nimport static onjava.HTMLColors.*;\n\npublic class FunctionalMap {\n  public static void main(String[] args) {\n    MAP.entrySet().stream()\n      .map(Map.Entry::getValue)\n      .filter(v -> v.startsWith("Dark"))\n      .map(v -> v.replaceFirst("Dark", "Hot"))\n      .forEach(System.out::println);\n  }\n}\n/* Output:\nHotBlue\nHotCyan\nHotGoldenRod\nHotGray\nHotGreen\nHotKhaki\nHotMagenta\nHotOliveGreen\nHotOrange\nHotOrchid\nHotRed\nHotSalmon\nHotSeaGreen\nHotSlateBlue\nHotSlateGray\nHotTurquoise\nHotViolet\n*/\n')),(0,r.kt)("p",null,"\u751f\u6210 ",(0,r.kt)("strong",{parentName:"p"},"Stream")," \u540e\uff0c\u6240\u6709\u7684\u57fa\u672c\u529f\u80fd\u65b9\u6cd5\uff0c\u751a\u81f3\u66f4\u591a\u5c31\u90fd\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002"),(0,r.kt)("h2",{id:"\u9009\u62e9map\u7247\u6bb5"},"\u9009\u62e9Map\u7247\u6bb5"),(0,r.kt)("p",null,"\u7531 ",(0,r.kt)("strong",{parentName:"p"},"TreeMap")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"ConcurrentSkipListMap")," \u5b9e\u73b0\u7684 ",(0,r.kt)("strong",{parentName:"p"},"NavigableMap")," \u63a5\u53e3\u89e3\u51b3\u4e86\u9700\u8981\u9009\u62e9Map\u7247\u6bb5\u7684\u95ee\u9898\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u4f7f\u7528\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"HTMLColors")," \uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/NavMap.java\n// NavigableMap produces pieces of a Map\nimport java.util.*;\nimport java.util.concurrent.*;\nimport static onjava.HTMLColors.*;\n\npublic class NavMap {\n  public static final\n  NavigableMap<Integer,String> COLORS =\n    new ConcurrentSkipListMap<>(MAP);\n  public static void main(String[] args) {\n    show(COLORS.firstEntry());\n    border();\n    show(COLORS.lastEntry());\n    border();\n    NavigableMap<Integer, String> toLime =\n      COLORS.headMap(rgb("Lime"), true);\n    show(toLime);\n    border();\n    show(COLORS.ceilingEntry(rgb("DeepSkyBlue") - 1));\n    border();\n    show(COLORS.floorEntry(rgb("DeepSkyBlue") - 1));\n    border();\n    show(toLime.descendingMap());\n    border();\n    show(COLORS.tailMap(rgb("MistyRose"), true));\n    border();\n    show(COLORS.subMap(\n      rgb("Orchid"), true,\n      rgb("DarkSalmon"), false));\n  }\n}\n/* Output:\n0x000000: Black\n******************************\n0xFFFFFF: White\n******************************\n0x000000: Black\n0x000080: Navy\n0x00008B: DarkBlue\n0x0000CD: MediumBlue\n0x0000FF: Blue\n0x006400: DarkGreen\n0x008000: Green\n0x008080: Teal\n0x008B8B: DarkCyan\n0x00BFFF: DeepSkyBlue\n0x00CED1: DarkTurquoise\n0x00FA9A: MediumSpringGreen\n0x00FF00: Lime\n******************************\n0x00BFFF: DeepSkyBlue\n******************************\n0x008B8B: DarkCyan\n******************************\n0x00FF00: Lime\n0x00FA9A: MediumSpringGreen\n0x00CED1: DarkTurquoise\n0x00BFFF: DeepSkyBlue\n0x008B8B: DarkCyan\n0x008080: Teal\n0x008000: Green\n0x006400: DarkGreen\n0x0000FF: Blue\n0x0000CD: MediumBlue\n0x00008B: DarkBlue\n0x000080: Navy\n0x000000: Black\n******************************\n0xFFE4E1: MistyRose\n0xFFEBCD: BlanchedAlmond\n0xFFEFD5: PapayaWhip\n0xFFF0F5: LavenderBlush\n0xFFF5EE: SeaShell\n0xFFF8DC: Cornsilk\n0xFFFACD: LemonChiffon\n0xFFFAF0: FloralWhite\n0xFFFAFA: Snow\n0xFFFF00: Yellow\n0xFFFFE0: LightYellow\n0xFFFFF0: Ivory\n0xFFFFFF: White\n******************************\n0xDA70D6: Orchid\n0xDAA520: GoldenRod\n0xDB7093: PaleVioletRed\n0xDC143C: Crimson\n0xDCDCDC: Gainsboro\n0xDDA0DD: Plum\n0xDEB887: BurlyWood\n0xE0FFFF: LightCyan\n0xE6E6FA: Lavender\n*/\n')),(0,r.kt)("p",null,"\u5728\u4e3b\u65b9\u6cd5\u4e2d\u53ef\u4ee5\u770b\u5230 ",(0,r.kt)("strong",{parentName:"p"},"NavigableMap")," \u7684\u5404\u79cd\u529f\u80fd\u3002 \u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"NavigableMap")," \u5177\u6709\u952e\u987a\u5e8f\uff0c\u6240\u4ee5\u5b83\u4f7f\u7528\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"firstEntry()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"lastEntry()")," \u7684\u6982\u5ff5\u3002\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"headMap()")," \u4f1a\u751f\u6210\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"NavigableMap")," \uff0c\u5176\u4e2d\u5305\u542b\u4e86\u4ece ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u7684\u5f00\u5934\u5230 ",(0,r.kt)("inlineCode",{parentName:"p"},"headMap()")," \u53c2\u6570\u4e2d\u6240\u6307\u5411\u7684\u4e00\u7ec4\u5143\u7d20\uff0c\u5176\u4e2d ",(0,r.kt)("strong",{parentName:"p"},"boolean")," \u503c\u6307\u793a\u7ed3\u679c\u4e2d\u662f\u5426\u5305\u542b\u8be5\u53c2\u6570\u3002\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"tailMap()")," \u6267\u884c\u4e86\u7c7b\u4f3c\u7684\u64cd\u4f5c\uff0c\u53ea\u4e0d\u8fc7\u662f\u4ece\u53c2\u6570\u5f00\u59cb\u5230 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u7684\u672b\u5c3e\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"subMap()")," \u5219\u5141\u8bb8\u751f\u6210 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u4e2d\u95f4\u7684\u4e00\u90e8\u5206\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ceilingEntry()")," \u4ece\u5f53\u524d\u952e\u503c\u5bf9\u5411\u4e0a\u641c\u7d22\u4e0b\u4e00\u4e2a\u952e\u503c\u5bf9\uff0c",(0,r.kt)("inlineCode",{parentName:"p"},"floorEntry()")," \u5219\u662f\u5411\u4e0b\u641c\u7d22\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"descendingMap()")," \u53cd\u8f6c\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"NavigableMap")," \u7684\u987a\u5e8f\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u9700\u8981\u901a\u8fc7\u5206\u5272 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u6765\u7b80\u5316\u6240\u6b63\u5728\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u5219 ",(0,r.kt)("strong",{parentName:"p"},"NavigableMap")," \u53ef\u4ee5\u505a\u5230\u3002\u5177\u6709\u7c7b\u4f3c\u7684\u529f\u80fd\u7684\u5176\u5b83\u96c6\u5408\u5b9e\u73b0\u4e5f\u53ef\u4ee5\u7528\u6765\u5e2e\u52a9\u89e3\u51b3\u95ee\u9898\u3002"),(0,r.kt)("h2",{id:"\u586b\u5145\u96c6\u5408"},"\u586b\u5145\u96c6\u5408"),(0,r.kt)("p",null,"\u4e0e ",(0,r.kt)("strong",{parentName:"p"},"Arrays")," \u4e00\u6837\uff0c\u8fd9\u91cc\u6709\u4e00\u4e2a\u540d\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Collections")," \u7684\u4f34\u968f\u7c7b\uff08companion class\uff09\uff0c\u5305\u542b\u4e86\u4e00\u4e9b ",(0,r.kt)("strong",{parentName:"p"},"static")," \u7684\u5b9e\u7528\u65b9\u6cd5\uff0c\u5176\u4e2d\u5305\u62ec\u4e00\u4e2a\u540d\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"fill()")," \u7684\u65b9\u6cd5\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"fill()")," \u53ea\u590d\u5236\u6574\u4e2a\u96c6\u5408\u4e2d\u7684\u5355\u4e2a\u5bf9\u8c61\u5f15\u7528\u3002\u6b64\u5916\uff0c\u5b83\u4ec5\u9002\u7528\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"List")," \u5bf9\u8c61\uff0c\u4f46\u7ed3\u679c\u5217\u8868\u53ef\u4ee5\u4f20\u9012\u7ed9\u6784\u9020\u65b9\u6cd5\u6216 ",(0,r.kt)("inlineCode",{parentName:"p"},"addAll()")," \u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/FillingLists.java\n// Collections.fill() & Collections.nCopies()\nimport java.util.*;\n\nclass StringAddress {\n  private String s;\n  StringAddress(String s) { this.s = s; }\n  @Override\n  public String toString() {\n    return super.toString() + " " + s;\n  }\n}\n\npublic class FillingLists {\n  public static void main(String[] args) {\n    List<StringAddress> list = new ArrayList<>(\n      Collections.nCopies(4,\n        new StringAddress("Hello")));\n    System.out.println(list);\n    Collections.fill(list,\n      new StringAddress("World!"));\n    System.out.println(list);\n  }\n}\n/* Output:\n[StringAddress@15db9742 Hello, StringAddress@15db9742\nHello, StringAddress@15db9742 Hello,\nStringAddress@15db9742 Hello]\n[StringAddress@6d06d69c World!, StringAddress@6d06d69c\nWorld!, StringAddress@6d06d69c World!,\nStringAddress@6d06d69c World!]\n*/\n')),(0,r.kt)("p",null,"\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u4e24\u79cd\u4f7f\u7528\u5bf9\u5355\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528\u6765\u586b\u5145 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u7684\u65b9\u6cd5\u3002 \u7b2c\u4e00\u4e2a\uff1a ",(0,r.kt)("inlineCode",{parentName:"p"},"Collections.nCopies()")," \uff0c\u521b\u5efa\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"List"),"\uff0c\u5e76\u4f20\u9012\u7ed9 ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \u7684\u6784\u9020\u65b9\u6cd5\uff0c\u8fdb\u800c\u586b\u5145\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"StringAddress")," \u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"toString()")," \u65b9\u6cd5\u8c03\u7528\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"Object.toString()")," \uff0c\u5b83\u5148\u751f\u6210\u7c7b\u540d\uff0c\u540e\u8ddf\u7740\u5bf9\u8c61\u7684\u54c8\u5e0c\u7801\u7684\u65e0\u7b26\u53f7\u5341\u516d\u8fdb\u5236\u8868\u793a\uff08\u54c8\u5e0c\u5417\u7531 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u65b9\u6cd5\u751f\u6210\uff09\u3002 \u8f93\u51fa\u663e\u793a\u6240\u6709\u7684\u5f15\u7528\u90fd\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61\u3002\u8c03\u7528\u7b2c\u4e8c\u4e2a\u65b9\u6cd5 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collections.fill()")," \u540e\u4e5f\u662f\u5982\u6b64\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"fill()")," \u65b9\u6cd5\u7684\u7528\u5904\u975e\u5e38\u6709\u9650\uff0c\u5b83\u53ea\u80fd\u66ff\u6362 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u4e2d\u5df2\u6709\u7684\u5143\u7d20,\u800c\u4e14\u4e0d\u4f1a\u6dfb\u52a0\u65b0\u5143\u7d20\uff0c"),(0,r.kt)("h3",{id:"\u4f7f\u7528-suppliers-\u586b\u5145\u96c6\u5408"},"\u4f7f\u7528 Suppliers \u586b\u5145\u96c6\u5408"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"./Generics"},"\u7b2c\u4e8c\u5341\u7ae0 \u6cdb\u578b"),"\u7ae0\u8282\u4e2d\u4ecb\u7ecd\u7684 ",(0,r.kt)("strong",{parentName:"p"},"onjava.Suppliers")," \u7c7b\u4e3a\u586b\u5145\u96c6\u5408\u63d0\u4f9b\u4e86\u901a\u7528\u89e3\u51b3\u65b9\u6848\u3002 \u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Suppliers")," \u521d\u59cb\u5316\u51e0\u79cd\u4e0d\u540c\u7c7b\u578b\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u7684\u793a\u4f8b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/SuppliersCollectionTest.java\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport onjava.*;\n\nclass Government implements Supplier<String> {\n  static String[] foundation = (\n    "strange women lying in ponds " +\n    "distributing swords is no basis " +\n    "for a system of government").split(" ");\n  private int index;\n  @Override\n  public String get() {\n    return foundation[index++];\n  }\n}\n\npublic class SuppliersCollectionTest {\n  public static void main(String[] args) {\n    // Suppliers class from the Generics chapter:\n    Set<String> set = Suppliers.create(\n      LinkedHashSet::new, new Government(), 15);\n    System.out.println(set);\n    List<String> list = Suppliers.create(\n      LinkedList::new, new Government(), 15);\n    System.out.println(list);\n    list = new ArrayList<>();\n    Suppliers.fill(list, new Government(), 15);\n    System.out.println(list);\n\n    // Or we can use Streams:\n    set = Arrays.stream(Government.foundation)\n      .collect(Collectors.toSet());\n    System.out.println(set);\n    list = Arrays.stream(Government.foundation)\n      .collect(Collectors.toList());\n    System.out.println(list);\n    list = Arrays.stream(Government.foundation)\n      .collect(Collectors\n        .toCollection(LinkedList::new));\n    System.out.println(list);\n    set = Arrays.stream(Government.foundation)\n      .collect(Collectors\n        .toCollection(LinkedHashSet::new));\n    System.out.println(set);\n  }\n}\n/* Output:\n[strange, women, lying, in, ponds, distributing,\nswords, is, no, basis, for, a, system, of, government]\n[strange, women, lying, in, ponds, distributing,\nswords, is, no, basis, for, a, system, of, government]\n[strange, women, lying, in, ponds, distributing,\nswords, is, no, basis, for, a, system, of, government]\n[ponds, no, a, in, swords, for, is, basis, strange,\nsystem, government, distributing, of, women, lying]\n[strange, women, lying, in, ponds, distributing,\nswords, is, no, basis, for, a, system, of, government]\n[strange, women, lying, in, ponds, distributing,\nswords, is, no, basis, for, a, system, of, government]\n[strange, women, lying, in, ponds, distributing,\nswords, is, no, basis, for, a, system, of, government]\n*/\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"LinkedHashSet")," \u4e2d\u7684\u7684\u5143\u7d20\u6309\u63d2\u5165\u987a\u5e8f\u6392\u5217\uff0c\u56e0\u4e3a\u5b83\u7ef4\u62a4\u4e00\u4e2a\u94fe\u8868\u6765\u4fdd\u5b58\u8be5\u987a\u5e8f\u3002"),(0,r.kt)("p",null,"\u4f46\u662f\u8bf7\u6ce8\u610f\u793a\u4f8b\u7684\u7b2c\u4e8c\u90e8\u5206\uff1a\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u90fd\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Stream")," \u6765\u521b\u5efa\u548c\u586b\u5145 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u3002\u5728\u672c\u4f8b\u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Stream")," \u7248\u672c\u4e0d\u9700\u8981\u58f0\u660e ",(0,r.kt)("strong",{parentName:"p"},"Supplier")," \u6240\u60f3\u8981\u521b\u5efa\u7684\u5143\u7d20\u6570\u91cf;\uff0c\u5b83\u76f4\u63a5\u5438\u6536\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Stream")," \u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002"),(0,r.kt)("p",null,"\u5c3d\u53ef\u80fd\u4f18\u5148\u9009\u62e9 ",(0,r.kt)("strong",{parentName:"p"},"Stream")," \u6765\u89e3\u51b3\u95ee\u9898\u3002"),(0,r.kt)("h3",{id:"map-suppliers"},"Map Suppliers"),(0,r.kt)("p",null,"\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Supplier")," \u6765\u586b\u5145 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u65f6\u9700\u8981\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Pair")," \u7c7b\uff0c\u56e0\u4e3a\u6bcf\u6b21\u8c03\u7528\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Supplier")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u65b9\u6cd5\u65f6\uff0c\u90fd\u5fc5\u987b\u751f\u6210\u4e00\u5bf9\u5bf9\u8c61\uff08\u4e00\u4e2a\u952e\u548c\u4e00\u4e2a\u503c\uff09\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// onjava/Pair.java\npackage onjava;\n\npublic class Pair<K, V> {\n  public final K key;\n  public final V value;\n  public Pair(K k, V v) {\n    key = k;\n    value = v;\n  }\n  public K key() { return key; }\n  public V value() { return value; }\n  public static <K,V> Pair<K, V> make(K k, V v) {\n    return new Pair<K,V>(k, v);\n  }\n}\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Pair")," \u662f\u4e00\u4e2a\u53ea\u8bfb\u7684 ",(0,r.kt)("em",{parentName:"p"},"\u6570\u636e\u4f20\u8f93\u5bf9\u8c61")," \uff08Data Transfer Object\uff09\u6216 ",(0,r.kt)("em",{parentName:"p"},"\u4fe1\u4f7f")," \uff08Messenger\uff09\u3002 \u8fd9\u4e0e",(0,r.kt)("a",{parentName:"p",href:"./Generics"},"\u7b2c\u4e8c\u5341\u7ae0 \u6cdb\u578b"),"\u7ae0\u8282\u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Tuple2")," \u57fa\u672c\u76f8\u540c\uff0c\u4f46\u540d\u5b57\u66f4\u9002\u5408 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u521d\u59cb\u5316\u3002\u6211\u8fd8\u6dfb\u52a0\u4e86\u9759\u6001\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"make()")," \u65b9\u6cd5\uff0c\u4ee5\u4fbf\u4e3a\u521b\u5efa ",(0,r.kt)("strong",{parentName:"p"},"Pair")," \u5bf9\u8c61\u63d0\u4f9b\u4e00\u4e2a\u66f4\u7b80\u6d01\u7684\u540d\u5b57\u3002"),(0,r.kt)("p",null,"Java 8 \u7684 ",(0,r.kt)("strong",{parentName:"p"},"Stream")," \u63d0\u4f9b\u4e86\u586b\u5145 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u7684\u4fbf\u6377\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/StreamFillMaps.java\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport onjava.*;\n\nclass Letters\nimplements Supplier<Pair<Integer,String>> {\n  private int number = 1;\n  private char letter = \'A\';\n  @Override\n  public Pair<Integer,String> get() {\n    return new Pair<>(number++, "" + letter++);\n  }\n}\n\npublic class StreamFillMaps {\n  public static void main(String[] args) {\n    Map<Integer,String> m =\n      Stream.generate(new Letters())\n      .limit(11)\n      .collect(Collectors\n        .toMap(Pair::key, Pair::value));\n    System.out.println(m);\n\n    // Two separate Suppliers:\n    Rand.String rs = new Rand.String(3);\n    Count.Character cc = new Count.Character();\n    Map<Character,String> mcs = Stream.generate(\n      () -> Pair.make(cc.get(), rs.get()))\n      .limit(8)\n      .collect(Collectors\n        .toMap(Pair::key, Pair::value));\n    System.out.println(mcs);\n\n    // A key Supplier and a single value:\n    Map<Character,String> mcs2 = Stream.generate(\n      () -> Pair.make(cc.get(), "Val"))\n      .limit(8)\n      .collect(Collectors\n        .toMap(Pair::key, Pair::value));\n    System.out.println(mcs2);\n  }\n}\n/* Output:\n{1=A, 2=B, 3=C, 4=D, 5=E, 6=F, 7=G, 8=H, 9=I, 10=J,\n11=K}\n{b=btp, c=enp, d=ccu, e=xsz, f=gvg, g=mei, h=nne,\ni=elo}\n{p=Val, q=Val, j=Val, k=Val, l=Val, m=Val, n=Val,\no=Val}\n*/\n')),(0,r.kt)("p",null,"\u4e0a\u9762\u7684\u793a\u4f8b\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u6a21\u5f0f\uff0c\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u521b\u5efa\u4e00\u4e2a\u81ea\u52a8\u521b\u5efa\u548c\u586b\u5145 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u7684\u5de5\u5177\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// onjava/FillMap.java\npackage onjava;\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\n\npublic class FillMap {\n  public static <K, V> Map<K,V>\n  basic(Supplier<Pair<K,V>> pairGen, int size) {\n    return Stream.generate(pairGen)\n      .limit(size)\n      .collect(Collectors\n        .toMap(Pair::key, Pair::value));\n  }\n  public static <K, V> Map<K,V>\n  basic(Supplier<K> keyGen,\n        Supplier<V> valueGen, int size) {\n    return Stream.generate(\n      () -> Pair.make(keyGen.get(), valueGen.get()))\n      .limit(size)\n      .collect(Collectors\n        .toMap(Pair::key, Pair::value));\n  }\n  public static <K, V, M extends Map<K,V>>\n  M create(Supplier<K> keyGen,\n           Supplier<V> valueGen,\n           Supplier<M> mapSupplier, int size) {\n    return Stream.generate( () ->\n      Pair.make(keyGen.get(), valueGen.get()))\n        .limit(size)\n        .collect(Collectors\n          .toMap(Pair::key, Pair::value,\n                 (k, v) -> k, mapSupplier));\n  }\n}\n")),(0,r.kt)("p",null,"basic() \u65b9\u6cd5\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \uff0c\u800c ",(0,r.kt)("inlineCode",{parentName:"p"},"create()")," \u65b9\u6cd5\u5141\u8bb8\u6307\u5b9a\u4e00\u4e2a\u786e\u5207\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u7c7b\u578b\uff0c\u5e76\u8fd4\u56de\u90a3\u4e2a\u786e\u5207\u7684\u7c7b\u578b\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u6d4b\u8bd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// collectiontopics/FillMapTest.java\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.stream.*;\nimport onjava.*;\n\npublic class FillMapTest {\n  public static void main(String[] args) {\n    Map<String,Integer> mcs = FillMap.basic(\n      new Rand.String(4), new Count.Integer(), 7);\n    System.out.println(mcs);\n    HashMap<String,Integer> hashm =\n      FillMap.create(new Rand.String(4),\n        new Count.Integer(), HashMap::new, 7);\n    System.out.println(hashm);\n    LinkedHashMap<String,Integer> linkm =\n      FillMap.create(new Rand.String(4),\n        new Count.Integer(), LinkedHashMap::new, 7);\n    System.out.println(linkm);\n  }\n}\n/* Output:\n{npcc=1, ztdv=6, gvgm=3, btpe=0, einn=4, eelo=5,\nuxsz=2}\n{npcc=1, ztdv=6, gvgm=3, btpe=0, einn=4, eelo=5,\nuxsz=2}\n{btpe=0, npcc=1, uxsz=2, gvgm=3, einn=4, eelo=5,\nztdv=6}\n*/\n")),(0,r.kt)("h2",{id:"\u4f7f\u7528\u4eab\u5143flyweight\u81ea\u5b9a\u4e49collection\u548cmap"},"\u4f7f\u7528\u4eab\u5143\uff08Flyweight\uff09\u81ea\u5b9a\u4e49Collection\u548cMap"),(0,r.kt)("p",null,"\u672c\u8282\u4ecb\u7ecd\u5982\u4f55\u521b\u5efa\u81ea\u5b9a\u4e49 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u5b9e\u73b0\u3002\u6bcf\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"java.util")," \u4e2d\u7684\u96c6\u5408\u90fd\u6709\u81ea\u5df1\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Abstract")," \u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u8be5\u96c6\u5408\u7684\u90e8\u5206\u5b9e\u73b0\uff0c\u56e0\u6b64\u53ea\u9700\u8981\u5b9e\u73b0\u5fc5\u8981\u7684\u65b9\u6cd5\u6765\u751f\u6210\u6240\u9700\u7684\u96c6\u5408\u3002\u4f60\u5c06\u770b\u5230\u901a\u8fc7\u7ee7\u627f ",(0,r.kt)("strong",{parentName:"p"},"java.util.Abstract")," \u7c7b\u6765\u521b\u5efa\u81ea\u5b9a\u4e49 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u662f\u591a\u4e48\u7b80\u5355\u3002\u4f8b\u5982\uff0c\u8981\u521b\u5efa\u4e00\u4e2a\u53ea\u8bfb\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \uff0c\u5219\u53ef\u4ee5\u4ece ",(0,r.kt)("strong",{parentName:"p"},"AbstractSet")," \u7ee7\u627f\u5e76\u5b9e\u73b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"iterator()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"size()")," \u3002\u6700\u540e\u4e00\u4e2a\u793a\u4f8b\u662f\u751f\u6210\u6d4b\u8bd5\u6570\u636e\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u751f\u6210\u7684\u96c6\u5408\u901a\u5e38\u662f\u53ea\u8bfb\u7684\uff0c\u5e76\u4e14\u6240\u63d0\u4f9b\u7684\u65b9\u6cd5\u6700\u5c11\u3002"),(0,r.kt)("p",null,"\u8be5\u89e3\u51b3\u65b9\u6848\u8fd8\u6f14\u793a\u4e86 ",(0,r.kt)("em",{parentName:"p"},"\u4eab\u5143")," \uff08Flyweight\uff09\u8bbe\u8ba1\u6a21\u5f0f\u3002\u5f53\u666e\u901a\u89e3\u51b3\u65b9\u6848\u9700\u8981\u592a\u591a\u5bf9\u8c61\u65f6\uff0c\u6216\u8005\u5f53\u751f\u6210\u666e\u901a\u5bf9\u8c61\u5360\u7528\u592a\u591a\u7a7a\u95f4\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4eab\u5143\u3002\u4eab\u5143\u8bbe\u8ba1\u6a21\u5f0f\u5c06\u5bf9\u8c61\u7684\u4e00\u90e8\u5206\u5916\u90e8\u5316\uff08externalizes\uff09\u3002\u76f8\u6bd4\u4e8e\u628a\u5bf9\u8c61\u7684\u6240\u6709\u5185\u5bb9\u90fd\u5305\u542b\u5728\u5bf9\u8c61\u4e2d\uff0c\u8fd9\u6837\u505a\u4f7f\u5f97\u5bf9\u8c61\u7684\u90e8\u5206\u6216\u8005\u5168\u90e8\u53ef\u4ee5\u5728\u66f4\u6709\u6548\u7684\u5916\u90e8\u8868\u4e2d\u67e5\u627e\uff0c\u6216\u901a\u8fc7\u4e00\u4e9b\u8282\u7701\u7a7a\u95f4\u7684\u5176\u4ed6\u8ba1\u7b97\u751f\u6210\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u53ef\u4ee5\u662f\u4efb\u4f55\u5927\u5c0f\u7684 ",(0,r.kt)("strong",{parentName:"p"},"List")," \uff0c\u5e76\u4e14\uff08\u6709\u6548\u5730\uff09\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Integer")," \u6570\u636e\u8fdb\u884c\u9884\u521d\u59cb\u5316\u3002\u8981\u4ece ",(0,r.kt)("strong",{parentName:"p"},"AbstractList")," \u521b\u5efa\u53ea\u8bfb ",(0,r.kt)("strong",{parentName:"p"},"List")," \uff0c\u5fc5\u987b\u5b9e\u73b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"size()"),"\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// onjava/CountingIntegerList.java\n// List of any length, containing sample data\n// {java onjava.CountingIntegerList}\npackage onjava;\nimport java.util.*;\n\npublic class CountingIntegerList\nextends AbstractList<Integer> {\n  private int size;\n  public CountingIntegerList() { size = 0; }\n  public CountingIntegerList(int size) {\n    this.size = size < 0 ? 0 : size;\n  }\n  @Override\n  public Integer get(int index) {\n    return index;\n  }\n  @Override\n  public int size() { return size; }\n  public static void main(String[] args) {\n    List<Integer> cil =\n      new CountingIntegerList(30);\n    System.out.println(cil);\n    System.out.println(cil.get(500));\n  }\n}\n/* Output:\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29]\n500\n*/\n")),(0,r.kt)("p",null,"\u53ea\u6709\u5f53\u60f3\u8981\u9650\u5236 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u7684\u957f\u5ea6\u65f6\uff0c ",(0,r.kt)("strong",{parentName:"p"},"size")," \u503c\u624d\u662f\u91cd\u8981\u7684\uff0c\u5c31\u50cf\u5728\u4e3b\u65b9\u6cd5\u4e2d\u90a3\u6837\u3002\u5373\u4f7f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u4e5f\u4f1a\u4ea7\u751f\u4efb\u4f55\u503c\u3002"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u7c7b\u662f\u4eab\u5143\u6a21\u5f0f\u7684\u4e00\u4e2a\u7b80\u6d01\u7684\u4f8b\u5b50\u3002\u5f53\u9700\u8981\u7684\u65f6\u5019\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u201c\u8ba1\u7b97\u201d\u6240\u9700\u7684\u503c\uff0c\u56e0\u6b64\u6ca1\u5fc5\u8981\u5b58\u50a8\u548c\u521d\u59cb\u5316\u5b9e\u9645\u7684\u5e95\u5c42 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u7ed3\u6784\u3002"),(0,r.kt)("p",null,"\u5728\u5927\u591a\u6570\u7a0b\u5e8f\u4e2d\uff0c\u8fd9\u91cc\u6240\u4fdd\u5b58\u7684\u5b58\u50a8\u7ed3\u6784\u6c38\u8fdc\u90fd\u4e0d\u4f1a\u6539\u53d8\u3002\u4f46\u662f\uff0c\u5b83\u5141\u8bb8\u7528\u975e\u5e38\u5927\u7684 ",(0,r.kt)("strong",{parentName:"p"},"index")," \u6765\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"List.get()")," \uff0c\u800c ",(0,r.kt)("strong",{parentName:"p"},"List")," \u5e76\u4e0d\u9700\u8981\u586b\u5145\u5230\u8fd9\u4e48\u5927\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u5728\u7a0b\u5e8f\u4e2d\u5927\u91cf\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"CountingIntegerLists")," \u800c\u65e0\u9700\u62c5\u5fc3\u5b58\u50a8\u95ee\u9898\u3002\u5b9e\u9645\u4e0a\uff0c\u4eab\u5143\u7684\u4e00\u4e2a\u597d\u5904\u662f\u5b83\u5141\u8bb8\u4f7f\u7528\u66f4\u597d\u7684\u62bd\u8c61\u800c\u4e0d\u7528\u62c5\u5fc3\u8d44\u6e90\u3002"),(0,r.kt)("p",null,"\u53ef\u4ee5\u4f7f\u7528\u4eab\u5143\u8bbe\u8ba1\u6a21\u5f0f\u6765\u5b9e\u73b0\u5177\u6709\u4efb\u4f55\u5927\u5c0f\u6570\u636e\u96c6\u7684\u5176\u4ed6\u201c\u521d\u59cb\u5316\u201d\u81ea\u5b9a\u4e49\u96c6\u5408\u3002\u4e0b\u9762\u662f\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Map")," \uff0c\u5b83\u4e3a\u6bcf\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Integer")," \u952e\u4ea7\u751f\u552f\u4e00\u7684\u503c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// onjava/CountMap.java\n// Unlimited-length Map containing sample data\n// {java onjava.CountMap}\npackage onjava;\nimport java.util.*;\nimport java.util.stream.*;\n\npublic class CountMap\nextends AbstractMap<Integer,String> {\n  private int size;\n  private static char[] chars =\n    "ABCDEFGHIJKLMNOPQRSTUVWXYZ".toCharArray();\n  private static String value(int key) {\n    return\n      chars[key % chars.length] +\n      Integer.toString(key / chars.length);\n  }\n  public CountMap(int size) {\n    this.size = size < 0 ? 0 : size;\n  }\n  @Override\n  public String get(Object key) {\n    return value((Integer)key);\n  }\n  private static class Entry\n  implements Map.Entry<Integer,String> {\n    int index;\n    Entry(int index) { this.index = index; }\n    @Override\n    public boolean equals(Object o) {\n      return o instanceof Entry &&\n        Objects.equals(index, ((Entry)o).index);\n    }\n    @Override\n    public Integer getKey() { return index; }\n    @Override\n    public String getValue() {\n      return value(index);\n    }\n    @Override\n    public String setValue(String value) {\n      throw new UnsupportedOperationException();\n    }\n    @Override\n    public int hashCode() {\n      return Objects.hashCode(index);\n    }\n  }\n  @Override\n  public Set<Map.Entry<Integer,String>> entrySet() {\n    // LinkedHashSet retains initialization order:\n    return IntStream.range(0, size)\n      .mapToObj(Entry::new)\n      .collect(Collectors\n        .toCollection(LinkedHashSet::new));\n  }\n  public static void main(String[] args) {\n    final int size = 6;\n    CountMap cm = new CountMap(60);\n    System.out.println(cm);\n    System.out.println(cm.get(500));\n    cm.values().stream()\n      .limit(size)\n      .forEach(System.out::println);\n    System.out.println();\n    new Random(47).ints(size, 0, 1000)\n      .mapToObj(cm::get)\n      .forEach(System.out::println);\n  }\n}\n/* Output:\n{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0,\n9=J0, 10=K0, 11=L0, 12=M0, 13=N0, 14=O0, 15=P0, 16=Q0,\n17=R0, 18=S0, 19=T0, 20=U0, 21=V0, 22=W0, 23=X0, 24=Y0,\n25=Z0, 26=A1, 27=B1, 28=C1, 29=D1, 30=E1, 31=F1, 32=G1,\n33=H1, 34=I1, 35=J1, 36=K1, 37=L1, 38=M1, 39=N1, 40=O1,\n41=P1, 42=Q1, 43=R1, 44=S1, 45=T1, 46=U1, 47=V1, 48=W1,\n49=X1, 50=Y1, 51=Z1, 52=A2, 53=B2, 54=C2, 55=D2, 56=E2,\n57=F2, 58=G2, 59=H2}\nG19\nA0\nB0\nC0\nD0\nE0\nF0\n\nY9\nJ21\nR26\nD33\nZ36\nN16\n*/\n')),(0,r.kt)("p",null,"\u8981\u521b\u5efa\u4e00\u4e2a\u53ea\u8bfb\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \uff0c\u5219\u4ece ",(0,r.kt)("strong",{parentName:"p"},"AbstractMap")," \u7ee7\u627f\u5e76\u5b9e\u73b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"entrySet()")," \u3002\u79c1\u6709\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"value()")," \u65b9\u6cd5\u8ba1\u7b97\u4efb\u4f55\u952e\u7684\u503c\uff0c\u5e76\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"Entry.getValue()")," \u4e2d\u4f7f\u7528\u3002\u53ef\u4ee5\u5ffd\u7565 ",(0,r.kt)("strong",{parentName:"p"},"CountMap")," \u7684\u5927\u5c0f\u3002"),(0,r.kt)("p",null,"\u8fd9\u91cc\u662f\u4f7f\u7528\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"LinkedHashSet")," \u800c\u4e0d\u662f\u521b\u5efa\u81ea\u5b9a\u4e49 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u7c7b\uff0c\u56e0\u6b64\u5e76\u672a\u5b8c\u5168\u5b9e\u73b0\u4eab\u5143\u3002\u53ea\u6709\u5728\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"entrySet()")," \u65f6\u624d\u4f1a\u751f\u6210\u6b64\u5bf9\u8c61\u3002"),(0,r.kt)("p",null,"\u73b0\u5728\u521b\u5efa\u4e00\u4e2a\u66f4\u590d\u6742\u7684\u4eab\u5143\u3002\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u7684\u6570\u636e\u96c6\u662f\u4e16\u754c\u5404\u56fd\u53ca\u5176\u9996\u90fd\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"capitals()")," \u65b9\u6cd5\u751f\u6210\u4e00\u4e2a\u56fd\u5bb6\u548c\u9996\u90fd\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"names()")," \u65b9\u6cd5\u751f\u6210\u4e00\u4e2a\u7531\u56fd\u5bb6\u540d\u5b57\u7ec4\u6210\u7684 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u3002 \u5f53\u7ed9\u5b9a\u4e86\u8868\u793a\u6240\u9700\u5927\u5c0f\u7684 ",(0,r.kt)("strong",{parentName:"p"},"int")," \u53c2\u6570\u65f6\uff0c\u4e24\u79cd\u65b9\u6cd5\u90fd\u751f\u6210\u5bf9\u5e94\u5927\u5c0f\u7684\u5217\u8868\u7247\u6bb5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// onjava/Countries.java\n// "Flyweight" Maps and Lists of sample data\n// {java onjava.Countries}\npackage onjava;\nimport java.util.*;\n\npublic class Countries {\n  public static final String[][] DATA = {\n    // Africa\n    {"ALGERIA","Algiers"},\n    {"ANGOLA","Luanda"},\n    {"BENIN","Porto-Novo"},\n    {"BOTSWANA","Gaberone"},\n    {"BURKINA FASO","Ouagadougou"},\n    {"BURUNDI","Bujumbura"},\n    {"CAMEROON","Yaounde"},\n    {"CAPE VERDE","Praia"},\n    {"CENTRAL AFRICAN REPUBLIC","Bangui"},\n    {"CHAD","N\'djamena"},\n    {"COMOROS","Moroni"},\n    {"CONGO","Brazzaville"},\n    {"DJIBOUTI","Dijibouti"},\n    {"EGYPT","Cairo"},\n    {"EQUATORIAL GUINEA","Malabo"},\n    {"ERITREA","Asmara"},\n    {"ETHIOPIA","Addis Ababa"},\n    {"GABON","Libreville"},\n    {"THE GAMBIA","Banjul"},\n    {"GHANA","Accra"},\n    {"GUINEA","Conakry"},\n    {"BISSAU","Bissau"},\n    {"COTE D\'IVOIR (IVORY COAST)","Yamoussoukro"},\n    {"KENYA","Nairobi"},\n    {"LESOTHO","Maseru"},\n    {"LIBERIA","Monrovia"},\n    {"LIBYA","Tripoli"},\n    {"MADAGASCAR","Antananarivo"},\n    {"MALAWI","Lilongwe"},\n    {"MALI","Bamako"},\n    {"MAURITANIA","Nouakchott"},\n    {"MAURITIUS","Port Louis"},\n    {"MOROCCO","Rabat"},\n    {"MOZAMBIQUE","Maputo"},\n    {"NAMIBIA","Windhoek"},\n    {"NIGER","Niamey"},\n    {"NIGERIA","Abuja"},\n    {"RWANDA","Kigali"},\n    {"SAO TOME E PRINCIPE","Sao Tome"},\n    {"SENEGAL","Dakar"},\n    {"SEYCHELLES","Victoria"},\n    {"SIERRA LEONE","Freetown"},\n    {"SOMALIA","Mogadishu"},\n    {"SOUTH AFRICA","Pretoria/Cape Town"},\n    {"SUDAN","Khartoum"},\n    {"SWAZILAND","Mbabane"},\n    {"TANZANIA","Dodoma"},\n    {"TOGO","Lome"},\n    {"TUNISIA","Tunis"},\n    {"UGANDA","Kampala"},\n    {"DEMOCRATIC REPUBLIC OF THE CONGO (ZAIRE)",\n     "Kinshasa"},\n    {"ZAMBIA","Lusaka"},\n    {"ZIMBABWE","Harare"},\n    // Asia\n    {"AFGHANISTAN","Kabul"},\n    {"BAHRAIN","Manama"},\n    {"BANGLADESH","Dhaka"},\n    {"BHUTAN","Thimphu"},\n    {"BRUNEI","Bandar Seri Begawan"},\n    {"CAMBODIA","Phnom Penh"},\n    {"CHINA","Beijing"},\n    {"CYPRUS","Nicosia"},\n    {"INDIA","New Delhi"},\n    {"INDONESIA","Jakarta"},\n    {"IRAN","Tehran"},\n    {"IRAQ","Baghdad"},\n    {"ISRAEL","Jerusalem"},\n    {"JAPAN","Tokyo"},\n    {"JORDAN","Amman"},\n    {"KUWAIT","Kuwait City"},\n    {"LAOS","Vientiane"},\n    {"LEBANON","Beirut"},\n    {"MALAYSIA","Kuala Lumpur"},\n    {"THE MALDIVES","Male"},\n    {"MONGOLIA","Ulan Bator"},\n    {"MYANMAR (BURMA)","Rangoon"},\n    {"NEPAL","Katmandu"},\n    {"NORTH KOREA","P\'yongyang"},\n    {"OMAN","Muscat"},\n    {"PAKISTAN","Islamabad"},\n    {"PHILIPPINES","Manila"},\n    {"QATAR","Doha"},\n    {"SAUDI ARABIA","Riyadh"},\n    {"SINGAPORE","Singapore"},\n    {"SOUTH KOREA","Seoul"},\n    {"SRI LANKA","Colombo"},\n    {"SYRIA","Damascus"},\n    {"TAIWAN (REPUBLIC OF CHINA)","Taipei"},\n    {"THAILAND","Bangkok"},\n    {"TURKEY","Ankara"},\n    {"UNITED ARAB EMIRATES","Abu Dhabi"},\n    {"VIETNAM","Hanoi"},\n    {"YEMEN","Sana\'a"},\n    // Australia and Oceania\n    {"AUSTRALIA","Canberra"},\n    {"FIJI","Suva"},\n    {"KIRIBATI","Bairiki"},\n    {"MARSHALL ISLANDS","Dalap-Uliga-Darrit"},\n    {"MICRONESIA","Palikir"},\n    {"NAURU","Yaren"},\n    {"NEW ZEALAND","Wellington"},\n    {"PALAU","Koror"},\n    {"PAPUA NEW GUINEA","Port Moresby"},\n    {"SOLOMON ISLANDS","Honaira"},\n    {"TONGA","Nuku\'alofa"},\n    {"TUVALU","Fongafale"},\n    {"VANUATU","Port Vila"},\n    {"WESTERN SAMOA","Apia"},\n    // Eastern Europe and former USSR\n    {"ARMENIA","Yerevan"},\n    {"AZERBAIJAN","Baku"},\n    {"BELARUS (BYELORUSSIA)","Minsk"},\n    {"BULGARIA","Sofia"},\n    {"GEORGIA","Tbilisi"},\n    {"KAZAKSTAN","Almaty"},\n    {"KYRGYZSTAN","Alma-Ata"},\n    {"MOLDOVA","Chisinau"},\n    {"RUSSIA","Moscow"},\n    {"TAJIKISTAN","Dushanbe"},\n    {"TURKMENISTAN","Ashkabad"},\n    {"UKRAINE","Kyiv"},\n    {"UZBEKISTAN","Tashkent"},\n    // Europe\n    {"ALBANIA","Tirana"},\n    {"ANDORRA","Andorra la Vella"},\n    {"AUSTRIA","Vienna"},\n    {"BELGIUM","Brussels"},\n    {"BOSNIA-HERZEGOVINA","Sarajevo"},\n    {"CROATIA","Zagreb"},\n    {"CZECH REPUBLIC","Prague"},\n    {"DENMARK","Copenhagen"},\n    {"ESTONIA","Tallinn"},\n    {"FINLAND","Helsinki"},\n    {"FRANCE","Paris"},\n    {"GERMANY","Berlin"},\n    {"GREECE","Athens"},\n    {"HUNGARY","Budapest"},\n    {"ICELAND","Reykjavik"},\n    {"IRELAND","Dublin"},\n    {"ITALY","Rome"},\n    {"LATVIA","Riga"},\n    {"LIECHTENSTEIN","Vaduz"},\n    {"LITHUANIA","Vilnius"},\n    {"LUXEMBOURG","Luxembourg"},\n    {"MACEDONIA","Skopje"},\n    {"MALTA","Valletta"},\n    {"MONACO","Monaco"},\n    {"MONTENEGRO","Podgorica"},\n    {"THE NETHERLANDS","Amsterdam"},\n    {"NORWAY","Oslo"},\n    {"POLAND","Warsaw"},\n    {"PORTUGAL","Lisbon"},\n    {"ROMANIA","Bucharest"},\n    {"SAN MARINO","San Marino"},\n    {"SERBIA","Belgrade"},\n    {"SLOVAKIA","Bratislava"},\n    {"SLOVENIA","Ljuijana"},\n    {"SPAIN","Madrid"},\n    {"SWEDEN","Stockholm"},\n    {"SWITZERLAND","Berne"},\n    {"UNITED KINGDOM","London"},\n    {"VATICAN CITY","Vatican City"},\n    // North and Central America\n    {"ANTIGUA AND BARBUDA","Saint John\'s"},\n    {"BAHAMAS","Nassau"},\n    {"BARBADOS","Bridgetown"},\n    {"BELIZE","Belmopan"},\n    {"CANADA","Ottawa"},\n    {"COSTA RICA","San Jose"},\n    {"CUBA","Havana"},\n    {"DOMINICA","Roseau"},\n    {"DOMINICAN REPUBLIC","Santo Domingo"},\n    {"EL SALVADOR","San Salvador"},\n    {"GRENADA","Saint George\'s"},\n    {"GUATEMALA","Guatemala City"},\n    {"HAITI","Port-au-Prince"},\n    {"HONDURAS","Tegucigalpa"},\n    {"JAMAICA","Kingston"},\n    {"MEXICO","Mexico City"},\n    {"NICARAGUA","Managua"},\n    {"PANAMA","Panama City"},\n    {"ST. KITTS AND NEVIS","Basseterre"},\n    {"ST. LUCIA","Castries"},\n    {"ST. VINCENT AND THE GRENADINES","Kingstown"},\n    {"UNITED STATES OF AMERICA","Washington, D.C."},\n    // South America\n    {"ARGENTINA","Buenos Aires"},\n    {"BOLIVIA","Sucre (legal)/La Paz(administrative)"},\n    {"BRAZIL","Brasilia"},\n    {"CHILE","Santiago"},\n    {"COLOMBIA","Bogota"},\n    {"ECUADOR","Quito"},\n    {"GUYANA","Georgetown"},\n    {"PARAGUAY","Asuncion"},\n    {"PERU","Lima"},\n    {"SURINAME","Paramaribo"},\n    {"TRINIDAD AND TOBAGO","Port of Spain"},\n    {"URUGUAY","Montevideo"},\n    {"VENEZUELA","Caracas"},\n  };\n  // Use AbstractMap by implementing entrySet()\n  private static class FlyweightMap\n  extends AbstractMap<String,String> {\n    private static class Entry\n    implements Map.Entry<String,String> {\n      int index;\n      Entry(int index) { this.index = index; }\n      @Override\n      public boolean equals(Object o) {\n        return o instanceof FlyweightMap &&\n          Objects.equals(DATA[index][0], o);\n      }\n      @Override\n      public int hashCode() {\n        return Objects.hashCode(DATA[index][0]);\n      }\n      @Override\n      public String getKey() { return DATA[index][0]; }\n      @Override\n      public String getValue() {\n        return DATA[index][1];\n      }\n      @Override\n      public String setValue(String value) {\n        throw new UnsupportedOperationException();\n      }\n    }\n    // Implement size() & iterator() for AbstractSet:\n    static class EntrySet\n    extends AbstractSet<Map.Entry<String,String>> {\n      private int size;\n      EntrySet(int size) {\n        if(size < 0)\n          this.size = 0;\n        // Can\'t be any bigger than the array:\n        else if(size > DATA.length)\n          this.size = DATA.length;\n        else\n          this.size = size;\n      }\n      @Override\n      public int size() { return size; }\n      private class Iter\n      implements Iterator<Map.Entry<String,String>> {\n        // Only one Entry object per Iterator:\n        private Entry entry = new Entry(-1);\n        @Override\n        public boolean hasNext() {\n          return entry.index < size - 1;\n        }\n        @Override\n        public Map.Entry<String,String> next() {\n          entry.index++;\n          return entry;\n        }\n        @Override\n        public void remove() {\n          throw new UnsupportedOperationException();\n        }\n      }\n      @Override\n      public\n      Iterator<Map.Entry<String,String>> iterator() {\n        return new Iter();\n      }\n    }\n    private static\n    Set<Map.Entry<String,String>> entries =\n      new EntrySet(DATA.length);\n    @Override\n    public Set<Map.Entry<String,String>> entrySet() {\n      return entries;\n    }\n  }\n  // Create a partial map of \'size\' countries:\n  static Map<String,String> select(final int size) {\n    return new FlyweightMap() {\n      @Override\n      public Set<Map.Entry<String,String>> entrySet() {\n        return new EntrySet(size);\n      }\n    };\n  }\n  static Map<String,String> map = new FlyweightMap();\n  public static Map<String,String> capitals() {\n    return map; // The entire map\n  }\n  public static Map<String,String> capitals(int size) {\n    return select(size); // A partial map\n  }\n  static List<String> names =\n    new ArrayList<>(map.keySet());\n  // All the names:\n  public static List<String> names() { return names; }\n  // A partial list:\n  public static List<String> names(int size) {\n    return new ArrayList<>(select(size).keySet());\n  }\n  public static void main(String[] args) {\n    System.out.println(capitals(10));\n    System.out.println(names(10));\n    System.out.println(new HashMap<>(capitals(3)));\n    System.out.println(\n      new LinkedHashMap<>(capitals(3)));\n    System.out.println(new TreeMap<>(capitals(3)));\n    System.out.println(new Hashtable<>(capitals(3)));\n    System.out.println(new HashSet<>(names(6)));\n    System.out.println(new LinkedHashSet<>(names(6)));\n    System.out.println(new TreeSet<>(names(6)));\n    System.out.println(new ArrayList<>(names(6)));\n    System.out.println(new LinkedList<>(names(6)));\n    System.out.println(capitals().get("BRAZIL"));\n  }\n}\n/* Output:\n{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo,\nBOTSWANA=Gaberone, BURKINA FASO=Ouagadougou,\nBURUNDI=Bujumbura, CAMEROON=Yaounde, CAPE VERDE=Praia,\nCENTRAL AFRICAN REPUBLIC=Bangui, CHAD=N\'djamena}\n[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,\nBURUNDI, CAMEROON, CAPE VERDE, CENTRAL AFRICAN\nREPUBLIC, CHAD]\n{BENIN=Porto-Novo, ANGOLA=Luanda, ALGERIA=Algiers}\n{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo}\n{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo}\n{ALGERIA=Algiers, ANGOLA=Luanda, BENIN=Porto-Novo}\n[BENIN, BOTSWANA, ANGOLA, BURKINA FASO, ALGERIA,\nBURUNDI]\n[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,\nBURUNDI]\n[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,\nBURUNDI]\n[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,\nBURUNDI]\n[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,\nBURUNDI]\nBrasilia\n*/\n')),(0,r.kt)("p",null,"\u4e8c\u7ef4\u6570\u7ec4 ",(0,r.kt)("strong",{parentName:"p"},"String DATA")," \u662f ",(0,r.kt)("strong",{parentName:"p"},"public")," \u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u5728\u522b\u5904\u4f7f\u7528\u3002 ",(0,r.kt)("strong",{parentName:"p"},"FlyweightMap")," \u5fc5\u987b\u5b9e\u73b0 ",(0,r.kt)("inlineCode",{parentName:"p"},"entrySet()")," \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u9700\u8981\u4e00\u4e2a\u81ea\u5b9a\u4e49 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u5b9e\u73b0\u548c\u4e00\u4e2a\u81ea\u5b9a\u4e49 ",(0,r.kt)("strong",{parentName:"p"},"Map.Entry")," \u7c7b\u3002\u8fd9\u662f\u5b9e\u73b0\u4eab\u5143\u7684\u53e6\u4e00\u79cd\u65b9\u6cd5\uff1a\u6bcf\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Map.Entry")," \u5bf9\u8c61\u5b58\u50a8\u5b83\u81ea\u8eab\u7684\u7d22\u5f15\uff0c\u800c\u4e0d\u662f\u5b9e\u9645\u7684\u952e\u548c\u503c\u3002\u5f53\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"getKey()")," \u6216 ",(0,r.kt)("inlineCode",{parentName:"p"},"getValue()")," \u65f6\uff0c\u5b83\u4f7f\u7528\u7d22\u5f15\u8fd4\u56de\u76f8\u5e94\u7684 ",(0,r.kt)("strong",{parentName:"p"},"DATA")," \u5143\u7d20\u3002 ",(0,r.kt)("strong",{parentName:"p"},"EntrySet")," \u786e\u4fdd\u5b83\u7684 ",(0,r.kt)("strong",{parentName:"p"},"size")," \u4e0d\u5927\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"DATA")," \u3002"),(0,r.kt)("p",null,"\u4eab\u5143\u7684\u53e6\u4e00\u90e8\u5206\u5728 ",(0,r.kt)("strong",{parentName:"p"},"EntrySet.Iterator")," \u4e2d\u5b9e\u73b0\u3002\u76f8\u6bd4\u4e8e\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"DATA")," \u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u5bf9\u521b\u5efa\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Map.Entry")," \u5bf9\u8c61\uff0c\u8fd9\u91cc\u6bcf\u4e2a\u8fed\u4ee3\u5668\u53ea\u6709\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Map.Entry")," \u5bf9\u8c61\u3002 ",(0,r.kt)("strong",{parentName:"p"},"Entry")," \u5bf9\u8c61\u4f5c\u4e3a\u6570\u636e\u7684\u7a97\u53e3\uff0c\u5b83\u53ea\u5305\u542b ",(0,r.kt)("strong",{parentName:"p"},"String")," \u9759\u6001\u6570\u7ec4\u7684\u7d22\u5f15\u3002\u6bcf\u6b21\u4e3a\u8fed\u4ee3\u5668\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"next()")," \u65f6\uff0c",(0,r.kt)("strong",{parentName:"p"},"Entry")," \u4e2d\u7684\u7d22\u5f15\u90fd\u4f1a\u9012\u589e\uff0c\u56e0\u6b64\u5b83\u4f1a\u6307\u5411\u4e0b\u4e00\u4e2a\u6570\u636e\u5bf9\uff0c\u7136\u540e\u4ece ",(0,r.kt)("inlineCode",{parentName:"p"},"next()")," \u8fd4\u56de ",(0,r.kt)("strong",{parentName:"p"},"Iterators")," \u7684\u5355\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Entry")," \u5bf9\u8c61\u3002",(0,r.kt)("sup",{parentName:"p",id:"fnref-1"},(0,r.kt)("a",{parentName:"sup",href:"#fn-1",className:"footnote-ref"},"1"))),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"select()")," \u65b9\u6cd5\u751f\u6210\u4e00\u4e2a\u5305\u542b\u6240\u9700\u5927\u5c0f\u7684 ",(0,r.kt)("strong",{parentName:"p"},"EntrySet")," \u7684 ",(0,r.kt)("strong",{parentName:"p"},"FlyweightMap")," \uff0c\u8fd9\u7528\u4e8e\u5728\u4e3b\u65b9\u6cd5\u4e2d\u6f14\u793a\u7684\u91cd\u8f7d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"capitals()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"names()")," \u65b9\u6cd5\u3002"),(0,r.kt)("h2",{id:"\u96c6\u5408\u529f\u80fd"},"\u96c6\u5408\u529f\u80fd"),(0,r.kt)("p",null,"\u4e0b\u9762\u8fd9\u4e2a\u8868\u683c\u5c55\u793a\u4e86\u53ef\u4ee5\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u6267\u884c\u7684\u6240\u6709\u64cd\u4f5c\uff08\u4e0d\u5305\u62ec\u81ea\u52a8\u7ee7\u627f\u81ea ",(0,r.kt)("strong",{parentName:"p"},"Object")," \u7684\u65b9\u6cd5\uff09\uff0c\u56e0\u6b64\uff0c\u53ef\u4ee5\u7528 ",(0,r.kt)("strong",{parentName:"p"},"List")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"Set")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"Queue")," \u6216 ",(0,r.kt)("strong",{parentName:"p"},"Deque")," \u6267\u884c\u8fd9\u91cc\u7684\u6240\u6709\u64cd\u4f5c\uff08\u8fd9\u4e9b\u63a5\u53e3\u53ef\u80fd\u4e5f\u63d0\u4f9b\u4e86\u4e00\u4e9b\u5176\u4ed6\u7684\u529f\u80fd\uff09\u3002",(0,r.kt)("strong",{parentName:"p"},"Map")," \u4e0d\u662f\u4ece ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u7ee7\u627f\u7684\uff0c\u6240\u4ee5\u8981\u5355\u72ec\u5904\u7406\u5b83\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},"\u65b9\u6cd5\u540d"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u63cf\u8ff0"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"boolean add(T)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u786e\u4fdd\u96c6\u5408\u5305\u542b\u8be5\u6cdb\u578b\u7c7b\u578b ",(0,r.kt)("strong",{parentName:"td"},"T")," \u7684\u53c2\u6570\u3002\u5982\u679c\u4e0d\u6dfb\u52a0\u53c2\u6570\uff0c\u5219\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"false")," \u3002 \uff08\u8fd9\u662f\u4e00\u79cd\u201c\u53ef\u9009\u201d\u65b9\u6cd5\uff0c\u5c06\u5728\u4e0b\u4e00\u8282\u4e2d\u4ecb\u7ecd\u3002\uff09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"boolean addAll(Collection","<","? extends T\\",">",")")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u6dfb\u52a0\u53c2\u6570\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\u53ea\u8981\u6709\u5143\u7d20\u88ab\u6210\u529f\u6dfb\u52a0\u5219\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"true"),"\u3002\uff08\u201c\u53ef\u9009\u7684\u201d\uff09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"void clear()")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5220\u9664\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002\uff08\u201c\u53ef\u9009\u7684\u201d\uff09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"boolean contains(T)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5982\u679c\u76ee\u6807\u96c6\u5408\u5305\u542b\u8be5\u6cdb\u578b\u7c7b\u578b ",(0,r.kt)("strong",{parentName:"td"},"T")," \u7684\u53c2\u6570\uff0c\u5219\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"true")," \u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"boolean containsAll(Collection","<","?\\",">",")")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5982\u679c\u76ee\u6807\u96c6\u5408\u5305\u542b\u53c2\u6570\u96c6\u5408\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u5219\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"boolean isEmpty()")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5982\u679c\u96c6\u5408\u4e3a\u7a7a\uff0c\u5219\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"true"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"Iterator","<","T\\",">"," iterator() Spliterator","<","T\\",">"," spliterator()")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de\u4e00\u4e2a\u8fed\u4ee3\u5668\u6765\u904d\u5386\u96c6\u5408\u4e2d\u7684\u5143\u7d20\u3002 ",(0,r.kt)("strong",{parentName:"td"},"Spliterators")," \u66f4\u590d\u6742\u4e00\u4e9b\uff0c\u5b83\u7528\u5728\u5e76\u53d1\u573a\u666f")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"boolean remove(Object)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5982\u679c\u76ee\u6807\u96c6\u5408\u5305\u542b\u8be5\u53c2\u6570\uff0c\u5219\u5728\u96c6\u5408\u4e2d\u5220\u9664\u8be5\u53c2\u6570\uff0c\u5982\u679c\u6210\u529f\u5220\u9664\u5219\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"true")," \u3002\uff08\u201c\u53ef\u9009\u7684\u201d\uff09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"boolean removeAll(Collection","<","?\\",">",")")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5220\u9664\u76ee\u6807\u96c6\u5408\u4e2d\uff0c\u53c2\u6570\u96c6\u5408\u6240\u5305\u542b\u7684\u5168\u90e8\u5143\u7d20\u3002\u5982\u679c\u6709\u5143\u7d20\u88ab\u6210\u529f\u5220\u9664\u5219\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"true")," \u3002 \uff08\u201c\u53ef\u9009\u7684\u201d\uff09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"boolean removeIf(Predicate","<","? super E\\",">",")")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5220\u9664\u6b64\u96c6\u5408\u4e2d\uff0c\u6ee1\u8db3\u7ed9\u5b9a\u65ad\u8a00\uff08predicate\uff09\u7684\u6240\u6709\u5143\u7d20")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"Stream","<","E\\",">"," stream() Stream","<","E\\",">"," parallelStream()")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de\u7531\u8be5 ",(0,r.kt)("strong",{parentName:"td"},"Collection")," \u4e2d\u5143\u7d20\u6240\u7ec4\u6210\u7684\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"td"},"Stream"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"int size()")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de\u96c6\u5408\u4e2d\u6240\u5305\u542b\u5143\u7d20\u7684\u4e2a\u6570")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"Object[] toArrat()")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de\u5305\u542b\u8be5\u96c6\u5408\u6240\u6709\u5143\u7d20\u7684\u4e00\u4e2a\u6570\u7ec4")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"<","T\\",">"," T[] toArray(T[] a)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de\u5305\u542b\u8be5\u96c6\u5408\u6240\u6709\u5143\u7d20\u7684\u4e00\u4e2a\u6570\u7ec4\u3002\u7ed3\u679c\u7684\u8fd0\u884c\u65f6\u7c7b\u578b\u662f\u53c2\u6570\u6570\u7ec4\u800c\u4e0d\u662f\u666e\u901a\u7684 ",(0,r.kt)("strong",{parentName:"td"},"Object")," \u6570\u7ec4\u3002")))),(0,r.kt)("p",null,"\u8fd9\u91cc\u6ca1\u6709\u63d0\u4f9b\u7528\u4e8e\u968f\u673a\u8bbf\u95ee\u5143\u7d20\u7684 ",(0,r.kt)("strong",{parentName:"p"},"get()")," \u65b9\u6cd5\uff0c\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u8fd8\u5305\u542b ",(0,r.kt)("strong",{parentName:"p"},"Set")," \uff0c\u5b83\u7ef4\u62a4\u81ea\u5df1\u7684\u5185\u90e8\u6392\u5e8f\uff0c\u6240\u4ee5\u968f\u673a\u8bbf\u95ee\u67e5\u627e\u5c31\u6ca1\u6709\u610f\u4e49\u4e86\u3002\u56e0\u6b64\uff0c\u8981\u67e5\u627e ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u4e2d\u7684\u5143\u7d20\u5fc5\u987b\u4f7f\u7528\u8fed\u4ee3\u5668\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u8fd9\u4e2a\u793a\u4f8b\u6f14\u793a\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u7684\u6240\u6709\u65b9\u6cd5\u3002\u8fd9\u91cc\u4ee5 ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \u4e3a\u4f8b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/CollectionMethods.java\n// Things you can do with all Collections\nimport java.util.*;\nimport static onjava.HTMLColors.*;\n\npublic class CollectionMethods {\n  public static void main(String[] args) {\n    Collection<String> c =\n        new ArrayList<>(LIST.subList(0, 4));\n    c.add("ten");\n    c.add("eleven");\n    show(c);\n    border();\n    // Make an array from the List:\n    Object[] array = c.toArray();\n    // Make a String array from the List:\n    String[] str = c.toArray(new String[0]);\n    // Find max and min elements; this means\n    // different things depending on the way\n    // the Comparable interface is implemented:\n    System.out.println(\n      "Collections.max(c) = " + Collections.max(c));\n    System.out.println(\n      "Collections.min(c) = " + Collections.min(c));\n    border();\n    // Add a Collection to another Collection\n    Collection<String> c2 =\n        new ArrayList<>(LIST.subList(10, 14));\n    c.addAll(c2);\n    show(c);\n    border();\n    c.remove(LIST.get(0));\n    show(c);\n    border();\n    // Remove all components that are\n    // in the argument collection:\n    c.removeAll(c2);\n    show(c);\n    border();\n    c.addAll(c2);\n    show(c);\n    border();\n    // Is an element in this Collection?\n    String val = LIST.get(3);\n    System.out.println(\n      "c.contains(" + val  + ") = " + c.contains(val));\n    // Is a Collection in this Collection?\n    System.out.println(\n      "c.containsAll(c2) = " + c.containsAll(c2));\n    Collection<String> c3 =\n      ((List<String>)c).subList(3, 5);\n    // Keep all the elements that are in both\n    // c2 and c3 (an intersection of sets):\n    c2.retainAll(c3);\n    show(c2);\n    // Throw away all the elements\n    // in c2 that also appear in c3:\n    c2.removeAll(c3);\n    System.out.println(\n      "c2.isEmpty() = " +  c2.isEmpty());\n    border();\n    // Functional operation:\n    c = new ArrayList<>(LIST);\n    c.removeIf(s -> !s.startsWith("P"));\n    c.removeIf(s -> s.startsWith("Pale"));\n    // Stream operation:\n    c.stream().forEach(System.out::println);\n    c.clear(); // Remove all elements\n    System.out.println("after c.clear():" + c);\n  }\n}\n/* Output:\nAliceBlue\nAntiqueWhite\nAquamarine\nAzure\nten\neleven\n******************************\nCollections.max(c) = ten\nCollections.min(c) = AliceBlue\n******************************\nAliceBlue\nAntiqueWhite\nAquamarine\nAzure\nten\neleven\nBrown\nBurlyWood\nCadetBlue\nChartreuse\n******************************\nAntiqueWhite\nAquamarine\nAzure\nten\neleven\nBrown\nBurlyWood\nCadetBlue\nChartreuse\n******************************\nAntiqueWhite\nAquamarine\nAzure\nten\neleven\n******************************\nAntiqueWhite\nAquamarine\nAzure\nten\neleven\nBrown\nBurlyWood\nCadetBlue\nChartreuse\n******************************\nc.contains(Azure) = true\nc.containsAll(c2) = true\nc2.isEmpty() = true\n******************************\nPapayaWhip\nPeachPuff\nPeru\nPink\nPlum\nPowderBlue\nPurple\nafter c.clear():[]\n*/\n')),(0,r.kt)("p",null,"\u4e3a\u4e86\u53ea\u6f14\u793a ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u63a5\u53e3\u7684\u65b9\u6cd5\uff0c\u800c\u6ca1\u6709\u5176\u5b83\u989d\u5916\u7684\u5185\u5bb9\uff0c\u6240\u4ee5\u8fd9\u91cc\u521b\u5efa\u5305\u542b\u4e0d\u540c\u6570\u636e\u96c6\u7684 ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \uff0c\u5e76\u5411\u4e0a\u8f6c\u578b\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u5bf9\u8c61\u3002"),(0,r.kt)("h2",{id:"\u53ef\u9009\u64cd\u4f5c"},"\u53ef\u9009\u64cd\u4f5c"),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u63a5\u53e3\u4e2d\u6267\u884c\u5404\u79cd\u6dfb\u52a0\u548c\u5220\u9664\u64cd\u4f5c\u7684\u65b9\u6cd5\u662f ",(0,r.kt)("em",{parentName:"p"},"\u53ef\u9009\u64cd\u4f5c")," \uff08optional operations\uff09\u3002\u8fd9\u610f\u5473\u7740\u5b9e\u73b0\u7c7b\u4e0d\u9700\u8981\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u63d0\u4f9b\u529f\u80fd\u5b9a\u4e49\u3002"),(0,r.kt)("p",null,"\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u4e0d\u5bfb\u5e38\u7684\u5b9a\u4e49\u63a5\u53e3\u7684\u65b9\u5f0f\u3002\u6b63\u5982\u6211\u4eec\u6240\u77e5\uff0c\u63a5\u53e3\u662f\u4e00\u79cd\u5408\u7ea6\uff08contract\uff09\u3002\u5b83\u8868\u8fbe\u7684\u610f\u601d\u662f\uff0c\u201c\u65e0\u8bba\u4f60\u5982\u4f55\u9009\u62e9\u5b9e\u73b0\u8fd9\u4e2a\u63a5\u53e3\uff0c\u6211\u4fdd\u8bc1\u4f60\u53ef\u4ee5\u5c06\u8fd9\u4e9b\u6d88\u606f\u53d1\u9001\u5230\u8fd9\u4e2a\u5bf9\u8c61\u201d\uff08\u6211\u5728\u8fd9\u91cc\u4f7f\u7528\u672f\u8bed\u201c\u63a5\u53e3\u201d\u6765\u63cf\u8ff0\u6b63\u5f0f\u7684 ",(0,r.kt)("strong",{parentName:"p"},"interface")," \u5173\u952e\u5b57\u548c\u201c\u4efb\u4f55\u7c7b\u6216\u5b50\u7c7b\u90fd\u652f\u6301\u7684\u65b9\u6cd5\u201d\u7684\u66f4\u4e00\u822c\u542b\u4e49\uff09\u3002\u4f46\u201c\u53ef\u9009\u201d\u64cd\u4f5c\u8fdd\u53cd\u4e86\u8fd9\u4e00\u57fa\u672c\u539f\u5219\uff0c\u5b83\u8868\u793a\u8c03\u7528\u67d0\u4e9b\u65b9\u6cd5\u4e0d\u4f1a\u6267\u884c\u6709\u610f\u4e49\u7684\u884c\u4e3a\u3002\u76f8\u53cd\uff0c\u5b83\u4eec\u4f1a\u629b\u51fa\u5f02\u5e38\uff01\u8fd9\u770b\u8d77\u6765\u4f3c\u4e4e\u4e22\u5931\u4e86\u7f16\u8bd1\u65f6\u7684\u7c7b\u578b\u5b89\u5168\u6027\u3002"),(0,r.kt)("p",null,"\u5176\u5b9e\u6ca1\u90a3\u4e48\u7cdf\u7cd5\u3002\u5982\u679c\u64cd\u4f5c\u662f\u53ef\u9009\u7684\uff0c\u7f16\u8bd1\u5668\u4ecd\u7136\u80fd\u591f\u9650\u5236\u4f60\u4ec5\u8c03\u7528\u8be5\u63a5\u53e3\u4e2d\u7684\u65b9\u6cd5\u3002\u5b83\u4e0d\u50cf\u52a8\u6001\u8bed\u8a00\u90a3\u6837\uff0c\u53ef\u4ee5\u4e3a\u4efb\u4f55\u5bf9\u8c61\u8c03\u7528\u4efb\u4f55\u65b9\u6cd5\uff0c\u5e76\u5728\u8fd0\u884c\u65f6\u67e5\u627e\u7279\u5b9a\u7684\u8c03\u7528\u662f\u5426\u53ef\u884c\u3002",(0,r.kt)("sup",{parentName:"p",id:"fnref-2"},(0,r.kt)("a",{parentName:"sup",href:"#fn-2",className:"footnote-ref"},"2")),"\u6b64\u5916\uff0c\u5927\u591a\u6570\u5c06 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u4f5c\u4e3a\u53c2\u6570\u7684\u65b9\u6cd5\u4ec5\u4ece\u8be5 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u4e2d\u8bfb\u53d6\uff0c\u5e76\u4e14 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u7684\u6240\u6709\u201c\u8bfb\u53d6\u201d\u65b9\u6cd5\u90fd\u4e0d\u662f\u53ef\u9009\u7684\u3002"),(0,r.kt)("p",null,"\u4e3a\u4ec0\u4e48\u8981\u5c06\u65b9\u6cd5\u5b9a\u4e49\u4e3a\u201c\u53ef\u9009\u201d\u7684\uff1f\u56e0\u4e3a\u8fd9\u6837\u505a\u53ef\u4ee5\u9632\u6b62\u8bbe\u8ba1\u4e2d\u7684\u63a5\u53e3\u7206\u70b8\u3002\u96c6\u5408\u5e93\u7684\u5176\u4ed6\u8bbe\u8ba1\u5f80\u5f80\u4f1a\u4ea7\u751f\u4ee4\u4eba\u56f0\u60d1\u7684\u8fc7\u591a\u63a5\u53e3\u6765\u63cf\u8ff0\u4e3b\u9898\u7684\u6bcf\u4e2a\u53d8\u4f53\u3002\u8fd9\u751a\u81f3\u4f7f\u5f97\u4e0d\u53ef\u80fd\u6355\u83b7\u5230\u63a5\u53e3\u4e2d\u7684\u6240\u6709\u7279\u6b8a\u60c5\u51b5\uff0c\u56e0\u4e3a\u603b\u6709\u4eba\u80fd\u53d1\u660e\u4e00\u4e2a\u65b0\u7684\u63a5\u53e3\u3002\u201c\u4e0d\u652f\u6301\u7684\u64cd\u4f5c\uff08unsupported operation\uff09\u201d\u8fd9\u79cd\u65b9\u5f0f\u5b9e\u73b0\u4e86Java\u96c6\u5408\u5e93\u7684\u4e00\u4e2a\u91cd\u8981\u76ee\u6807\uff1a\u96c6\u5408\u8981\u6613\u4e8e\u5b66\u4e60\u548c\u4f7f\u7528\u3002\u4e0d\u652f\u6301\u7684\u64cd\u4f5c\u662f\u4e00\u79cd\u7279\u6b8a\u60c5\u51b5\uff0c\u53ef\u4ee5\u63a8\u8fdf\u5230\u5fc5\u8981\u7684\u65f6\u5019\u3002\u4f46\u662f\uff0c\u8981\u4f7f\u7528\u6b64\u65b9\u6cd5\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"UnsupportedOperationException")," \u5fc5\u987b\u662f\u4e00\u4e2a\u7f55\u89c1\u7684\u4e8b\u4ef6\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u5927\u591a\u6570\u7c7b\uff0c\u6240\u6709\u64cd\u4f5c\u90fd\u5e94\u8be5\u8d77\u4f5c\u7528\uff0c\u5e76\u4e14\u53ea\u6709\u5728\u7279\u6b8a\u60c5\u51b5\u4e0b\u624d\u5e94\u8be5\u4e0d\u652f\u6301\u67d0\u9879\u64cd\u4f5c\u3002\u8fd9\u5728Java\u96c6\u5408\u5e93\u4e2d\u662f\u6b63\u786e\u7684\uff0c\u56e0\u4e3a99%\u7684\u65f6\u95f4\u4f7f\u7528\u5230\u7684\u7c7b \u2014\u2014 ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"LinkedList")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"HashMap")," \uff0c\u4ee5\u53ca\u5176\u4ed6\u5177\u4f53\u5b9e\u73b0\uff0c\u90fd\u652f\u6301\u6240\u6709\u64cd\u4f5c\u3002\u8be5\u8bbe\u8ba1\u786e\u5b9e\u4e3a\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u63d0\u4f9b\u4e86\u4e00\u4e2a\u201c\u540e\u95e8\u201d\uff0c\u53ef\u4ee5\u4e0d\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u63a5\u53e3\u4e2d\u7684\u6240\u6709\u65b9\u6cd5\u90fd\u63d0\u4f9b\u6709\u610f\u4e49\u7684\u5b9a\u4e49\uff0c\u8fd9\u4e9b\u5b9a\u4e49\u4ecd\u7136\u9002\u5408\u73b0\u6709\u7684\u7c7b\u5e93\u3002")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"\u5f53\u4e0d\u652f\u6301\u67d0\u4e2a\u64cd\u4f5c\u65f6\uff0c ",(0,r.kt)("strong",{parentName:"p"},"UnsupportedOperationException")," \u5e94\u8be5\u51fa\u73b0\u5728\u5b9e\u73b0\u9636\u6bb5\uff0c\u800c\u4e0d\u662f\u5728\u5c06\u4ea7\u54c1\u53d1\u9001\u7ed9\u5ba2\u6237\u4e4b\u540e\u3002\u6bd5\u7adf\uff0c\u8fd9\u4e2a\u5f02\u5e38\u8868\u793a\u7f16\u7a0b\u9519\u8bef\uff1a\u9519\u8bef\u5730\u4f7f\u7528\u4e86\u4e00\u4e2a\u5177\u4f53\u5b9e\u73b0\u3002"))),(0,r.kt)("p",null,"\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u4e0d\u652f\u6301\u7684\u64cd\u4f5c\u53ea\u80fd\u5728\u8fd0\u884c\u65f6\u68c0\u6d4b\u5230\uff0c\u56e0\u6b64\u8fd9\u4ee3\u8868\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\u3002\u5982\u679c\u4f60\u6765\u81ea\u50cf C++ \u8fd9\u6837\u7684\u9759\u6001\u7c7b\u578b\u8bed\u8a00\uff0cJava \u53ef\u80fd\u770b\u8d77\u6765\u53ea\u662f\u53e6\u4e00\u79cd\u9759\u6001\u7c7b\u578b\u8bed\u8a00\u3002\u5f53\u7136\uff0c Java \u80af\u5b9a\u6709\u9759\u6001\u7c7b\u578b\u68c0\u67e5\uff0c\u4f46\u5b83\u4e5f\u6709\u5927\u91cf\u7684\u52a8\u6001\u7c7b\u578b\uff0c\u56e0\u6b64\u5f88\u96be\u8bf4\u5b83\u53ea\u662f\u9759\u6001\u8bed\u8a00\u6216\u52a8\u6001\u8bed\u8a00\u3002\u4e00\u65e6\u4f60\u5f00\u59cb\u6ce8\u610f\u5230\u8fd9\u4e00\u70b9\uff0c\u4f60\u5c31\u4f1a\u5f00\u59cb\u770b\u5230 Java \u4e2d\u52a8\u6001\u7c7b\u578b\u68c0\u67e5\u7684\u5176\u4ed6\u793a\u4f8b\u3002"),(0,r.kt)("h3",{id:"\u4e0d\u652f\u6301\u7684\u64cd\u4f5c"},"\u4e0d\u652f\u6301\u7684\u64cd\u4f5c"),(0,r.kt)("p",null,"\u4e0d\u652f\u6301\u7684\u64cd\u4f5c\u7684\u5e38\u89c1\u6765\u6e90\u662f\u7531\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u7ed3\u6784\u6240\u652f\u6301\u7684\u96c6\u5408\u3002\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"Arrays.asList()")," \u65b9\u6cd5\u5c06\u6570\u7ec4\u8f6c\u6362\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"List")," \u65f6\uff0c\u5c31\u4f1a\u5f97\u5230\u8fd9\u6837\u7684\u96c6\u5408\u3002\u6b64\u5916\uff0c\u8fd8\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Collections")," \u7c7b\u4e2d\u7684\u201c\u4e0d\u53ef\u4fee\u6539\uff08unmodifiable\uff09\u201d\u65b9\u6cd5\u4f7f\u4efb\u4f55\u96c6\u5408\uff08\u5305\u62ec ",(0,r.kt)("strong",{parentName:"p"},"Map")," \uff09\u629b\u51fa ",(0,r.kt)("strong",{parentName:"p"},"UnsupportedOperationException")," \u5f02\u5e38\u3002\u6b64\u793a\u4f8b\u5c55\u793a\u4e86\u8fd9\u4e24\u79cd\u60c5\u51b5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/Unsupported.java\n// Unsupported operations in Java collections\nimport java.util.*;\n\npublic class Unsupported {\n  static void\n  check(String description, Runnable tst) {\n    try {\n      tst.run();\n    } catch(Exception e) {\n      System.out.println(description + "(): " + e);\n    }\n  }\n  static void test(String msg, List<String> list) {\n    System.out.println("--- " + msg + " ---");\n    Collection<String> c = list;\n    Collection<String> subList = list.subList(1,8);\n    // Copy of the sublist:\n    Collection<String> c2 = new ArrayList<>(subList);\n    check("retainAll", () -> c.retainAll(c2));\n    check("removeAll", () -> c.removeAll(c2));\n    check("clear", () -> c.clear());\n    check("add", () -> c.add("X"));\n    check("addAll", () -> c.addAll(c2));\n    check("remove", () -> c.remove("C"));\n    // The List.set() method modifies the value but\n    // doesn\'t change the size of the data structure:\n    check("List.set", () -> list.set(0, "X"));\n  }\n  public static void main(String[] args) {\n    List<String> list = Arrays.asList(\n      "A B C D E F G H I J K L".split(" "));\n    test("Modifiable Copy", new ArrayList<>(list));\n    test("Arrays.asList()", list);\n    test("unmodifiableList()",\n      Collections.unmodifiableList(\n        new ArrayList<>(list)));\n  }\n}\n/* Output:\n--- Modifiable Copy ---\n--- Arrays.asList() ---\nretainAll(): java.lang.UnsupportedOperationException\nremoveAll(): java.lang.UnsupportedOperationException\nclear(): java.lang.UnsupportedOperationException\nadd(): java.lang.UnsupportedOperationException\naddAll(): java.lang.UnsupportedOperationException\nremove(): java.lang.UnsupportedOperationException\n--- unmodifiableList() ---\nretainAll(): java.lang.UnsupportedOperationException\nremoveAll(): java.lang.UnsupportedOperationException\nclear(): java.lang.UnsupportedOperationException\nadd(): java.lang.UnsupportedOperationException\naddAll(): java.lang.UnsupportedOperationException\nremove(): java.lang.UnsupportedOperationException\nList.set(): java.lang.UnsupportedOperationException\n*/\n')),(0,r.kt)("p",null,"\u56e0\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"Arrays.asList()")," \u751f\u6210\u7684 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u7531\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\u6240\u652f\u6301\uff0c\u6240\u4ee5\u552f\u4e00\u652f\u6301\u7684\u64cd\u4f5c\u662f\u90a3\u4e9b\u4e0d\u6539\u53d8\u6570\u7ec4\u5927\u5c0f\u7684\u64cd\u4f5c\u3002\u4efb\u4f55\u4f1a\u5bfc\u81f4\u66f4\u6539\u57fa\u7840\u6570\u636e\u7ed3\u6784\u5927\u5c0f\u7684\u65b9\u6cd5\u90fd\u4f1a\u4ea7\u751f ",(0,r.kt)("strong",{parentName:"p"},"UnsupportedOperationException")," \u5f02\u5e38\uff0c\u6765\u8bf4\u660e\u8fd9\u662f\u5bf9\u4e0d\u652f\u6301\u7684\u65b9\u6cd5\u7684\u8c03\u7528\uff08\u7f16\u7a0b\u9519\u8bef\uff09\u3002"),(0,r.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c\u59cb\u7ec8\u53ef\u4ee5\u5c06 ",(0,r.kt)("inlineCode",{parentName:"p"},"Arrays.asList()")," \u7684\u7ed3\u679c\u4f5c\u4e3a\u4e00\u4e2a\u53c2\u6570\u4f20\u9012\u7ed9\u4efb\u4f55 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u7684\u6784\u9020\u65b9\u6cd5\uff08\u6216\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"addAll()")," \u65b9\u6cd5\u6216\u9759\u6001\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collections.addAll()")," \u65b9\u6cd5\uff09\u6765\u521b\u5efa\u4e00\u4e2a\u5141\u8bb8\u4f7f\u7528\u6240\u6709\u65b9\u6cd5\u7684\u5e38\u89c4\u96c6\u5408\uff0c\u5728\u4e3b\u65b9\u6cd5\u4e2d\u7b2c\u4e00\u6b21\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"test()")," \u65f6\u663e\u793a\u4e86\u8fd9\u79cd\u60c5\u51b5\u3002\u8fd9\u79cd\u8c03\u7528\u4ea7\u751f\u4e86\u4e00\u4e2a\u65b0\u7684\u53ef\u8c03\u6574\u5927\u5c0f\u7684\u5e95\u5c42\u6570\u636e\u7ed3\u6784\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Collections")," \u7c7b\u4e2d\u7684\u201cunmodifiable\u201d\u65b9\u6cd5\u4f1a\u5c06\u96c6\u5408\u5305\u88c5\u4e00\u4e2a\u4ee3\u7406\u4e2d\uff0c\u5982\u679c\u6267\u884c\u4efb\u4f55\u60f3\u8981\u4fee\u6539\u96c6\u5408\u7684\u64cd\u4f5c\uff0c\u5219\u8be5\u4ee3\u7406\u4f1a\u751f\u6210 ",(0,r.kt)("strong",{parentName:"p"},"UnsupportedOperationException")," \u5f02\u5e38\u3002\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\u7684\u76ee\u7684\u662f\u751f\u6210\u4e00\u4e2a\u201c\u5e38\u91cf\u201d\u96c6\u5408\u5bf9\u8c61\u3002\u7a0d\u540e\u5c06\u63cf\u8ff0\u201cunmodifiable\u201c\u96c6\u5408\u65b9\u6cd5\u7684\u5b8c\u6574\u5217\u8868\u3002"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"test()")," \u4e2d\u7684\u6700\u540e\u4e00\u4e2a ",(0,r.kt)("inlineCode",{parentName:"p"},"check()")," \u7528\u4e8e\u6d4b\u8bd5",(0,r.kt)("strong",{parentName:"p"},"List")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"set()")," \u65b9\u6cd5\u3002\u8fd9\u91cc\uff0c\u201c\u4e0d\u652f\u6301\u7684\u64cd\u4f5c\u201d\u6280\u672f\u7684\u7c92\u5ea6\uff08granularity\uff09\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86\uff0c\u5f97\u5230\u7684\u201c\u63a5\u53e3\u201d\u53ef\u4ee5\u901a\u8fc7\u4e00\u79cd\u65b9\u6cd5\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"Arrays.asList()")," \u8fd4\u56de\u7684\u5bf9\u8c61\u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"Collections.unmodifiableList()")," \u8fd4\u56de\u7684\u5bf9\u8c61\u4e4b\u95f4\u53d8\u6362\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"Arrays.asList()")," \u8fd4\u56de\u56fa\u5b9a\u5927\u5c0f\u7684 ",(0,r.kt)("strong",{parentName:"p"},"List")," \uff0c\u800c ",(0,r.kt)("inlineCode",{parentName:"p"},"Collections.unmodifiableList()")," \u751f\u6210\u65e0\u6cd5\u66f4\u6539\u7684 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u3002\u5982\u8f93\u51fa\u4e2d\u6240\u793a\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"Arrays.asList()")," \u8fd4\u56de\u7684 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u4e2d\u7684\u5143\u7d20\u662f\u53ef\u4ee5\u4fee\u6539\u7684\uff0c\u56e0\u4e3a\u8fd9\u4e0d\u4f1a\u8fdd\u53cd\u8be5 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u7684\u201c\u56fa\u5b9a\u5927\u5c0f\u201d\u7279\u6027\u3002\u4f46\u5f88\u660e\u663e\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"unmodifiableList()")," \u7684\u7ed3\u679c\u4e0d\u5e94\u8be5\u4ee5\u4efb\u4f55\u65b9\u5f0f\u4fee\u6539\u3002\u5982\u679c\u4f7f\u7528\u63a5\u53e3\u6765\u63cf\u8ff0\uff0c\u5219\u9700\u8981\u4e24\u4e2a\u989d\u5916\u7684\u63a5\u53e3\uff0c\u4e00\u4e2a\u5177\u6709\u53ef\u7528\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"set()")," \u65b9\u6cd5\uff0c\u800c\u53e6\u4e00\u4e2a\u6ca1\u6709\u3002 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u7684\u5404\u79cd\u4e0d\u53ef\u4fee\u6539\u7684\u5b50\u7c7b\u578b\u90fd\u5c06\u9700\u8981\u989d\u5916\u7684\u63a5\u53e3\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u4e00\u4e2a\u65b9\u6cd5\u5c06\u4e00\u4e2a\u96c6\u5408\u4f5c\u4e3a\u5b83\u7684\u53c2\u6570\uff0c\u90a3\u4e48\u5b83\u7684\u6587\u6863\u5e94\u8be5\u8bf4\u660e\u5fc5\u987b\u5b9e\u73b0\u54ea\u4e9b\u53ef\u9009\u65b9\u6cd5\u3002"),(0,r.kt)("h2",{id:"set\u548c\u5b58\u50a8\u987a\u5e8f"},"Set\u548c\u5b58\u50a8\u987a\u5e8f"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"./Collections"},"\u7b2c\u5341\u4e8c\u7ae0 \u96c6\u5408"),"\u7ae0\u8282\u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u6709\u5173\u793a\u4f8b\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u7684\u57fa\u672c\u64cd\u4f5c\u505a\u4e86\u5f88\u597d\u7684\u4ecb\u7ecd\u3002 \u4f46\u662f\uff0c\u8fd9\u4e9b\u793a\u4f8b\u53ef\u4ee5\u65b9\u4fbf\u5730\u4f7f\u7528\u9884\u5b9a\u4e49\u7684 Java \u7c7b\u578b\uff0c\u4f8b\u5982 ",(0,r.kt)("strong",{parentName:"p"},"Integer")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"String")," \uff0c\u5b83\u4eec\u53ef\u4ee5\u5728\u96c6\u5408\u4e2d\u4f7f\u7528\u3002\u5728\u521b\u5efa\u81ea\u5df1\u7684\u7c7b\u578b\u65f6\u8bf7\u6ce8\u610f\uff0c ",(0,r.kt)("strong",{parentName:"p"},"Set")," \uff08\u4ee5\u53ca\u7a0d\u540e\u4f1a\u770b\u5230\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \uff09\u9700\u8981\u4e00\u79cd\u7ef4\u62a4\u5b58\u50a8\u987a\u5e8f\u7684\u65b9\u6cd5\uff0c\u8be5\u987a\u5e8f\u56e0 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u7684\u4e0d\u540c\u5b9e\u73b0\u800c\u5f02\u3002\u56e0\u6b64\uff0c\u4e0d\u540c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u5b9e\u73b0\u4e0d\u4ec5\u5177\u6709\u4e0d\u540c\u7684\u884c\u4e3a\uff0c\u800c\u4e14\u5b83\u4eec\u5bf9\u53ef\u4ee5\u653e\u5165\u7279\u5b9a ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u4e2d\u7684\u5bf9\u8c61\u7c7b\u578b\u4e5f\u6709\u4e0d\u540c\u7684\u8981\u6c42\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"th"},"Set")," \u7c7b\u578b"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u7ea6\u675f"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"Set(interface)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u6dfb\u52a0\u5230 ",(0,r.kt)("strong",{parentName:"td"},"Set")," \u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u5426\u5219\uff0c",(0,r.kt)("strong",{parentName:"td"},"Set")," \u4e0d\u4f1a\u6dfb\u52a0\u91cd\u590d\u5143\u7d20\u3002\u6dfb\u52a0\u5230 ",(0,r.kt)("strong",{parentName:"td"},"Set")," \u7684\u5143\u7d20\u5fc5\u987b\u81f3\u5c11\u5b9a\u4e49 ",(0,r.kt)("inlineCode",{parentName:"td"},"equals()")," \u65b9\u6cd5\u4ee5\u5efa\u7acb\u5bf9\u8c61\u552f\u4e00\u6027\u3002 ",(0,r.kt)("strong",{parentName:"td"},"Set")," \u4e0e ",(0,r.kt)("strong",{parentName:"td"},"Collection")," \u5177\u6709\u5b8c\u5168\u76f8\u540c\u7684\u63a5\u53e3\u3002 ",(0,r.kt)("strong",{parentName:"td"},"Set")," \u63a5\u53e3\u4e0d\u4fdd\u8bc1\u5b83\u5c06\u4ee5\u4efb\u4f55\u7279\u5b9a\u987a\u5e8f\u7ef4\u62a4\u5176\u5143\u7d20\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"HashSet","*")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u6ce8\u91cd\u5feb\u901f\u67e5\u627e\u5143\u7d20\u7684\u96c6\u5408\uff0c\u5176\u4e2d\u5143\u7d20\u5fc5\u987b\u5b9a\u4e49 ",(0,r.kt)("inlineCode",{parentName:"td"},"hashCode()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"td"},"equals()")," \u65b9\u6cd5\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"TreeSet")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u7531\u6811\u652f\u6301\u7684\u6709\u5e8f ",(0,r.kt)("strong",{parentName:"td"},"Set"),"\u3002\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u4ece ",(0,r.kt)("strong",{parentName:"td"},"Set")," \u4e2d\u83b7\u53d6\u6709\u5e8f\u5e8f\u5217\uff0c\u5176\u4e2d\u5143\u7d20\u5fc5\u987b\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"td"},"Comparable")," \u63a5\u53e3\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"LinkedHashSet")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5177\u6709 ",(0,r.kt)("strong",{parentName:"td"},"HashSet")," \u7684\u67e5\u627e\u901f\u5ea6\uff0c\u4f46\u5728\u5185\u90e8\u4f7f\u7528\u94fe\u8868\u7ef4\u62a4\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\u3002\u56e0\u6b64\uff0c\u5f53\u5728\u904d\u5386 ",(0,r.kt)("strong",{parentName:"td"},"Set")," \u65f6\uff0c\u7ed3\u679c\u5c06\u6309\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\u663e\u793a\u3002\u5143\u7d20\u5fc5\u987b\u5b9a\u4e49 ",(0,r.kt)("inlineCode",{parentName:"td"},"hashCode()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"td"},"equals()")," \u65b9\u6cd5\u3002")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u4e0a\u7684\u661f\u53f7\u8868\u793a\uff0c\u5728\u6ca1\u6709\u5176\u4ed6\u7ea6\u675f\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5e94\u8be5\u662f\u4f60\u7684\u9ed8\u8ba4\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u9488\u5bf9\u901f\u5ea6\u8fdb\u884c\u4e86\u4f18\u5316\u3002"),(0,r.kt)("p",null,"\u5b9a\u4e49 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u65b9\u6cd5\u5728",(0,r.kt)("a",{parentName:"p",href:"./Appendix-Understanding-equals-and-hashCode"},"\u9644\u5f55:\u7406\u89e3equals\u548chashCode\u65b9\u6cd5"),"\u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002\u5fc5\u987b\u4e3a\u6563\u5217\u548c\u6811\u5b58\u50a8\u7ed3\u6784\u521b\u5efa ",(0,r.kt)("inlineCode",{parentName:"p"},"equals()")," \u65b9\u6cd5\uff0c\u4f46\u53ea\u6709\u5f53\u628a\u7c7b\u653e\u5728 ",(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u4e2d\u65f6\u624d\u9700\u8981 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \uff08\u5f53\u7136\u8fd9\u5f88\u6709\u53ef\u80fd\uff0c\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u901a\u5e38\u5e94\u8be5\u662f\u4f5c\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u5b9e\u73b0\u7684\u9996\u9009\uff09\u6216 ",(0,r.kt)("strong",{parentName:"p"},"LinkedHashSet")," \u3002 \u4f46\u662f\uff0c\u4f5c\u4e3a\u4e00\u79cd\u826f\u597d\u7684\u7f16\u7a0b\u98ce\u683c\uff0c\u5728\u8986\u76d6 ",(0,r.kt)("inlineCode",{parentName:"p"},"equals()")," \u65f6\u5e94\u59cb\u7ec8\u8986\u76d6 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u7684\u793a\u4f8b\u6f14\u793a\u4e86\u6210\u529f\u4f7f\u7528\u5177\u6709\u7279\u5b9a ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u5b9e\u73b0\u7684\u7c7b\u578b\u6240\u9700\u7684\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// collectiontopics/TypesForSets.java\n// Methods necessary to put your own type in a Set\nimport java.util.*;\nimport java.util.function.*;\nimport java.util.Objects;\n\nclass SetType {\n  protected int i;\n  SetType(int n) { i = n; }\n  @Override\n  public boolean equals(Object o) {\n    return o instanceof SetType &&\n      Objects.equals(i, ((SetType)o).i);\n  }\n  @Override\n  public String toString() {\n    return Integer.toString(i);\n  }\n}\n\nclass HashType extends SetType {\n  HashType(int n) { super(n); }\n  @Override\n  public int hashCode() {\n    return Objects.hashCode(i);\n  }\n}\n\nclass TreeType extends SetType\nimplements Comparable<TreeType> {\n  TreeType(int n) { super(n); }\n  @Override\n  public int compareTo(TreeType arg) {\n    return Integer.compare(arg.i, i);\n    // Equivalent to:\n    // return arg.i < i ? -1 : (arg.i == i ? 0 : 1);\n  }\n}\n\npublic class TypesForSets {\n  static <T> void\n  fill(Set<T> set, Function<Integer, T> type) {\n    for(int i = 10; i >= 5; i--) // Descending\n      set.add(type.apply(i));\n    for(int i = 0; i < 5; i++) // Ascending\n      set.add(type.apply(i));\n  }\n  static <T> void\n  test(Set<T> set, Function<Integer, T> type) {\n    fill(set, type);\n    fill(set, type); // Try to add duplicates\n    fill(set, type);\n    System.out.println(set);\n  }\n  public static void main(String[] args) {\n    test(new HashSet<>(), HashType::new);\n    test(new LinkedHashSet<>(), HashType::new);\n    test(new TreeSet<>(), TreeType::new);\n    // Things that don't work:\n    test(new HashSet<>(), SetType::new);\n    test(new HashSet<>(), TreeType::new);\n    test(new LinkedHashSet<>(), SetType::new);\n    test(new LinkedHashSet<>(), TreeType::new);\n    try {\n      test(new TreeSet<>(), SetType::new);\n    } catch(Exception e) {\n      System.out.println(e.getMessage());\n    }\n    try {\n      test(new TreeSet<>(), HashType::new);\n    } catch(Exception e) {\n      System.out.println(e.getMessage());\n    }\n  }\n}\n/* Output:\n[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n[10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4]\n[10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n[1, 6, 8, 6, 2, 7, 8, 9, 4, 10, 7, 5, 1, 3, 4, 9, 9,\n10, 5, 3, 2, 0, 4, 1, 2, 0, 8, 3, 0, 10, 6, 5, 7]\n[3, 1, 4, 8, 7, 6, 9, 5, 3, 0, 10, 5, 5, 10, 7, 8, 8,\n9, 1, 4, 10, 2, 6, 9, 1, 6, 0, 3, 2, 0, 7, 2, 4]\n[10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5,\n0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4]\n[10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5,\n0, 1, 2, 3, 4, 10, 9, 8, 7, 6, 5, 0, 1, 2, 3, 4]\nSetType cannot be cast to java.lang.Comparable\nHashType cannot be cast to java.lang.Comparable\n*/\n")),(0,r.kt)("p",null,"\u4e3a\u4e86\u8bc1\u660e\u7279\u5b9a ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u9700\u8981\u54ea\u4e9b\u65b9\u6cd5\uff0c\u540c\u65f6\u907f\u514d\u4ee3\u7801\u91cd\u590d\uff0c\u8fd9\u91cc\u521b\u5efa\u4e86\u4e09\u4e2a\u7c7b\u3002\u57fa\u7c7b ",(0,r.kt)("strong",{parentName:"p"},"SetType")," \u5b58\u50a8\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"int")," \u503c\uff0c\u5e76\u901a\u8fc7 ",(0,r.kt)("inlineCode",{parentName:"p"},"toString()")," \u65b9\u6cd5\u6253\u5370\u5b83\u3002\u7531\u4e8e\u5b58\u50a8\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u4e2d\u7684\u6240\u6709\u7c7b\u90fd\u5fc5\u987b\u5177\u6709 ",(0,r.kt)("inlineCode",{parentName:"p"},"equals()")," \uff0c\u56e0\u6b64\u8be5\u65b9\u6cd5\u4e5f\u653e\u5728\u57fa\u7c7b\u4e2d\u3002\u57fa\u4e8e ",(0,r.kt)("inlineCode",{parentName:"p"},"int i")," \u6765\u5224\u65ad\u5143\u7d20\u662f\u5426\u76f8\u7b49\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"HashType")," \u7ee7\u627f\u81ea ",(0,r.kt)("strong",{parentName:"p"},"SetType")," \uff0c\u5e76\u6dfb\u52a0\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u5bf9\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u7684\u6563\u5217\u5b9e\u73b0\u662f\u5fc5\u9700\u7684\u3002"),(0,r.kt)("p",null,"\u8981\u5728\u4efb\u4f55\u7c7b\u578b\u7684\u6709\u5e8f\u96c6\u5408\u4e2d\u4f7f\u7528\u5bf9\u8c61\uff0c\u7531 ",(0,r.kt)("strong",{parentName:"p"},"TreeType")," \u5b9e\u73b0\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Comparable")," \u63a5\u53e3\u90fd\u662f\u5fc5\u9700\u7684\uff0c\u4f8b\u5982 ",(0,r.kt)("strong",{parentName:"p"},"SortedSet")," \uff08 ",(0,r.kt)("strong",{parentName:"p"},"TreeSet")," \u662f\u5176\u552f\u4e00\u5b9e\u73b0\uff09\u3002\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"compareTo()")," \u4e2d\uff0c\u8bf7\u6ce8\u610f\u6211\u6ca1\u6709\u4f7f\u7528\u201c\u7b80\u5355\u660e\u4e86\u201d\u7684\u5f62\u5f0f\uff1a ",(0,r.kt)("inlineCode",{parentName:"p"},"return i-i2")," \u3002\u867d\u7136\u8fd9\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u7f16\u7a0b\u9519\u8bef\uff0c\u4f46\u53ea\u6709\u5f53 ",(0,r.kt)("strong",{parentName:"p"},"i")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"i2")," \u662f\u201c\u65e0\u7b26\u53f7\uff08unsigned\uff09\u201d\u6574\u578b\u65f6\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\uff08\u5982\u679c Java \u6709\u4e00\u4e2a\u201cunsigned\u201d\u5173\u952e\u5b57\u7684\u8bdd\uff0c\u4e0d\u8fc7\u5b83\u6ca1\u6709\uff09\u3002\u5b83\u7834\u574f\u4e86 Java \u7684\u6709\u7b26\u53f7 ",(0,r.kt)("strong",{parentName:"p"},"int")," \uff0c\u5b83\u4e0d\u8db3\u4ee5\u4ee3\u8868\u4e24\u4e2a\u6709\u7b26\u53f7\u6574\u6570\u7684\u5dee\u5f02\u3002\u5982\u679c ",(0,r.kt)("strong",{parentName:"p"},"i")," \u662f\u4e00\u4e2a\u5927\u7684\u6b63\u6574\u6570\u800c ",(0,r.kt)("strong",{parentName:"p"},"j")," \u662f\u4e00\u4e2a\u5927\u7684\u8d1f\u6574\u6570\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"i-j")," \u5c06\u6ea2\u51fa\u5e76\u8fd4\u56de\u4e00\u4e2a\u8d1f\u503c\uff0c\u8fd9\u4e0d\u662f\u6211\u4eec\u6240\u9700\u8981\u7684\u3002"),(0,r.kt)("p",null,"\u901a\u5e38\u5e0c\u671b ",(0,r.kt)("inlineCode",{parentName:"p"},"compareTo()")," \u65b9\u6cd5\u751f\u6210\u4e0e ",(0,r.kt)("inlineCode",{parentName:"p"},"equals()")," \u65b9\u6cd5\u4e00\u81f4\u7684\u81ea\u7136\u987a\u5e8f\u3002\u5982\u679c ",(0,r.kt)("inlineCode",{parentName:"p"},"equals()")," \u5bf9\u4e8e\u7279\u5b9a\u6bd4\u8f83\u4ea7\u751f ",(0,r.kt)("strong",{parentName:"p"},"true"),"\uff0c\u5219 ",(0,r.kt)("inlineCode",{parentName:"p"},"compareTo()")," \u5e94\u8be5\u4e3a\u8be5\u6bd4\u8f83\u8fd4\u56de\u7ed3\u679c \u96f6\uff0c\u5e76\u4e14\u5982\u679c ",(0,r.kt)("inlineCode",{parentName:"p"},"equals()")," \u4e3a\u6bd4\u8f83\u4ea7\u751f ",(0,r.kt)("strong",{parentName:"p"},"false")," \uff0c\u5219 ",(0,r.kt)("inlineCode",{parentName:"p"},"compareTo()")," \u5e94\u8be5\u4e3a\u8be5\u6bd4\u8f83\u4ea7\u751f\u975e\u96f6\u7ed3\u679c\u3002"),(0,r.kt)("p",null,"\u5728 ",(0,r.kt)("strong",{parentName:"p"},"TypesForSets")," \u4e2d\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"fill()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"test()")," \u90fd\u662f\u4f7f\u7528\u6cdb\u578b\u5b9a\u4e49\u7684\uff0c\u4ee5\u9632\u6b62\u4ee3\u7801\u91cd\u590d\u3002\u4e3a\u4e86\u9a8c\u8bc1 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u7684\u884c\u4e3a\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"test()")," \u5728\u6d4b\u8bd5\u96c6\u4e0a\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"fill()")," \u4e09\u6b21\uff0c\u5c1d\u8bd5\u5f15\u5165\u91cd\u590d\u7684\u5bf9\u8c61\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"fill()")," \u65b9\u6cd5\u7684\u53c2\u6570\u53ef\u4ee5\u63a5\u6536\u4efb\u610f\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u7c7b\u578b\uff0c\u4ee5\u53ca\u751f\u6210\u8be5\u7c7b\u578b\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Function")," \u5bf9\u8c61\u3002\u56e0\u4e3a\u6b64\u793a\u4f8b\u4e2d\u4f7f\u7528\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u6709\u4e00\u4e2a\u5e26\u6709\u5355\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"int")," \u53c2\u6570\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u6240\u4ee5\u53ef\u4ee5\u5c06\u6784\u9020\u65b9\u6cd5\u4f5c\u4e3a\u6b64 ",(0,r.kt)("strong",{parentName:"p"},"Function")," \u4f20\u9012\uff0c\u5b83\u5c06\u63d0\u4f9b\u7528\u4e8e\u586b\u5145 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u7684\u5bf9\u8c61\u3002"),(0,r.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"fill()")," \u65b9\u6cd5\u6309\u964d\u5e8f\u6dfb\u52a0\u524d\u4e94\u4e2a\u5143\u7d20\uff0c\u6309\u5347\u5e8f\u6dfb\u52a0\u540e\u4e94\u4e2a\u5143\u7d20\uff0c\u4ee5\u6b64\u6765\u6307\u51fa\u751f\u6210\u7684\u5b58\u50a8\u987a\u5e8f\u3002\u8f93\u51fa\u663e\u793a ",(0,r.kt)("strong",{parentName:"p"},"HashSet")," \u6309\u5347\u5e8f\u4fdd\u7559\u5143\u7d20\uff0c\u4f46\u662f\uff0c\u5728",(0,r.kt)("a",{parentName:"p",href:"./Appendix-Understanding-equals-and-hashCode"},"\u9644\u5f55:\u7406\u89e3equals\u548chashCode\u65b9\u6cd5"),"\u4e2d\uff0c\u4f60\u4f1a\u53d1\u73b0\u8fd9\u53ea\u662f\u5076\u7136\u7684\uff0c\u56e0\u4e3a\u6563\u5217\u4f1a\u521b\u5efa\u81ea\u5df1\u7684\u5b58\u50a8\u987a\u5e8f\u3002\u8fd9\u91cc\u53ea\u662f\u56e0\u4e3a\u5143\u7d20\u662f\u4e00\u4e2a\u7b80\u5355\u7684 ",(0,r.kt)("strong",{parentName:"p"},"int")," \uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u5b83\u662f\u5347\u5e8f\u7684\u3002 ",(0,r.kt)("strong",{parentName:"p"},"LinkedHashSet")," \u6309\u7167\u63d2\u5165\u987a\u5e8f\u4fdd\u5b58\u5143\u7d20\uff0c",(0,r.kt)("strong",{parentName:"p"},"TreeSet")," \u6309\u6392\u5e8f\u987a\u5e8f\u7ef4\u62a4\u5143\u7d20\uff08\u5728\u6b64\u793a\u4f8b\u4e2d\u56e0\u4e3a ",(0,r.kt)("inlineCode",{parentName:"p"},"compareTo()")," \u7684\u5b9e\u73b0\u65b9\u5f0f\uff0c\u6240\u4ee5\u5143\u7d20\u6309\u964d\u5e8f\u6392\u5217\u3002\uff09"),(0,r.kt)("p",null,"\u7279\u5b9a\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u7c7b\u578b\u4e00\u822c\u90fd\u6709\u6240\u5fc5\u9700\u7684\u64cd\u4f5c\uff0c\u5982\u679c\u5c1d\u8bd5\u4f7f\u7528\u6ca1\u80fd\u6b63\u786e\u652f\u6301\u8fd9\u4e9b\u64cd\u4f5c\u7684\u7c7b\u578b\uff0c\u90a3\u4e48\u4e8b\u60c5\u5c31\u4f1a\u51fa\u9519\u3002\u5c06\u6ca1\u6709\u91cd\u65b0\u5b9a\u4e49 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u65b9\u6cd5\u7684 ",(0,r.kt)("strong",{parentName:"p"},"SetType")," \u6216 ",(0,r.kt)("strong",{parentName:"p"},"TreeType")," \u5bf9\u8c61\u653e\u5165\u4efb\u4f55\u6563\u5217\u5b9e\u73b0\u4f1a\u5bfc\u81f4\u91cd\u590d\u503c\uff0c\u56e0\u6b64\u8fdd\u53cd\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u7684\u4e3b\u8981\u5951\u7ea6\u3002 \u8fd9\u662f\u76f8\u5f53\u4ee4\u4eba\u4e0d\u5b89\u7684\uff0c\u56e0\u4e3a\u8fd9\u751a\u81f3\u4e0d\u4ea7\u751f\u8fd0\u884c\u65f6\u9519\u8bef\u3002\u4f46\u662f\uff0c\u9ed8\u8ba4\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u662f\u5408\u6cd5\u7684\uff0c\u6240\u4ee5\u5373\u4f7f\u5b83\u662f\u4e0d\u6b63\u786e\u7684\uff0c\u8fd9\u4e5f\u662f\u5408\u6cd5\u7684\u884c\u4e3a\u3002\u786e\u4fdd\u6b64\u7c7b\u7a0b\u5e8f\u6b63\u786e\u6027\u7684\u552f\u4e00\u53ef\u9760\u65b9\u6cd5\u662f\u5c06\u5355\u5143\u6d4b\u8bd5\u5408\u5e76\u5230\u6784\u5efa\u7cfb\u7edf\u4e2d\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u5c1d\u8bd5\u5728 ",(0,r.kt)("strong",{parentName:"p"},"TreeSet")," \u4e2d\u4f7f\u7528\u6ca1\u6709\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"Comparable")," \u63a5\u53e3\u7684\u7c7b\u578b\uff0c\u5219\u4f1a\u5f97\u5230\u66f4\u660e\u786e\u7684\u7ed3\u679c\uff1a\u5f53 ",(0,r.kt)("strong",{parentName:"p"},"TreeSet")," \u5c1d\u8bd5\u5c06\u5bf9\u8c61\u7528\u4f5c\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Comparable")," \u65f6\uff0c\u5c06\u4f1a\u629b\u51fa\u5f02\u5e38\u3002"),(0,r.kt)("h3",{id:"sortedset"},"SortedSet"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"SortedSet")," \u4e2d\u7684\u5143\u7d20\u4fdd\u8bc1\u6309\u6392\u5e8f\u89c4\u5219\u987a\u5e8f\uff0c ",(0,r.kt)("strong",{parentName:"p"},"SortedSet")," \u63a5\u53e3\u4e2d\u7684\u4ee5\u4e0b\u65b9\u6cd5\u53ef\u4ee5\u4ea7\u751f\u5176\u4ed6\u529f\u80fd\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Comparator comparator()")," \uff1a\u751f\u6210\u7528\u4e8e\u6b64 ",(0,r.kt)("strong",{parentName:"li"},"Set")," \u7684",(0,r.kt)("strong",{parentName:"li"},"Comparator")," \u6216 ",(0,r.kt)("strong",{parentName:"li"},"null")," \u6765\u7528\u4e8e\u81ea\u7136\u6392\u5e8f\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Object first()")," \uff1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Object last()")," \uff1a\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SortedSet subSet(fromElement\uff0ctoElement)")," \uff1a\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"li"},"fromElement")," \uff08\u5305\u542b\uff09\u548c ",(0,r.kt)("strong",{parentName:"li"},"toElement")," \uff08\u4e0d\u5305\u62ec\uff09\u4e2d\u7684\u5143\u7d20\u751f\u6210\u6b64 ",(0,r.kt)("strong",{parentName:"li"},"Set")," \u7684\u4e00\u4e2a\u89c6\u56fe\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SortedSet headSet(toElement)")," \uff1a\u4f7f\u7528\u987a\u5e8f\u5728 ",(0,r.kt)("strong",{parentName:"li"},"toElement")," \u4e4b\u524d\u7684\u5143\u7d20\u751f\u6210\u6b64 ",(0,r.kt)("strong",{parentName:"li"},"Set")," \u7684\u4e00\u4e2a\u89c6\u56fe\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SortedSet tailSet(fromElement)")," \uff1a\u4f7f\u7528\u987a\u5e8f\u5728 ",(0,r.kt)("strong",{parentName:"li"},"fromElement")," \u4e4b\u540e\uff08\u5305\u542b ",(0,r.kt)("strong",{parentName:"li"},"fromElement")," \uff09\u7684\u5143\u7d20\u751f\u6210\u6b64 ",(0,r.kt)("strong",{parentName:"li"},"Set")," \u7684\u4e00\u4e2a\u89c6\u56fe\u3002")),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/SortedSetDemo.java\nimport java.util.*;\nimport static java.util.stream.Collectors.*;\n\npublic class SortedSetDemo {\n  public static void main(String[] args) {\n    SortedSet<String> sortedSet =\n      Arrays.stream(\n        "one two three four five six seven eight"\n        .split(" "))\n        .collect(toCollection(TreeSet::new));\n    System.out.println(sortedSet);\n    String low = sortedSet.first();\n    String high = sortedSet.last();\n    System.out.println(low);\n    System.out.println(high);\n    Iterator<String> it = sortedSet.iterator();\n    for(int i = 0; i <= 6; i++) {\n      if(i == 3) low = it.next();\n      if(i == 6) high = it.next();\n      else it.next();\n    }\n    System.out.println(low);\n    System.out.println(high);\n    System.out.println(sortedSet.subSet(low, high));\n    System.out.println(sortedSet.headSet(high));\n    System.out.println(sortedSet.tailSet(low));\n  }\n}\n/* Output:\n[eight, five, four, one, seven, six, three, two]\neight\ntwo\none\ntwo\n[one, seven, six, three]\n[eight, five, four, one, seven, six, three]\n[one, seven, six, three, two]\n*/\n')),(0,r.kt)("p",null,"\u6ce8\u610f\uff0c ",(0,r.kt)("strong",{parentName:"p"},"SortedSet")," \u8868\u793a\u201c\u6839\u636e\u5bf9\u8c61\u7684\u6bd4\u8f83\u51fd\u6570\u8fdb\u884c\u6392\u5e8f\u201d\uff0c\u800c\u4e0d\u662f\u201c\u6839\u636e\u63d2\u5165\u987a\u5e8f\u201d\u3002\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"LinkedHashSet")," \u4fdd\u7559\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\u3002"),(0,r.kt)("h2",{id:"\u961f\u5217"},"\u961f\u5217"),(0,r.kt)("p",null,"\u6709\u8bb8\u591a ",(0,r.kt)("strong",{parentName:"p"},"Queue")," \u5b9e\u73b0\uff0c\u5176\u4e2d\u5927\u591a\u6570\u662f\u4e3a\u5e76\u53d1\u5e94\u7528\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u3002\u8bb8\u591a\u5b9e\u73b0\u90fd\u662f\u901a\u8fc7\u6392\u5e8f\u884c\u4e3a\u800c\u4e0d\u662f\u6027\u80fd\u6765\u533a\u5206\u7684\u3002\u8fd9\u662f\u4e00\u4e2a\u6d89\u53ca\u5927\u591a\u6570 ",(0,r.kt)("strong",{parentName:"p"},"Queue")," \u5b9e\u73b0\u7684\u57fa\u672c\u793a\u4f8b\uff0c\u5305\u62ec\u57fa\u4e8e\u5e76\u53d1\u7684\u961f\u5217\u3002\u961f\u5217\u5c06\u5143\u7d20\u4ece\u4e00\u7aef\u653e\u5165\u5e76\u4ece\u53e6\u4e00\u7aef\u53d6\u51fa\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/QueueBehavior.java\n// Compares basic behavior\nimport java.util.*;\nimport java.util.stream.*;\nimport java.util.concurrent.*;\n\npublic class QueueBehavior {\n  static Stream<String> strings() {\n    return Arrays.stream(\n      ("one two three four five six seven " +\n       "eight nine ten").split(" "));\n  }\n  static void test(int id, Queue<String> queue) {\n    System.out.print(id + ": ");\n    strings().map(queue::offer).count();\n    while(queue.peek() != null)\n      System.out.print(queue.remove() + " ");\n    System.out.println();\n  }\n  public static void main(String[] args) {\n    int count = 10;\n    test(1, new LinkedList<>());\n    test(2, new PriorityQueue<>());\n    test(3, new ArrayBlockingQueue<>(count));\n    test(4, new ConcurrentLinkedQueue<>());\n    test(5, new LinkedBlockingQueue<>());\n    test(6, new PriorityBlockingQueue<>());\n    test(7, new ArrayDeque<>());\n    test(8, new ConcurrentLinkedDeque<>());\n    test(9, new LinkedBlockingDeque<>());\n    test(10, new LinkedTransferQueue<>());\n    test(11, new SynchronousQueue<>());\n  }\n}\n/* Output:\n1: one two three four five six seven eight nine ten\n2: eight five four nine one seven six ten three two\n3: one two three four five six seven eight nine ten\n4: one two three four five six seven eight nine ten\n5: one two three four five six seven eight nine ten\n6: eight five four nine one seven six ten three two\n7: one two three four five six seven eight nine ten\n8: one two three four five six seven eight nine ten\n9: one two three four five six seven eight nine ten\n10: one two three four five six seven eight nine ten\n11:\n*/\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Deque")," \u63a5\u53e3\u4e5f\u7ee7\u627f\u81ea ",(0,r.kt)("strong",{parentName:"p"},"Queue")," \u3002 \u9664\u4f18\u5148\u7ea7\u961f\u5217\u5916\uff0c",(0,r.kt)("strong",{parentName:"p"},"Queue")," \u6309\u7167\u5143\u7d20\u7684\u63d2\u5165\u987a\u5e8f\u751f\u6210\u5143\u7d20\u3002 \u5728\u6b64\u793a\u4f8b\u4e2d\uff0c",(0,r.kt)("strong",{parentName:"p"},"SynchronousQueue")," \u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u7ed3\u679c\uff0c\u56e0\u4e3a\u5b83\u662f\u4e00\u4e2a\u963b\u585e\u961f\u5217\uff0c\u5176\u4e2d\u6bcf\u4e2a\u63d2\u5165\u64cd\u4f5c\u5fc5\u987b\u7b49\u5f85\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u6267\u884c\u76f8\u5e94\u7684\u5220\u9664\u64cd\u4f5c\uff0c\u53cd\u4e4b\u4ea6\u7136\u3002"),(0,r.kt)("h3",{id:"\u4f18\u5148\u7ea7\u961f\u5217"},"\u4f18\u5148\u7ea7\u961f\u5217"),(0,r.kt)("p",null,"\u8003\u8651\u4e00\u4e2a\u5f85\u529e\u4e8b\u9879\u5217\u8868\uff0c\u5176\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\u5305\u542b\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"String")," \u4ee5\u53ca\u4e3b\u8981\u548c\u6b21\u8981\u4f18\u5148\u7ea7\u503c\u3002\u901a\u8fc7\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"Comparable")," \u63a5\u53e3\u6765\u63a7\u5236\u6b64\u5f85\u529e\u4e8b\u9879\u5217\u8868\u7684\u987a\u5e8f\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/ToDoList.java\n// A more complex use of PriorityQueue\nimport java.util.*;\n\nclass ToDoItem implements Comparable<ToDoItem> {\n  private char primary;\n  private int secondary;\n  private String item;\n  ToDoItem(String td, char pri, int sec) {\n    primary = pri;\n    secondary = sec;\n    item = td;\n  }\n  @Override\n  public int compareTo(ToDoItem arg) {\n    if(primary > arg.primary)\n      return +1;\n    if(primary == arg.primary)\n      if(secondary > arg.secondary)\n        return +1;\n      else if(secondary == arg.secondary)\n        return 0;\n    return -1;\n  }\n  @Override\n  public String toString() {\n    return Character.toString(primary) +\n      secondary + ": " + item;\n  }\n}\n\nclass ToDoList {\n  public static void main(String[] args) {\n    PriorityQueue<ToDoItem> toDo =\n      new PriorityQueue<>();\n    toDo.add(new ToDoItem("Empty trash", \'C\', 4));\n    toDo.add(new ToDoItem("Feed dog", \'A\', 2));\n    toDo.add(new ToDoItem("Feed bird", \'B\', 7));\n    toDo.add(new ToDoItem("Mow lawn", \'C\', 3));\n    toDo.add(new ToDoItem("Water lawn", \'A\', 1));\n    toDo.add(new ToDoItem("Feed cat", \'B\', 1));\n    while(!toDo.isEmpty())\n      System.out.println(toDo.remove());\n  }\n}\n/* Output:\nA1: Water lawn\nA2: Feed dog\nB1: Feed cat\nB7: Feed bird\nC3: Mow lawn\nC4: Empty trash\n*/\n')),(0,r.kt)("p",null,"\u8fd9\u5c55\u793a\u4e86\u901a\u8fc7\u4f18\u5148\u7ea7\u961f\u5217\u81ea\u52a8\u6392\u5e8f\u5f85\u529e\u4e8b\u9879\u3002"),(0,r.kt)("h3",{id:"\u53cc\u7aef\u961f\u5217"},"\u53cc\u7aef\u961f\u5217"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Deque")," \uff08\u53cc\u7aef\u961f\u5217\uff09\u5c31\u50cf\u4e00\u4e2a\u961f\u5217\uff0c\u4f46\u662f\u53ef\u4ee5\u4ece\u4efb\u4e00\u7aef\u6dfb\u52a0\u548c\u5220\u9664\u5143\u7d20\u3002 Java 6\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Deque")," \u6dfb\u52a0\u4e86\u4e00\u4e2a\u663e\u5f0f\u63a5\u53e3\u3002\u4ee5\u4e0b\u662f\u5bf9\u5b9e\u73b0\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Deque")," \u7684\u7c7b\u7684\u6700\u57fa\u672c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Deque")," \u65b9\u6cd5\u7684\u6d4b\u8bd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/SimpleDeques.java\n// Very basic test of Deques\nimport java.util.*;\nimport java.util.concurrent.*;\nimport java.util.function.*;\n\nclass CountString implements Supplier<String> {\n  private int n = 0;\n  CountString() {}\n  CountString(int start) { n = start; }\n  @Override\n  public String get() {\n    return Integer.toString(n++);\n  }\n}\n\npublic class SimpleDeques {\n  static void test(Deque<String> deque) {\n    CountString s1 = new CountString(),\n                s2 = new CountString(20);\n    for(int n = 0; n < 8; n++) {\n        deque.offerFirst(s1.get());\n        deque.offerLast(s2.get()); // Same as offer()\n    }\n    System.out.println(deque);\n    String result = "";\n    while(deque.size() > 0) {\n      System.out.print(deque.peekFirst() + " ");\n      result += deque.pollFirst() + " ";\n      System.out.print(deque.peekLast() + " ");\n      result += deque.pollLast() + " ";\n    }\n    System.out.println("\\n" + result);\n  }\n  public static void main(String[] args) {\n    int count = 10;\n    System.out.println("LinkedList");\n    test(new LinkedList<>());\n    System.out.println("ArrayDeque");\n    test(new ArrayDeque<>());\n    System.out.println("LinkedBlockingDeque");\n    test(new LinkedBlockingDeque<>(count));\n    System.out.println("ConcurrentLinkedDeque");\n    test(new ConcurrentLinkedDeque<>());\n  }\n}\n/* Output:\nLinkedList\n[7, 6, 5, 4, 3, 2, 1, 0, 20, 21, 22, 23, 24, 25, 26,\n27]\n7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20\n7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20\nArrayDeque\n[7, 6, 5, 4, 3, 2, 1, 0, 20, 21, 22, 23, 24, 25, 26,\n27]\n7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20\n7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20\nLinkedBlockingDeque\n[4, 3, 2, 1, 0, 20, 21, 22, 23, 24]\n4 24 3 23 2 22 1 21 0 20\n4 24 3 23 2 22 1 21 0 20\nConcurrentLinkedDeque\n[7, 6, 5, 4, 3, 2, 1, 0, 20, 21, 22, 23, 24, 25, 26,\n27]\n7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20\n7 27 6 26 5 25 4 24 3 23 2 22 1 21 0 20\n*/\n')),(0,r.kt)("p",null,"\u6211\u53ea\u4f7f\u7528\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Deque")," \u65b9\u6cd5\u7684\u201coffer\u201d\u548c\u201cpoll\u201d\u7248\u672c\uff0c\u56e0\u4e3a\u5f53 ",(0,r.kt)("strong",{parentName:"p"},"LinkedBlockingDeque")," \u7684\u5927\u5c0f\u6709\u9650\u65f6\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4e0d\u4f1a\u629b\u51fa\u5f02\u5e38\u3002\u8bf7\u6ce8\u610f\uff0c ",(0,r.kt)("strong",{parentName:"p"},"LinkedBlockingDeque")," \u4ec5\u586b\u5145\u5230\u5b83\u7684\u9650\u5236\u5927\u5c0f\u4e3a\u6b62\uff0c\u7136\u540e\u5ffd\u7565\u989d\u5916\u7684\u6dfb\u52a0\u3002"),(0,r.kt)("h2",{id:"\u7406\u89e3map"},"\u7406\u89e3Map"),(0,r.kt)("p",null,"\u6b63\u5982\u5728",(0,r.kt)("a",{parentName:"p",href:"./Collections"},"\u7b2c\u5341\u4e8c\u7ae0 \u96c6\u5408"),"\u7ae0\u8282\u4e2d\u6240\u4e86\u89e3\u5230\u7684\uff0c",(0,r.kt)("strong",{parentName:"p"},"Map"),"\uff08\u4e5f\u79f0\u4e3a ",(0,r.kt)("em",{parentName:"p"},"\u5173\u8054\u6570\u7ec4")," \uff09\u7ef4\u62a4\u952e\u503c\u5173\u8054\uff08\u5bf9\uff09\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528\u952e\u6765\u67e5\u627e\u503c\u3002\u6807\u51c6 Java \u5e93\u5305\u542b\u4e0d\u540c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u57fa\u672c\u5b9e\u73b0\uff0c\u4f8b\u5982 ",(0,r.kt)("strong",{parentName:"p"},"HashMap")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"TreeMap")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"LinkedHashMap")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"WeakHashMap")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"ConcurrentHashMap")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"IdentityHashMap")," \u3002 \u5b83\u4eec\u90fd\u5177\u6709\u76f8\u540c\u7684\u57fa\u672c ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u63a5\u53e3\uff0c\u4f46\u5b83\u4eec\u7684\u884c\u4e3a\u4e0d\u540c\uff0c\u5305\u62ec\u6548\u7387\uff0c\u952e\u503c\u5bf9\u7684\u4fdd\u5b58\u987a\u5e8f\u548c\u5448\u73b0\u987a\u5e8f\uff0c\u4fdd\u5b58\u5bf9\u8c61\u7684\u65f6\u95f4\uff0c\u5982\u4f55\u5728\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u4e2d\u5de5\u4f5c\uff0c\u4ee5\u53ca\u5982\u4f55\u786e\u5b9a\u952e\u7684\u76f8\u7b49\u6027\u3002 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u63a5\u53e3\u7684\u5b9e\u73b0\u6570\u91cf\u5e94\u8be5\u544a\u8bc9\u4f60\u4e00\u4e9b\u5173\u4e8e\u6b64\u5de5\u5177\u91cd\u8981\u6027\u7684\u4fe1\u606f\u3002"),(0,r.kt)("p",null,"\u4e3a\u4e86\u66f4\u6df1\u5165\u5730\u4e86\u89e3 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \uff0c\u5b66\u4e60\u5982\u4f55\u6784\u9020\u5173\u8054\u6570\u7ec4\u4f1a\u5f88\u6709\u5e2e\u52a9\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u5b9e\u73b0\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/AssociativeArray.java\n// Associates keys with values\n\npublic class AssociativeArray<K, V> {\n  private Object[][] pairs;\n  private int index;\n  public AssociativeArray(int length) {\n    pairs = new Object[length][2];\n  }\n  public void put(K key, V value) {\n    if(index >= pairs.length)\n      throw new ArrayIndexOutOfBoundsException();\n    pairs[index++] = new Object[]{ key, value };\n  }\n  @SuppressWarnings("unchecked")\n  public V get(K key) {\n    for(int i = 0; i < index; i++)\n      if(key.equals(pairs[i][0]))\n        return (V)pairs[i][1];\n    return null; // Did not find key\n  }\n  @Override\n  public String toString() {\n    StringBuilder result = new StringBuilder();\n    for(int i = 0; i < index; i++) {\n      result.append(pairs[i][0].toString());\n      result.append(" : ");\n      result.append(pairs[i][1].toString());\n      if(i < index - 1)\n        result.append("\\n");\n    }\n    return result.toString();\n  }\n  public static void main(String[] args) {\n    AssociativeArray<String,String> map =\n      new AssociativeArray<>(6);\n    map.put("sky", "blue");\n    map.put("grass", "green");\n    map.put("ocean", "dancing");\n    map.put("tree", "tall");\n    map.put("earth", "brown");\n    map.put("sun", "warm");\n    try {\n      map.put("extra", "object"); // Past the end\n    } catch(ArrayIndexOutOfBoundsException e) {\n      System.out.println("Too many objects!");\n    }\n    System.out.println(map);\n    System.out.println(map.get("ocean"));\n  }\n}\n/* Output:\nToo many objects!\nsky : blue\ngrass : green\nocean : dancing\ntree : tall\nearth : brown\nsun : warm\ndancing\n*/\n')),(0,r.kt)("p",null,"\u5173\u8054\u6570\u7ec4\u4e2d\u7684\u57fa\u672c\u65b9\u6cd5\u662f ",(0,r.kt)("inlineCode",{parentName:"p"},"put()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \uff0c\u4f46\u4e3a\u4e86\u4fbf\u4e8e\u663e\u793a\uff0c\u91cd\u5199\u4e86 ",(0,r.kt)("inlineCode",{parentName:"p"},"toString()")," \u65b9\u6cd5\u4ee5\u6253\u5370\u952e\u503c\u5bf9\u3002\u4e3a\u4e86\u663e\u793a\u5b83\u7684\u5de5\u4f5c\u539f\u7406\uff0c\u4e3b\u65b9\u6cd5\u52a0\u8f7d\u4e00\u4e2a\u5e26\u6709\u5b57\u7b26\u4e32\u5bf9\u7684 ",(0,r.kt)("strong",{parentName:"p"},"AssociativeArray")," \u5e76\u6253\u5370\u751f\u6210\u7684\u6620\u5c04\uff0c\u7136\u540e\u8c03\u7528\u5176\u4e2d\u4e00\u4e2a\u503c\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u65b9\u6cd5\u3002"),(0,r.kt)("p",null,"\u8981\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u65b9\u6cd5\uff0c\u53ef\u4ee5\u4f20\u5165\u8981\u67e5\u627e\u7684 ",(0,r.kt)("strong",{parentName:"p"},"key")," \uff0c\u5b83\u5c06\u751f\u6210\u76f8\u5173\u8054\u7684\u503c\u4f5c\u4e3a\u7ed3\u679c\uff0c\u5982\u679c\u627e\u4e0d\u5230\u5219\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"p"},"null")," \u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u65b9\u6cd5\u4f7f\u7528\u53ef\u80fd\u662f\u6548\u7387\u6700\u4f4e\u7684\u65b9\u6cd5\u6765\u5b9a\u4f4d\u503c\uff1a\u4ece\u6570\u7ec4\u7684\u5934\u90e8\u5f00\u59cb\u5e76\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"equals()")," \u6765\u6bd4\u8f83\u952e\u3002\u4f46\u8fd9\u91cc\u662f\u4fa7\u91cd\u4e8e\u7b80\u5355\uff0c\u800c\u4e0d\u662f\u6548\u7387\u3002"),(0,r.kt)("p",null,"\u8fd9\u4e2a\u7248\u672c\u5f88\u6709\u542f\u53d1\u6027\uff0c\u4f46\u5b83\u4e0d\u662f\u5f88\u6709\u6548\uff0c\u800c\u4e14\u5b83\u53ea\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u5927\u5c0f\uff0c\u8fd9\u662f\u4e0d\u7075\u6d3b\u7684\u3002\u5e78\u8fd0\u7684\u662f\uff0c ",(0,r.kt)("strong",{parentName:"p"},"java.util")," \u4e2d\u7684\u90a3\u4e9b ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u6ca1\u6709\u8fd9\u4e9b\u95ee\u9898\u3002"),(0,r.kt)("h3",{id:"\u6027\u80fd"},"\u6027\u80fd"),(0,r.kt)("p",null,"\u6027\u80fd\u662f ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u7684\u57fa\u672c\u95ee\u9898\uff0c\u5728 ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u4e2d\u4f7f\u7528\u7ebf\u6027\u65b9\u6cd5\u641c\u7d22\u4e00\u4e2a\u952e\u65f6\u4f1a\u975e\u5e38\u6162\u3002\u8fd9\u5c31\u662f ",(0,r.kt)("strong",{parentName:"p"},"HashMap")," \u8981\u52a0\u901f\u7684\u5730\u65b9\u3002\u5b83\u4f7f\u7528\u4e00\u4e2a\u79f0\u4e3a ",(0,r.kt)("em",{parentName:"p"},"\u54c8\u5e0c\u7801")," \u7684\u7279\u6b8a\u503c\u6765\u66ff\u4ee3\u6162\u901f\u641c\u7d22\u4e00\u4e2a\u952e\u3002\u54c8\u5e0c\u7801\u662f\u4e00\u79cd\u4ece\u76f8\u5173\u5bf9\u8c61\u4e2d\u83b7\u53d6\u4e00\u4e9b\u4fe1\u606f\u5e76\u5c06\u5176\u8f6c\u6362\u4e3a\u8be5\u5bf9\u8c61\u7684\u201c\u76f8\u5bf9\u552f\u4e00\u201d ",(0,r.kt)("strong",{parentName:"p"},"int")," \u7684\u65b9\u6cd5\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u662f\u6839\u7c7b ",(0,r.kt)("strong",{parentName:"p"},"Object")," \u4e2d\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u56e0\u6b64\u6240\u6709 Java \u5bf9\u8c61\u90fd\u53ef\u4ee5\u751f\u6210\u54c8\u5e0c\u7801\u3002 ",(0,r.kt)("strong",{parentName:"p"},"HashMap")," \u83b7\u53d6\u5bf9\u8c61\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u5e76\u4f7f\u7528\u5b83\u6765\u5feb\u901f\u641c\u7d22\u952e\u3002\u8fd9\u5c31\u4f7f\u5f97\u6027\u80fd\u6709\u4e86\u663e\u8457\u7684\u63d0\u5347\u3002",(0,r.kt)("sup",{parentName:"p",id:"fnref-3"},(0,r.kt)("a",{parentName:"sup",href:"#fn-3",className:"footnote-ref"},"3"))),(0,r.kt)("p",null,"\u4ee5\u4e0b\u662f\u57fa\u672c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u5b9e\u73b0\u3002 ",(0,r.kt)("strong",{parentName:"p"},"HashMap"),"\u4e0a\u7684\u661f\u53f7\u8868\u793a\uff0c\u5728\u6ca1\u6709\u5176\u4ed6\u7ea6\u675f\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd9\u5e94\u8be5\u662f\u4f60\u7684\u9ed8\u8ba4\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u9488\u5bf9\u901f\u5ea6\u8fdb\u884c\u4e86\u4f18\u5316\u3002\u5176\u4ed6\u5b9e\u73b0\u5f3a\u8c03\u5176\u4ed6\u7279\u6027\uff0c\u56e0\u6b64\u4e0d\u5982 ",(0,r.kt)("strong",{parentName:"p"},"HashMap")," \u5feb\u3002"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"th"},"Map")," \u5b9e\u73b0"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u63cf\u8ff0"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"HashMap","*")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u57fa\u4e8e\u54c8\u5e0c\u8868\u7684\u5b9e\u73b0\u3002\uff08\u4f7f\u7528\u6b64\u7c7b\u6765\u4ee3\u66ff ",(0,r.kt)("strong",{parentName:"td"},"Hashtable")," \u3002\uff09\u4e3a\u63d2\u5165\u548c\u5b9a\u4f4d\u952e\u503c\u5bf9\u63d0\u4f9b\u4e86\u5e38\u6570\u65f6\u95f4\u6027\u80fd\u3002\u53ef\u4ee5\u901a\u8fc7\u6784\u9020\u65b9\u6cd5\u8c03\u6574\u6027\u80fd\uff0c\u8fd9\u4e9b\u6784\u9020\u65b9\u6cd5\u5141\u8bb8\u4f60\u8bbe\u7f6e\u54c8\u5e0c\u8868\u7684\u5bb9\u91cf\u548c\u88c5\u586b\u56e0\u5b50\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"LinkedHashMap")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4e0e ",(0,r.kt)("strong",{parentName:"td"},"HashMap")," \u7c7b\u4f3c\uff0c\u4f46\u662f\u5f53\u904d\u5386\u65f6\uff0c\u53ef\u4ee5\u6309\u63d2\u5165\u987a\u5e8f\u6216\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\uff08LRU\uff09\u987a\u5e8f\u83b7\u53d6\u952e\u503c\u5bf9\u3002\u53ea\u6bd4 ",(0,r.kt)("strong",{parentName:"td"},"HashMap")," \u7565\u6162\uff0c\u4e00\u4e2a\u4f8b\u5916\u662f\u5728\u8fed\u4ee3\u65f6\uff0c\u7531\u4e8e\u5176\u4f7f\u7528\u94fe\u8868\u7ef4\u62a4\u5185\u90e8\u987a\u5e8f\uff0c\u6240\u4ee5\u4f1a\u66f4\u5feb\u4e9b\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"TreeMap")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u57fa\u4e8e\u7ea2\u9ed1\u6811\u7684\u5b9e\u73b0\u3002\u5f53\u67e5\u770b\u952e\u6216\u952e\u503c\u5bf9\u65f6\uff0c\u5b83\u4eec\u6309\u6392\u5e8f\u987a\u5e8f\uff08\u7531 ",(0,r.kt)("strong",{parentName:"td"},"Comparable")," \u6216 ",(0,r.kt)("strong",{parentName:"td"},"Comparator")," \u786e\u5b9a\uff09\u3002 ",(0,r.kt)("strong",{parentName:"td"},"TreeMap")," \u7684\u4fa7\u91cd\u70b9\u662f\u6309\u6392\u5e8f\u987a\u5e8f\u83b7\u5f97\u7ed3\u679c\u3002 ",(0,r.kt)("strong",{parentName:"td"},"TreeMap")," \u662f\u552f\u4e00\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"td"},"subMap()")," \u65b9\u6cd5\u7684 ",(0,r.kt)("strong",{parentName:"td"},"Map")," \uff0c\u5b83\u8fd4\u56de\u7ea2\u9ed1\u6811\u7684\u4e00\u90e8\u5206\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"WeakHashMap")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4e00\u79cd\u5177\u6709 ",(0,r.kt)("em",{parentName:"td"},"\u5f31\u952e"),"\uff08weak keys\uff09 \u7684 ",(0,r.kt)("strong",{parentName:"td"},"Map")," \uff0c\u4e3a\u4e86\u89e3\u51b3\u67d0\u4e9b\u7c7b\u578b\u7684\u95ee\u9898\uff0c\u5b83\u5141\u8bb8\u91ca\u653e ",(0,r.kt)("strong",{parentName:"td"},"Map")," \u6240\u5f15\u7528\u7684\u5bf9\u8c61\u3002\u5982\u679c\u5728 ",(0,r.kt)("strong",{parentName:"td"},"Map")," \u5916\u6ca1\u6709\u5bf9\u7279\u5b9a\u952e\u7684\u5f15\u7528\uff0c\u5219\u53ef\u4ee5\u5bf9\u8be5\u952e\u8fdb\u884c\u5783\u573e\u56de\u6536\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"ConcurrentHashMap")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4e0d\u4f7f\u7528\u540c\u6b65\u9501\u5b9a\u7684\u7ebf\u7a0b\u5b89\u5168 ",(0,r.kt)("strong",{parentName:"td"},"Map")," \u3002\u8fd9\u5728",(0,r.kt)("a",{parentName:"td",href:"./Concurrent-Programming"},"\u7b2c\u4e8c\u5341\u56db\u7ae0 \u5e76\u53d1\u7f16\u7a0b")," \u4e00\u7ae0\u4e2d\u8ba8\u8bba\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("strong",{parentName:"td"},"IdentityHashMap")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"td"},"==")," \u800c\u4e0d\u662f ",(0,r.kt)("inlineCode",{parentName:"td"},"equals()")," \u6765\u6bd4\u8f83\u952e\u3002\u4ec5\u7528\u4e8e\u89e3\u51b3\u7279\u6b8a\u95ee\u9898\uff0c\u4e0d\u9002\u7528\u4e8e\u4e00\u822c\u7528\u9014\u3002")))),(0,r.kt)("p",null,"\u6563\u5217\u662f\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u4e2d\u5b58\u50a8\u5143\u7d20\u7684\u6700\u5e38\u7528\u65b9\u6cd5\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Map")," \u4e2d\u4f7f\u7528\u7684\u952e\u7684\u8981\u6c42\u4e0e ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u4e2d\u7684\u5143\u7d20\u7684\u8981\u6c42\u76f8\u540c\u3002\u53ef\u4ee5\u5728 ",(0,r.kt)("strong",{parentName:"p"},"TypesForSets.java")," \u4e2d\u770b\u5230\u8fd9\u4e9b\u3002\u4efb\u4f55\u952e\u5fc5\u987b\u5177\u6709 ",(0,r.kt)("inlineCode",{parentName:"p"},"equals()")," \u65b9\u6cd5\u3002\u5982\u679c\u952e\u7528\u4e8e\u6563\u5217\u6620\u5c04\uff0c\u5219\u5b83\u8fd8\u5fc5\u987b\u5177\u6709\u6b63\u786e\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u65b9\u6cd5\u3002\u5982\u679c\u952e\u5728 ",(0,r.kt)("strong",{parentName:"p"},"TreeMap")," \u4e2d\u4f7f\u7528\uff0c\u5219\u5fc5\u987b\u5b9e\u73b0 ",(0,r.kt)("strong",{parentName:"p"},"Comparable")," \u63a5\u53e3\u3002"),(0,r.kt)("p",null,"\u4ee5\u4e0b\u793a\u4f8b\u4f7f\u7528\u5148\u524d\u5b9a\u4e49\u7684 ",(0,r.kt)("strong",{parentName:"p"},"CountMap")," \u6d4b\u8bd5\u6570\u636e\u96c6\u663e\u793a\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u63a5\u53e3\u53ef\u7528\u7684\u64cd\u4f5c\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/MapOps.java\n// Things you can do with Maps\nimport java.util.concurrent.*;\nimport java.util.*;\nimport onjava.*;\n\npublic class MapOps {\n  public static\n  void printKeys(Map<Integer,String> map) {\n    System.out.print("Size = " + map.size() + ", ");\n    System.out.print("Keys: ");\n    // Produce a Set of the keys:\n    System.out.println(map.keySet());\n  }\n  public static\n  void test(Map<Integer,String> map) {\n    System.out.println(\n      map.getClass().getSimpleName());\n    map.putAll(new CountMap(25));\n    // Map has \'Set\' behavior for keys:\n    map.putAll(new CountMap(25));\n    printKeys(map);\n    // Producing a Collection of the values:\n    System.out.print("Values: ");\n    System.out.println(map.values());\n    System.out.println(map);\n    System.out.println("map.containsKey(11): " +\n      map.containsKey(11));\n    System.out.println(\n      "map.get(11): " + map.get(11));\n    System.out.println("map.containsValue(\\"F0\\"): "\n      + map.containsValue("F0"));\n    Integer key = map.keySet().iterator().next();\n    System.out.println("First key in map: " + key);\n    map.remove(key);\n    printKeys(map);\n    map.clear();\n    System.out.println(\n      "map.isEmpty(): " + map.isEmpty());\n    map.putAll(new CountMap(25));\n    // Operations on the Set change the Map:\n    map.keySet().removeAll(map.keySet());\n    System.out.println(\n      "map.isEmpty(): " + map.isEmpty());\n  }\n  public static void main(String[] args) {\n    test(new HashMap<>());\n    test(new TreeMap<>());\n    test(new LinkedHashMap<>());\n    test(new IdentityHashMap<>());\n    test(new ConcurrentHashMap<>());\n    test(new WeakHashMap<>());\n  }\n}\n/* Output: (First 11 Lines)\nHashMap\nSize = 25, Keys: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\nValues: [A0, B0, C0, D0, E0, F0, G0, H0, I0, J0, K0,\nL0, M0, N0, O0, P0, Q0, R0, S0, T0, U0, V0, W0, X0, Y0]\n{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0,\n9=J0, 10=K0, 11=L0, 12=M0, 13=N0, 14=O0, 15=P0, 16=Q0,\n17=R0, 18=S0, 19=T0, 20=U0, 21=V0, 22=W0, 23=X0, 24=Y0}\nmap.containsKey(11): true\nmap.get(11): L0\nmap.containsValue("F0"): true\nFirst key in map: 0\nSize = 24, Keys: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\n12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24]\nmap.isEmpty(): true\nmap.isEmpty(): true\n                  ...\n*/\n')),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"printKeys()")," \u65b9\u6cd5\u6f14\u793a\u4e86\u5982\u4f55\u751f\u6210 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u7684 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u89c6\u56fe\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"keySet()")," \u65b9\u6cd5\u751f\u6210\u4e00\u4e2a\u7531 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u4e2d\u7684\u952e\u7ec4\u6210\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u3002 \u6253\u5370 ",(0,r.kt)("inlineCode",{parentName:"p"},"values()")," \u65b9\u6cd5\u7684\u7ed3\u679c\u4f1a\u751f\u6210\u4e00\u4e2a\u5305\u542b ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u4e2d\u6240\u6709\u503c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u3002\uff08\u8bf7\u6ce8\u610f\uff0c\u952e\u5fc5\u987b\u662f\u552f\u4e00\u7684\uff0c\u4f46\u503c\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u9879\u3002\uff09\u7531\u4e8e\u8fd9\u4e9b ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u7531 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u652f\u6301\uff0c\u56e0\u6b64 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u4e2d\u7684\u4efb\u4f55\u66f4\u6539\u90fd\u4f1a\u53cd\u6620\u5728\u6240\u5173\u8054\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u4e2d\u3002"),(0,r.kt)("p",null,"\u7a0b\u5e8f\u7684\u5176\u4f59\u90e8\u5206\u63d0\u4f9b\u4e86\u6bcf\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u64cd\u4f5c\u7684\u7b80\u5355\u793a\u4f8b\uff0c\u5e76\u6d4b\u8bd5\u4e86\u6bcf\u79cd\u57fa\u672c\u7c7b\u578b\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u3002"),(0,r.kt)("h3",{id:"sortedmap"},"SortedMap"),(0,r.kt)("p",null,"\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"SortedMap")," \uff08\u7531 ",(0,r.kt)("strong",{parentName:"p"},"TreeMap")," \u6216 ",(0,r.kt)("strong",{parentName:"p"},"ConcurrentSkipListMap")," \u5b9e\u73b0\uff09\uff0c\u952e\u4fdd\u8bc1\u6309\u6392\u5e8f\u987a\u5e8f\uff0c\u8fd9\u5141\u8bb8\u5728 ",(0,r.kt)("strong",{parentName:"p"},"SortedMap")," \u63a5\u53e3\u4e2d\u4f7f\u7528\u8fd9\u4e9b\u65b9\u6cd5\u6765\u63d0\u4f9b\u5176\u4ed6\u529f\u80fd\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"Comparator comparator()")," \uff1a\u751f\u6210\u7528\u4e8e\u6b64 ",(0,r.kt)("strong",{parentName:"li"},"Map")," \u7684\u6bd4\u8f83\u5668\uff0c ",(0,r.kt)("strong",{parentName:"li"},"null")," \u8868\u793a\u81ea\u7136\u6392\u5e8f\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T firstKey()")," \uff1a\u8fd4\u56de\u7b2c\u4e00\u4e2a\u952e\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"T lastKey()")," \uff1a\u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u952e\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SortedMap subMap(fromKey\uff0ctoKey)")," \uff1a\u751f\u6210\u6b64 ",(0,r.kt)("strong",{parentName:"li"},"Map")," \u7684\u89c6\u56fe\uff0c\u5176\u4e2d\u952e\u4ece ",(0,r.kt)("strong",{parentName:"li"},"fromKey"),"\uff08\u5305\u62ec\uff09\uff0c\u5230 ",(0,r.kt)("strong",{parentName:"li"},"toKey")," \uff08\u4e0d\u5305\u62ec\uff09\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SortedMap headMap(toKey)")," \uff1a\u4f7f\u7528\u5c0f\u4e8e ",(0,r.kt)("strong",{parentName:"li"},"toKey")," \u7684\u952e\u751f\u6210\u6b64 ",(0,r.kt)("strong",{parentName:"li"},"Map")," \u7684\u89c6\u56fe\u3002"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"SortedMap tailMap(fromKey)")," \uff1a\u4f7f\u7528\u5927\u4e8e\u6216\u7b49\u4e8e ",(0,r.kt)("strong",{parentName:"li"},"fromKey")," \u7684\u952e\u751f\u6210\u6b64 ",(0,r.kt)("strong",{parentName:"li"},"Map")," \u7684\u89c6\u56fe\u3002")),(0,r.kt)("p",null,"\u8fd9\u662f\u4e00\u4e2a\u7c7b\u4f3c\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"SortedSetDemo.java")," \u7684\u793a\u4f8b\uff0c\u663e\u793a\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"TreeMap")," \u7684\u8fd9\u79cd\u989d\u5916\u884c\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// collectiontopics/SortedMapDemo.java\n// What you can do with a TreeMap\nimport java.util.*;\nimport onjava.*;\n\npublic class SortedMapDemo {\n  public static void main(String[] args) {\n    TreeMap<Integer,String> sortedMap =\n      new TreeMap<>(new CountMap(10));\n    System.out.println(sortedMap);\n    Integer low = sortedMap.firstKey();\n    Integer high = sortedMap.lastKey();\n    System.out.println(low);\n    System.out.println(high);\n    Iterator<Integer> it =\n      sortedMap.keySet().iterator();\n    for(int i = 0; i <= 6; i++) {\n      if(i == 3) low = it.next();\n      if(i == 6) high = it.next();\n      else it.next();\n    }\n    System.out.println(low);\n    System.out.println(high);\n    System.out.println(sortedMap.subMap(low, high));\n    System.out.println(sortedMap.headMap(high));\n    System.out.println(sortedMap.tailMap(low));\n  }\n}\n/* Output:\n{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0,\n9=J0}\n0\n9\n3\n7\n{3=D0, 4=E0, 5=F0, 6=G0}\n{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0}\n{3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0, 9=J0}\n*/\n")),(0,r.kt)("p",null,"\u8fd9\u91cc\uff0c\u952e\u503c\u5bf9\u6309\u7167\u952e\u7684\u6392\u5e8f\u987a\u5e8f\u8fdb\u884c\u6392\u5e8f\u3002\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"TreeMap")," \u4e2d\u5b58\u5728\u987a\u5e8f\u611f\uff0c\u6240\u4ee5\u201c\u4f4d\u7f6e\u201d\u7684\u6982\u5ff5\u5f88\u6709\u610f\u4e49\uff0c\u56e0\u6b64\u53ef\u4ee5\u62e5\u6709\u7b2c\u4e00\u4e2a\u3001\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u6216\u5b50\u56fe\u3002"),(0,r.kt)("h3",{id:"linkedhashmap"},"LinkedHashMap"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"LinkedHashMap")," \u9488\u5bf9\u901f\u5ea6\u8fdb\u884c\u54c8\u5e0c\u5904\u7406\uff0c\u4f46\u5728\u904d\u5386\u671f\u95f4\u4e5f\u4f1a\u6309\u63d2\u5165\u987a\u5e8f\u751f\u6210\u952e\u503c\u5bf9\uff08 ",(0,r.kt)("inlineCode",{parentName:"p"},"System.out.println()")," \u53ef\u4ee5\u904d\u5386\u5b83\uff0c\u56e0\u6b64\u53ef\u4ee5\u770b\u5230\u904d\u5386\u7684\u7ed3\u679c\uff09\u3002 \u6b64\u5916\uff0c\u53ef\u4ee5\u5728\u6784\u9020\u65b9\u6cd5\u4e2d\u914d\u7f6e ",(0,r.kt)("strong",{parentName:"p"},"LinkedHashMap")," \u4ee5\u4f7f\u7528\u57fa\u4e8e\u8bbf\u95ee\u7684 ",(0,r.kt)("em",{parentName:"p"},"\u6700\u8fd1\u6700\u5c11\u4f7f\u7528"),"\uff08LRU\uff09 \u7b97\u6cd5\uff0c\u56e0\u6b64\u672a\u8bbf\u95ee\u7684\u5143\u7d20\uff08\u56e0\u6b64\u662f\u5220\u9664\u7684\u5019\u9009\u8005\uff09\u4f1a\u51fa\u73b0\u5728\u5217\u8868\u7684\u524d\u9762\u3002 \u8fd9\u6837\u53ef\u4ee5\u8f7b\u677e\u521b\u5efa\u4e00\u4e2a\u80fd\u591f\u5b9a\u671f\u6e05\u7406\u4ee5\u8282\u7701\u7a7a\u95f4\u7684\u7a0b\u5e8f\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u663e\u793a\u8fd9\u4e24\u4e2a\u529f\u80fd\u7684\u7b80\u5355\u793a\u4f8b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// collectiontopics/LinkedHashMapDemo.java\n// What you can do with a LinkedHashMap\nimport java.util.*;\nimport onjava.*;\n\npublic class LinkedHashMapDemo {\n  public static void main(String[] args) {\n    LinkedHashMap<Integer,String> linkedMap =\n      new LinkedHashMap<>(new CountMap(9));\n    System.out.println(linkedMap);\n    // Least-recently-used order:\n    linkedMap =\n      new LinkedHashMap<>(16, 0.75f, true);\n    linkedMap.putAll(new CountMap(9));\n    System.out.println(linkedMap);\n    for(int i = 0; i < 6; i++)\n      linkedMap.get(i);\n    System.out.println(linkedMap);\n    linkedMap.get(0);\n    System.out.println(linkedMap);\n  }\n}\n/* Output:\n{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0}\n{0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 6=G0, 7=H0, 8=I0}\n{6=G0, 7=H0, 8=I0, 0=A0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0}\n{6=G0, 7=H0, 8=I0, 1=B0, 2=C0, 3=D0, 4=E0, 5=F0, 0=A0}\n*/\n")),(0,r.kt)("p",null,"\u8fd9\u4e9b\u952e\u503c\u5bf9\u786e\u5b9e\u662f\u6309\u7167\u63d2\u5165\u987a\u5e8f\u8fdb\u884c\u904d\u5386\uff0c\u5373\u4f7f\u5bf9\u4e8eLRU\u7248\u672c\u4e5f\u662f\u5982\u6b64\u3002 \u4f46\u662f\uff0c\u5728LRU\u7248\u672c\u4e2d\u8bbf\u95ee\u524d\u516d\u9879\uff08\u4ec5\u9650\uff09\u540e\uff0c\u6700\u540e\u4e09\u9879\u5c06\u79fb\u81f3\u5217\u8868\u7684\u524d\u9762\u3002\u7136\u540e\uff0c\u5f53\u518d\u6b21\u8bbf\u95ee\u201c ",(0,r.kt)("strong",{parentName:"p"},"0")," \u201d\u540e\uff0c\u5b83\u79fb\u52a8\u5230\u4e86\u5217\u8868\u7684\u540e\u9762\u3002"),(0,r.kt)("h2",{id:"\u96c6\u5408\u5de5\u5177\u7c7b"},"\u96c6\u5408\u5de5\u5177\u7c7b"),(0,r.kt)("p",null,"\u96c6\u5408\u6709\u8bb8\u591a\u72ec\u7acb\u7684\u5b9e\u7528\u5de5\u5177\u7a0b\u5e8f\uff0c\u5728 ",(0,r.kt)("strong",{parentName:"p"},"java.util.Collections")," \u4e2d\u8868\u793a\u4e3a\u9759\u6001\u65b9\u6cd5\u3002\u4e4b\u524d\u5df2\u7ecf\u89c1\u8fc7\u5176\u4e2d\u4e00\u4e9b\uff0c\u4f8b\u5982 ",(0,r.kt)("inlineCode",{parentName:"p"},"addAll()")," \uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"reverseOrder()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"binarySearch()")," \u3002\u4ee5\u4e0b\u662f\u5176\u4ed6\u5185\u5bb9\uff08\u540c\u6b65\u548c\u4e0d\u53ef\u4fee\u6539\u7684\u5b9e\u7528\u5de5\u5177\u7a0b\u5e8f\u5c06\u5728\u540e\u9762\u7684\u7ae0\u8282\u4e2d\u4ecb\u7ecd\uff09\u3002\u5728\u6b64\u8868\u4e2d\uff0c\u5728\u9700\u8981\u7684\u65f6\u5019\u4f7f\u7528\u4e86\u6cdb\u578b\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"\u65b9\u6cd5"),(0,r.kt)("th",{parentName:"tr",align:"left"},"\u63cf\u8ff0"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"checkedCollection(Collection","<","T",">"," c, Class","<","T",">"," type)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"checkedList(List","<","T",">"," list, Class","<","T",">"," type)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"checkedMap(Map","<","K, V",">"," m, Class","<","K",">"," keyType, Class","<","V",">"," valueType)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"checkedSet(Set","<","T",">"," s, Class","<","T",">"," type)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"checkedSortedMap(SortedMap","<","K, V",">"," m, Class","<","K",">"," keyType, Class","<","V",">"," valueType)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"checkedSortedSet(SortedSet","<","T",">"," s, Class","<","T",">"," type)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u751f\u6210 ",(0,r.kt)("strong",{parentName:"td"},"Collection")," \u7684\u52a8\u6001\u7c7b\u578b\u5b89\u5168\u89c6\u56fe\u6216 ",(0,r.kt)("strong",{parentName:"td"},"Collection")," \u7684\u7279\u5b9a\u5b50\u7c7b\u578b\u3002 \u5f53\u65e0\u6cd5\u4f7f\u7528\u9759\u6001\u68c0\u67e5\u7248\u672c\u65f6\u4f7f\u7528\u8fd9\u4e2a\u7248\u672c\u3002 ",(0,r.kt)("br",null),(0,r.kt)("br",null)," \u8fd9\u4e9b\u65b9\u6cd5\u7684\u4f7f\u7528\u5728",(0,r.kt)("a",{parentName:"td",href:"./Polymorphism"},"\u7b2c\u4e5d\u7ae0 \u591a\u6001"),"\u7ae0\u8282\u7684\u201c\u52a8\u6001\u7c7b\u578b\u5b89\u5168\u201d\u6807\u9898\u4e0b\u8fdb\u884c\u4e86\u5c55\u793a\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"max(Collection)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"min(Collection)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"td"},"Collection")," \u4e2d\u5bf9\u8c61\u7684\u81ea\u7136\u6bd4\u8f83\u65b9\u6cd5\u751f\u6210\u53c2\u6570\u96c6\u5408\u4e2d\u7684\u6700\u5927\u6216\u6700\u5c0f\u5143\u7d20\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"max(Collection, Comparator)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"min(Collection, Comparator)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"td"},"Comparator")," \u6307\u5b9a\u7684\u6bd4\u8f83\u65b9\u6cd5\u751f\u6210\u53c2\u6570\u96c6\u5408\u4e2d\u7684\u6700\u5927\u6216\u6700\u5c0f\u5143\u7d20\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"indexOfSubList(List source, List target)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"target")," \u5728 ",(0,r.kt)("strong",{parentName:"td"},"source")," \u5185\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u8d77\u59cb\u7d22\u5f15\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de -1\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"lastIndexOfSubList(List source, List target)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"target")," \u5728 ",(0,r.kt)("strong",{parentName:"td"},"source")," \u5185\u6700\u540e\u4e00\u6b21\u51fa\u73b0\u7684\u8d77\u59cb\u7d22\u5f15\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u5219\u8fd4\u56de -1\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"replaceAll(List","<","T",">"," list, T oldVal, T newVal)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u7528 ",(0,r.kt)("strong",{parentName:"td"},"newVal")," \u66ff\u6362\u5217\u8868\u4e2d\u6240\u6709\u7684 ",(0,r.kt)("strong",{parentName:"td"},"oldVal")," \u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"reverse(List)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u53cd\u8f6c\u5217\u8868")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"reverseOrder()")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"reverseOrder(Comparator","<","T",">",")")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"td"},"Comparator")," \uff0c\u5b83\u4e0e\u96c6\u5408\u4e2d\u5b9e\u73b0\u4e86 ",(0,r.kt)("strong",{parentName:"td"},"comparable","<","T",">")," \u63a5\u53e3\u7684\u5bf9\u8c61\u7684\u81ea\u7136\u987a\u5e8f\u76f8\u53cd\u3002\u7b2c\u4e8c\u4e2a\u7248\u672c\u98a0\u5012\u4e86\u6240\u63d0\u4f9b\u7684 ",(0,r.kt)("strong",{parentName:"td"},"Comparator")," \u7684\u987a\u5e8f\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"rotate(List, int distance)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5c06\u6240\u6709\u5143\u7d20\u5411\u524d\u79fb\u52a8 ",(0,r.kt)("strong",{parentName:"td"},"distance")," \uff0c\u5c06\u5c3e\u90e8\u7684\u5143\u7d20\u79fb\u5230\u5f00\u5934\u3002\uff08\u8bd1\u8005\u6ce8\uff1a\u5373\u5faa\u73af\u79fb\u52a8\uff09")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"shuffle(List)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"shuffle(List, Random)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u968f\u673a\u7f6e\u6362\u6307\u5b9a\u5217\u8868\uff08\u5373\u6253\u4e71\u987a\u5e8f\uff09\u3002\u7b2c\u4e00\u4e2a\u7248\u672c\u4f7f\u7528\u4e86\u9ed8\u8ba4\u7684\u968f\u673a\u5316\u6e90\uff0c\u6216\u8005\u4e5f\u53ef\u4ee5\u4f7f\u7528\u7b2c\u4e8c\u4e2a\u7248\u672c\uff0c\u63d0\u4f9b\u81ea\u5df1\u7684\u968f\u673a\u5316\u6e90\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"sort(List","<","T",">",")")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"sort(List","<","T",">",", Comparator","<","? super T",">"," c)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u7b2c\u4e00\u4e2a\u7248\u672c\u4f7f\u7528\u5143\u7d20\u7684\u81ea\u7136\u987a\u5e8f\u6392\u5e8f\u8be5 ",(0,r.kt)("strong",{parentName:"td"},"List","<","T",">")," \u3002\u7b2c\u4e8c\u4e2a\u7248\u672c\u6839\u636e\u63d0\u4f9b\u7684 ",(0,r.kt)("strong",{parentName:"td"},"Comparator")," \u6392\u5e8f\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"copy(List","<","? super T",">"," dest, List","<","? extends T",">"," src)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5c06 ",(0,r.kt)("strong",{parentName:"td"},"src")," \u4e2d\u7684\u5143\u7d20\u590d\u5236\u5230 ",(0,r.kt)("strong",{parentName:"td"},"dest")," \u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"swap(List, int i, int j)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4ea4\u6362 ",(0,r.kt)("strong",{parentName:"td"},"List")," \u4e2d\u4f4d\u7f6e ",(0,r.kt)("strong",{parentName:"td"},"i")," \u548c \u4f4d\u7f6e ",(0,r.kt)("strong",{parentName:"td"},"j")," \u7684\u5143\u7d20\u3002\u53ef\u80fd\u6bd4\u4f60\u624b\u5de5\u7f16\u5199\u7684\u901f\u5ea6\u5feb\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"fill(List","<","? super T",">",", T x)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u7528 ",(0,r.kt)("strong",{parentName:"td"},"x")," \u66ff\u6362 ",(0,r.kt)("strong",{parentName:"td"},"List")," \u4e2d\u7684\u6240\u6709\u5143\u7d20\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"nCopies(int n, T x)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de\u5927\u5c0f\u4e3a ",(0,r.kt)("strong",{parentName:"td"},"n")," \u7684\u4e0d\u53ef\u53d8 ",(0,r.kt)("strong",{parentName:"td"},"List","<","T",">")," \uff0c\u5176\u5f15\u7528\u90fd\u6307\u5411 ",(0,r.kt)("strong",{parentName:"td"},"x")," \u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"disjoint(Collection, Collection)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u5982\u679c\u4e24\u4e2a\u96c6\u5408\u6ca1\u6709\u5171\u540c\u5143\u7d20\uff0c\u5219\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"true")," \u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"frequency(Collection, Object x)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de ",(0,r.kt)("strong",{parentName:"td"},"Collection")," \u4e2d\uff0c\u7b49\u4e8e ",(0,r.kt)("strong",{parentName:"td"},"x")," \u7684\u5143\u7d20\u4e2a\u6570\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"emptyList()")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"emptyMap()")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"emptySet()")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u8fd4\u56de\u4e0d\u53ef\u53d8\u7684\u7a7a ",(0,r.kt)("strong",{parentName:"td"},"List")," \uff0c ",(0,r.kt)("strong",{parentName:"td"},"Map")," \u6216 ",(0,r.kt)("strong",{parentName:"td"},"Set")," \u3002\u8fd9\u4e9b\u662f\u6cdb\u578b\u7684\uff0c\u56e0\u6b64\u751f\u6210\u7684 ",(0,r.kt)("strong",{parentName:"td"},"Collection")," \u53ef\u4ee5\u88ab\u53c2\u6570\u5316\u4e3a\u6240\u9700\u7684\u7c7b\u578b\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"singleton(T x)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"singletonList(T x)")," ",(0,r.kt)("br",null),(0,r.kt)("br",null)," ",(0,r.kt)("strong",{parentName:"td"},"singletonMap(K key, V value)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u751f\u6210\u4e00\u4e2a\u4e0d\u53ef\u53d8\u7684 ",(0,r.kt)("strong",{parentName:"td"},"List")," \uff0c ",(0,r.kt)("strong",{parentName:"td"},"Set")," \u6216 ",(0,r.kt)("strong",{parentName:"td"},"Map")," \uff0c\u5176\u4e2d\u53ea\u5305\u542b\u57fa\u4e8e\u7ed9\u5b9a\u53c2\u6570\u7684\u5355\u4e2a\u5143\u7d20\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"list(Enumeration","<","T",">"," e)")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u751f\u6210\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"td"},"ArrayList","<","T",">")," \uff0c\u5176\u4e2d\u5143\u7d20\u4e3a\uff08\u65e7\u5f0f\uff09 ",(0,r.kt)("strong",{parentName:"td"},"Enumeration")," \uff08 ",(0,r.kt)("strong",{parentName:"td"},"Iterator")," \u7684\u524d\u8eab\uff09\u4e2d\u7684\u5143\u7d20\u3002\u7528\u4e8e\u4ece\u9057\u7559\u4ee3\u7801\u5411\u65b0\u5f0f\u8f6c\u6362\u3002")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"enumeration(Collection","<","T",">",")")),(0,r.kt)("td",{parentName:"tr",align:"left"},"\u4e3a\u53c2\u6570\u96c6\u5408\u751f\u6210\u4e00\u4e2a\u65e7\u5f0f\u7684 ",(0,r.kt)("strong",{parentName:"td"},"Enumeration","<","T",">")," \u3002")))),(0,r.kt)("p",null,"\u8bf7\u6ce8\u610f\uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"min\uff08)")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"max()")," \u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u5bf9\u8c61\uff0c\u800c\u4e0d\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"List")," \uff0c\u56e0\u6b64\u4e0d\u5fc5\u62c5\u5fc3\u662f\u5426\u5e94\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u8fdb\u884c\u6392\u5e8f\u3002\uff08\u5982\u524d\u6240\u8ff0\uff0c\u5728\u6267\u884c ",(0,r.kt)("inlineCode",{parentName:"p"},"binarySearch()")," \u4e4b\u524d\uff0c\u5c06\u4f1a\u5bf9 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u6216\u6570\u7ec4\u8fdb\u884c",(0,r.kt)("inlineCode",{parentName:"p"},"sort()")," \u6392\u5e8f\u3002\uff09"),(0,r.kt)("p",null,"\u4e0b\u9762\u662f\u4e00\u4e2a\u793a\u4f8b\uff0c\u5c55\u793a\u4e86\u4e0a\u8868\u4e2d\u5927\u591a\u6570\u5b9e\u7528\u5de5\u5177\u7a0b\u5e8f\u7684\u57fa\u672c\u7528\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/Utilities.java\n// Simple demonstrations of the Collections utilities\nimport java.util.*;\n\npublic class Utilities {\n  static List<String> list = Arrays.asList(\n    "one Two three Four five six one".split(" "));\n  public static void main(String[] args) {\n    System.out.println(list);\n    System.out.println("\'list\' disjoint (Four)?: " +\n      Collections.disjoint(list,\n        Collections.singletonList("Four")));\n    System.out.println(\n      "max: " + Collections.max(list));\n    System.out.println(\n      "min: " + Collections.min(list));\n    System.out.println(\n      "max w/ comparator: " + Collections.max(list,\n      String.CASE_INSENSITIVE_ORDER));\n    System.out.println(\n      "min w/ comparator: " + Collections.min(list,\n      String.CASE_INSENSITIVE_ORDER));\n    List<String> sublist =\n      Arrays.asList("Four five six".split(" "));\n    System.out.println("indexOfSubList: " +\n      Collections.indexOfSubList(list, sublist));\n    System.out.println("lastIndexOfSubList: " +\n      Collections.lastIndexOfSubList(list, sublist));\n    Collections.replaceAll(list, "one", "Yo");\n    System.out.println("replaceAll: " + list);\n    Collections.reverse(list);\n    System.out.println("reverse: " + list);\n    Collections.rotate(list, 3);\n    System.out.println("rotate: " + list);\n    List<String> source =\n      Arrays.asList("in the matrix".split(" "));\n    Collections.copy(list, source);\n    System.out.println("copy: " + list);\n    Collections.swap(list, 0, list.size() - 1);\n    System.out.println("swap: " + list);\n    Collections.shuffle(list, new Random(47));\n    System.out.println("shuffled: " + list);\n    Collections.fill(list, "pop");\n    System.out.println("fill: " + list);\n    System.out.println("frequency of \'pop\': " +\n      Collections.frequency(list, "pop"));\n    List<String> dups =\n      Collections.nCopies(3, "snap");\n    System.out.println("dups: " + dups);\n    System.out.println("\'list\' disjoint \'dups\'?: " +\n      Collections.disjoint(list, dups));\n    // Getting an old-style Enumeration:\n    Enumeration<String> e =\n      Collections.enumeration(dups);\n    Vector<String> v = new Vector<>();\n    while(e.hasMoreElements())\n      v.addElement(e.nextElement());\n    // Converting an old-style Vector\n    // to a List via an Enumeration:\n    ArrayList<String> arrayList =\n      Collections.list(v.elements());\n    System.out.println("arrayList: " + arrayList);\n  }\n}\n/* Output:\n[one, Two, three, Four, five, six, one]\n\'list\' disjoint (Four)?: false\nmax: three\nmin: Four\nmax w/ comparator: Two\nmin w/ comparator: five\nindexOfSubList: 3\nlastIndexOfSubList: 3\nreplaceAll: [Yo, Two, three, Four, five, six, Yo]\nreverse: [Yo, six, five, Four, three, Two, Yo]\nrotate: [three, Two, Yo, Yo, six, five, Four]\ncopy: [in, the, matrix, Yo, six, five, Four]\nswap: [Four, the, matrix, Yo, six, five, in]\nshuffled: [six, matrix, the, Four, Yo, five, in]\nfill: [pop, pop, pop, pop, pop, pop, pop]\nfrequency of \'pop\': 7\ndups: [snap, snap, snap]\n\'list\' disjoint \'dups\'?: true\narrayList: [snap, snap, snap]\n*/\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u89e3\u91ca\u4e86\u6bcf\u79cd\u5b9e\u7528\u65b9\u6cd5\u7684\u884c\u4e3a\u3002\u8bf7\u6ce8\u610f\u7531\u4e8e\u5927\u5c0f\u5199\u7684\u7f18\u6545\uff0c\u666e\u901a\u7248\u672c\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"min()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"max()")," \u4e0e\u5e26\u6709 ",(0,r.kt)("strong",{parentName:"p"},"String.CASE_INSENSITIVE_ORDER")," \u6bd4\u8f83\u5668\u53c2\u6570\u7684\u7248\u672c\u7684\u533a\u522b\u3002"),(0,r.kt)("h3",{id:"\u6392\u5e8f\u548c\u641c\u7d22\u5217\u8868"},"\u6392\u5e8f\u548c\u641c\u7d22\u5217\u8868"),(0,r.kt)("p",null,"\u7528\u4e8e\u6267\u884c\u6392\u5e8f\u548c\u641c\u7d22 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u7684\u5b9e\u7528\u5de5\u5177\u7a0b\u5e8f\u4e0e\u7528\u4e8e\u6392\u5e8f\u5bf9\u8c61\u6570\u7ec4\u7684\u7a0b\u5e8f\u5177\u6709\u76f8\u540c\u7684\u540d\u5b57\u548c\u65b9\u6cd5\u7b7e\u540d\uff0c\u53ea\u4e0d\u8fc7\u662f ",(0,r.kt)("strong",{parentName:"p"},"Collections")," \u7684\u9759\u6001\u65b9\u6cd5\u800c\u4e0d\u662f ",(0,r.kt)("strong",{parentName:"p"},"Arrays")," \u3002 \u8fd9\u662f\u4e00\u4e2a\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Utilities.java")," \u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"p"},"list")," \u6570\u636e\u7684\u793a\u4f8b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/ListSortSearch.java\n// Sorting/searching Lists with Collections utilities\nimport java.util.*;\n\npublic class ListSortSearch {\n  public static void main(String[] args) {\n    List<String> list =\n      new ArrayList<>(Utilities.list);\n    list.addAll(Utilities.list);\n    System.out.println(list);\n    Collections.shuffle(list, new Random(47));\n    System.out.println("Shuffled: " + list);\n    // Use ListIterator to trim off last elements:\n    ListIterator<String> it = list.listIterator(10);\n    while(it.hasNext()) {\n      it.next();\n      it.remove();\n    }\n    System.out.println("Trimmed: " + list);\n    Collections.sort(list);\n    System.out.println("Sorted: " + list);\n    String key = list.get(7);\n    int index = Collections.binarySearch(list, key);\n    System.out.println(\n      "Location of " + key + " is " + index +\n      ", list.get(" + index + ") = " +\n      list.get(index));\n    Collections.sort(list,\n      String.CASE_INSENSITIVE_ORDER);\n    System.out.println(\n      "Case-insensitive sorted: " + list);\n    key = list.get(7);\n    index = Collections.binarySearch(list, key,\n      String.CASE_INSENSITIVE_ORDER);\n    System.out.println(\n      "Location of " + key + " is " + index +\n      ", list.get(" + index + ") = " +\n      list.get(index));\n  }\n}\n/* Output:\n[one, Two, three, Four, five, six, one, one, Two,\nthree, Four, five, six, one]\nShuffled: [Four, five, one, one, Two, six, six, three,\nthree, five, Four, Two, one, one]\nTrimmed: [Four, five, one, one, Two, six, six, three,\nthree, five]\nSorted: [Four, Two, five, five, one, one, six, six,\nthree, three]\nLocation of six is 7, list.get(7) = six\nCase-insensitive sorted: [five, five, Four, one, one,\nsix, six, three, three, Two]\nLocation of three is 7, list.get(7) = three\n*/\n')),(0,r.kt)("p",null,"\u5c31\u50cf\u4f7f\u7528\u6570\u7ec4\u8fdb\u884c\u641c\u7d22\u548c\u6392\u5e8f\u4e00\u6837\uff0c\u5982\u679c\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Comparator")," \u8fdb\u884c\u6392\u5e8f\uff0c\u5219\u5fc5\u987b\u4f7f\u7528\u76f8\u540c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Comparator")," \u6267\u884c ",(0,r.kt)("inlineCode",{parentName:"p"},"binarySearch()")," \u3002"),(0,r.kt)("p",null,"\u8be5\u7a0b\u5e8f\u8fd8\u6f14\u793a\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"Collections")," \u4e2d\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"shuffle()")," \u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u968f\u673a\u6253\u4e71\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"List")," \u7684\u987a\u5e8f\u3002 ",(0,r.kt)("strong",{parentName:"p"},"ListIterator")," \u662f\u5728\u6253\u4e71\u540e\u7684\u5217\u8868\u4e2d\u7684\u7279\u5b9a\u4f4d\u7f6e\u521b\u5efa\u7684\uff0c\u7528\u4e8e\u4ece\u8be5\u4f4d\u7f6e\u5220\u9664\u5143\u7d20\uff0c\u76f4\u5230\u5217\u8868\u672b\u5c3e\u3002"),(0,r.kt)("h3",{id:"\u521b\u5efa\u4e0d\u53ef\u4fee\u6539\u7684-collection-\u6216-map"},"\u521b\u5efa\u4e0d\u53ef\u4fee\u6539\u7684 Collection \u6216 Map"),(0,r.kt)("p",null,"\u901a\u5e38\uff0c\u521b\u5efa ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u6216 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u7684\u53ea\u8bfb\u7248\u672c\u4f1a\u5f88\u65b9\u4fbf\u3002 ",(0,r.kt)("strong",{parentName:"p"},"Collections")," \u7c7b\u901a\u8fc7\u5c06\u539f\u59cb\u96c6\u5408\u4f20\u9012\u7ed9\u4e00\u4e2a\u65b9\u6cd5\u7136\u540e\u8fd4\u56de\u4e00\u4e2a\u53ea\u8bfb\u7248\u672c\u7684\u96c6\u5408\u3002 \u5bf9\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \uff08\u5982\u679c\u4e0d\u80fd\u5c06 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u89c6\u4e3a\u66f4\u5177\u4f53\u7684\u7c7b\u578b\uff09\uff0c ",(0,r.kt)("strong",{parentName:"p"},"List")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"Set")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"Map")," \uff0c\u8fd9\u7c7b\u65b9\u6cd5\u6709\u8bb8\u591a\u53d8\u4f53\u3002\u8fd9\u4e2a\u793a\u4f8b\u5c55\u793a\u4e86\u9488\u5bf9\u6bcf\u79cd\u7c7b\u578b\uff0c\u6b63\u786e\u6784\u5efa\u53ea\u8bfb\u7248\u672c\u96c6\u5408\u7684\u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/ReadOnly.java\n// Using the Collections.unmodifiable methods\nimport java.util.*;\nimport onjava.*;\n\npublic class ReadOnly {\n  static Collection<String> data =\n    new ArrayList<>(Countries.names(6));\n  public static void main(String[] args) {\n    Collection<String> c =\n      Collections.unmodifiableCollection(\n        new ArrayList<>(data));\n    System.out.println(c); // Reading is OK\n    //- c.add("one"); // Can\'t change it\n\n    List<String> a = Collections.unmodifiableList(\n        new ArrayList<>(data));\n    ListIterator<String> lit = a.listIterator();\n    System.out.println(lit.next()); // Reading is OK\n    //- lit.add("one"); // Can\'t change it\n\n    Set<String> s = Collections.unmodifiableSet(\n      new HashSet<>(data));\n    System.out.println(s); // Reading is OK\n    //- s.add("one"); // Can\'t change it\n\n    // For a SortedSet:\n    Set<String> ss =\n      Collections.unmodifiableSortedSet(\n        new TreeSet<>(data));\n\n    Map<String,String> m =\n      Collections.unmodifiableMap(\n        new HashMap<>(Countries.capitals(6)));\n    System.out.println(m); // Reading is OK\n    //- m.put("Ralph", "Howdy!");\n\n    // For a SortedMap:\n    Map<String,String> sm =\n      Collections.unmodifiableSortedMap(\n        new TreeMap<>(Countries.capitals(6)));\n  }\n}\n/* Output:\n[ALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,\nBURUNDI]\nALGERIA\n[BENIN, BOTSWANA, ANGOLA, BURKINA FASO, ALGERIA,\nBURUNDI]\n{BENIN=Porto-Novo, BOTSWANA=Gaberone, ANGOLA=Luanda,\nBURKINA FASO=Ouagadougou, ALGERIA=Algiers,\nBURUNDI=Bujumbura}\n*/\n')),(0,r.kt)("p",null,"\u4e3a\u7279\u5b9a\u7c7b\u578b\u8c03\u7528 \u201cunmodifiable\u201d \u65b9\u6cd5\u4e0d\u4f1a\u5bfc\u81f4\u7f16\u8bd1\u65f6\u68c0\u67e5\uff0c\u4f46\u662f\u4e00\u65e6\u53d1\u751f\u8f6c\u6362\uff0c\u5bf9\u4fee\u6539\u7279\u5b9a\u96c6\u5408\u5185\u5bb9\u7684\u4efb\u4f55\u65b9\u6cd5\u8c03\u7528\u90fd\u5c06\u4ea7\u751f ",(0,r.kt)("strong",{parentName:"p"},"UnsupportedOperationException")," \u5f02\u5e38\u3002"),(0,r.kt)("p",null,"\u5728\u6bcf\u79cd\u60c5\u51b5\u4e0b\uff0c\u5728\u5c06\u96c6\u5408\u8bbe\u7f6e\u4e3a\u53ea\u8bfb\u4e4b\u524d\uff0c\u5fc5\u987b\u4f7f\u7528\u6709\u610f\u4e49\u7684\u6570\u636e\u586b\u5145\u96c6\u5408\u3002\u586b\u5145\u5b8c\u6210\u540e\uff0c\u6700\u597d\u7684\u65b9\u6cd5\u662f\u7528 \u201cunmodifiable\u201d \u65b9\u6cd5\u8c03\u7528\u751f\u6210\u7684\u5f15\u7528\u66ff\u6362\u73b0\u6709\u5f15\u7528\u3002\u8fd9\u6837\uff0c\u4e00\u65e6\u4f7f\u5f97\u5185\u5bb9\u65e0\u6cd5\u4fee\u6539\uff0c\u90a3\u4e48\u5c31\u4e0d\u4f1a\u5192\u6709\u610f\u5916\u66f4\u6539\u5185\u5bb9\u7684\u98ce\u9669\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u6b64\u5de5\u5177\u8fd8\u5141\u8bb8\u5c06\u53ef\u4fee\u6539\u7684\u96c6\u5408\u4fdd\u7559\u4e3a\u7c7b\u4e2d\u7684",(0,r.kt)("strong",{parentName:"p"},"\u79c1\u6709"),"\u96c6\u5408\uff0c\u5e76\u4ece\u65b9\u6cd5\u8c03\u7528\u5904\u8fd4\u56de\u5bf9\u8be5\u96c6\u5408\u7684\u53ea\u8bfb\u5f15\u7528\u3002\u6240\u4ee5\uff0c\u4f60\u53ef\u4ee5\u5728\u7c7b\u5185\u4fee\u6539\u5b83\uff0c\u4f46\u5176\u4ed6\u4eba\u53ea\u80fd\u8bfb\u5b83\u3002"),(0,r.kt)("h3",{id:"\u540c\u6b65-collection-\u6216-map"},"\u540c\u6b65 Collection \u6216 Map"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"synchronized")," \u5173\u952e\u5b57\u662f\u591a\u7ebf\u7a0b\u4e3b\u9898\u7684\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u66f4\u590d\u6742\u7684\u5185\u5bb9\u5728",(0,r.kt)("a",{parentName:"p",href:"./Concurrent-Programming"},"\u7b2c\u4e8c\u5341\u56db\u7ae0 \u5e76\u53d1\u7f16\u7a0b"),"\u4e2d\u4ecb\u7ecd\u3002\u5728\u8fd9\u91cc\uff0c\u53ea\u9700\u8981\u6ce8\u610f\u5230 ",(0,r.kt)("strong",{parentName:"p"},"Collections")," \u7c7b\u5305\u542b\u4e00\u79cd\u81ea\u52a8\u540c\u6b65\u6574\u4e2a\u96c6\u5408\u7684\u65b9\u6cd5\u3002 \u8bed\u6cd5\u7c7b\u4f3c\u4e8e \u201cunmodifiable\u201d \u65b9\u6cd5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// collectiontopics/Synchronization.java\n// Using the Collections.synchronized methods\nimport java.util.*;\n\npublic class Synchronization {\n  public static void main(String[] args) {\n    Collection<String> c =\n      Collections.synchronizedCollection(\n        new ArrayList<>());\n    List<String> list = Collections\n      .synchronizedList(new ArrayList<>());\n    Set<String> s = Collections\n      .synchronizedSet(new HashSet<>());\n    Set<String> ss = Collections\n      .synchronizedSortedSet(new TreeSet<>());\n    Map<String,String> m = Collections\n      .synchronizedMap(new HashMap<>());\n    Map<String,String> sm = Collections\n      .synchronizedSortedMap(new TreeMap<>());\n  }\n}\n")),(0,r.kt)("p",null,"\u6700\u597d\u7acb\u5373\u901a\u8fc7\u9002\u5f53\u7684 \u201csynchronized\u201d \u65b9\u6cd5\u4f20\u9012\u65b0\u96c6\u5408\uff0c\u5982\u4e0a\u6240\u793a\u3002\u8fd9\u6837\uff0c\u5c31\u4e0d\u4f1a\u610f\u5916\u5730\u66b4\u9732\u51fa\u975e\u540c\u6b65\u7248\u672c\u3002"),(0,r.kt)("h4",{id:"fail-fast"},"Fail Fast"),(0,r.kt)("p",null,"Java \u96c6\u5408\u8fd8\u5177\u6709\u9632\u6b62\u591a\u4e2a\u8fdb\u7a0b\u4fee\u6539\u96c6\u5408\u5185\u5bb9\u7684\u673a\u5236\u3002\u5982\u679c\u5f53\u524d\u6b63\u5728\u8fed\u4ee3\u96c6\u5408\uff0c\u7136\u540e\u6709\u5176\u4ed6\u4e00\u4e9b\u8fdb\u7a0b\u4ecb\u5165\u5e76\u63d2\u5165\uff0c\u5220\u9664\u6216\u66f4\u6539\u8be5\u96c6\u5408\u4e2d\u7684\u5bf9\u8c61\uff0c\u5219\u4f1a\u51fa\u73b0\u6b64\u95ee\u9898\u3002\u4e5f\u8bb8\u5728\u96c6\u5408\u4e2d\u5df2\u7ecf\u904d\u5386\u8fc7\u4e86\u90a3\u4e2a\u5143\u7d20\uff0c\u4e5f\u8bb8\u8fd8\u6ca1\u6709\u904d\u5386\u5230\uff0c\u4e5f\u8bb8\u5728\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"size()")," \u4e4b\u540e\u96c6\u5408\u7684\u5927\u5c0f\u4f1a\u7f29\u5c0f...\u6709\u8bb8\u591a\u707e\u96be\u60c5\u666f\u3002 Java \u96c6\u5408\u5e93\u4f7f\u7528\u4e00\u79cd ",(0,r.kt)("em",{parentName:"p"},"fail-fast")," \u7684\u673a\u5236\uff0c\u8be5\u673a\u5236\u53ef\u4ee5\u68c0\u6d4b\u5230\u9664\u4e86\u5f53\u524d\u8fdb\u7a0b\u5f15\u8d77\u7684\u66f4\u6539\u4e4b\u5916\uff0c\u5176\u5b83\u4efb\u4f55\u5bf9\u96c6\u5408\u7684\u66f4\u6539\u64cd\u4f5c\u3002\u5982\u679c\u5b83\u68c0\u6d4b\u5230\u5176\u4ed6\u4eba\u6b63\u5728\u4fee\u6539\u96c6\u5408\uff0c\u5219\u4f1a\u7acb\u5373\u751f\u6210 ",(0,r.kt)("strong",{parentName:"p"},"ConcurrentModificationException")," \u5f02\u5e38\u3002\u8fd9\u5c31\u662f\u201cfail-fast\u201d\u7684\u542b\u4e49\u2014\u2014\u5b83\u4e0d\u4f1a\u5728\u4ee5\u540e\u4f7f\u7528\u66f4\u590d\u6742\u7684\u7b97\u6cd5\u5c1d\u8bd5\u68c0\u6d4b\u95ee\u9898\uff08\u5feb\u901f\u5931\u8d25\uff09\u3002"),(0,r.kt)("p",null,"\u901a\u8fc7\u521b\u5efa\u8fed\u4ee3\u5668\u5e76\u5411\u8fed\u4ee3\u5668\u6307\u5411\u7684\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\uff0c\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u770b\u5230\u64cd\u4f5c\u4e2d\u7684 fail-fast \u673a\u5236\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/FailFast.java\n// Demonstrates the "fail-fast" behavior\nimport java.util.*;\n\npublic class FailFast {\n  public static void main(String[] args) {\n    Collection<String> c = new ArrayList<>();\n    Iterator<String> it = c.iterator();\n    c.add("An object");\n    try {\n      String s = it.next();\n    } catch(ConcurrentModificationException e) {\n      System.out.println(e);\n    }\n  }\n}\n/* Output:\njava.util.ConcurrentModificationException\n*/\n')),(0,r.kt)("p",null,"\u5f02\u5e38\u6765\u81ea\u4e8e\u5728\u4ece\u96c6\u5408\u4e2d\u83b7\u5f97\u8fed\u4ee3\u5668\u4e4b\u540e\uff0c\u53c8\u5c1d\u8bd5\u5728\u96c6\u5408\u4e2d\u6dfb\u52a0\u5143\u7d20\u3002\u7a0b\u5e8f\u7684\u4e24\u4e2a\u90e8\u5206\u53ef\u80fd\u4f1a\u4fee\u6539\u540c\u4e00\u4e2a\u96c6\u5408\uff0c\u8fd9\u79cd\u53ef\u80fd\u6027\u7684\u5b58\u5728\u4f1a\u4ea7\u751f\u4e0d\u786e\u5b9a\u72b6\u6001\uff0c\u56e0\u6b64\u5f02\u5e38\u4f1a\u901a\u77e5\u4f60\u66f4\u6539\u4ee3\u7801\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u5e94\u5148\u5c06\u6240\u6709\u5143\u7d20\u6dfb\u52a0\u5230\u96c6\u5408\uff0c\u7136\u540e\u518d\u83b7\u53d6\u8fed\u4ee3\u5668\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"ConcurrentHashMap")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"CopyOnWriteArrayList")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"CopyOnWriteArraySet")," \u4f7f\u7528\u4e86\u7279\u5b9a\u7684\u6280\u672f\u6765\u907f\u514d\u4ea7\u751f ",(0,r.kt)("strong",{parentName:"p"},"ConcurrentModificationException")," \u5f02\u5e38\u3002"),(0,r.kt)("h2",{id:"\u6301\u6709\u5f15\u7528"},"\u6301\u6709\u5f15\u7528"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"java.lang.ref")," \u4e2d\u5e93\u5305\u542b\u4e00\u7ec4\u7c7b\uff0c\u8fd9\u4e9b\u7c7b\u5141\u8bb8\u5783\u573e\u6536\u96c6\u5177\u6709\u66f4\u5927\u7684\u7075\u6d3b\u6027\u3002\u7279\u522b\u662f\u5f53\u62e5\u6709\u53ef\u80fd\u5bfc\u81f4\u5185\u5b58\u8017\u5c3d\u7684\u5927\u5bf9\u8c61\u65f6\uff0c\u8fd9\u4e9b\u7c7b\u7279\u522b\u6709\u7528\u3002\u8fd9\u91cc\u6709\u4e09\u4e2a\u4ece\u62bd\u8c61\u7c7b ",(0,r.kt)("strong",{parentName:"p"},"Reference")," \u7ee7\u627f\u6765\u7684\u7c7b\uff1a ",(0,r.kt)("strong",{parentName:"p"},"SoftReference")," \uff08\u8f6f\u5f15\u7528\uff09\uff0c ",(0,r.kt)("strong",{parentName:"p"},"WeakReference")," \uff08\u5f31\u5f15\u7528\uff09\u548c ",(0,r.kt)("strong",{parentName:"p"},"PhantomReference")," \uff08\u865a\u5f15\u7528\uff09\u7ee7\u627f\u4e86\u4e09\u4e2a\u7c7b\u3002\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u53ea\u80fd\u901a\u8fc7\u8fd9\u5176\u4e2d\u7684\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Reference")," \u5bf9\u8c61\u8bbf\u95ee\uff0c\u90a3\u4e48\u8fd9\u4e09\u79cd\u7c7b\u578b\u6bcf\u4e2a\u90fd\u4e3a\u5783\u573e\u6536\u96c6\u5668\u63d0\u4f9b\u4e0d\u540c\u7ea7\u522b\u7684\u95f4\u63a5\u5f15\u7528\uff08indirection\uff09\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u662f ",(0,r.kt)("em",{parentName:"p"},"\u53ef\u8fbe\u7684"),"\uff08reachable\uff09\uff0c\u90a3\u4e48\u610f\u5473\u7740\u5728\u7a0b\u5e8f\u4e2d\u7684\u67d0\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u627e\u5230\u8be5\u5bf9\u8c61\u3002\u8fd9\u53ef\u80fd\u610f\u5473\u7740\u5728\u6808\u4e0a\u6709\u4e00\u4e2a\u76f4\u63a5\u5f15\u7528\u8be5\u5bf9\u8c61\u7684\u666e\u901a\u5f15\u7528\uff0c\u4f46\u4e5f\u6709\u53ef\u80fd\u662f\u5f15\u7528\u4e86\u4e00\u4e2a\u5bf9\u8be5\u5bf9\u8c61\u6709\u5f15\u7528\u7684\u5bf9\u8c61\uff0c\u8fd9\u53ef\u4ee5\u6709\u5f88\u591a\u4e2d\u95f4\u73af\u8282\u3002\u5982\u679c\u67d0\u4e2a\u5bf9\u8c61\u662f\u53ef\u8fbe\u7684\uff0c\u5219\u5783\u573e\u6536\u96c6\u5668\u65e0\u6cd5\u91ca\u653e\u5b83\uff0c\u56e0\u4e3a\u5b83\u4ecd\u7136\u88ab\u7a0b\u5e8f\u6240\u4f7f\u7528\u3002\u5982\u679c\u67d0\u4e2a\u5bf9\u8c61\u662f\u4e0d\u53ef\u8fbe\u7684\uff0c\u5219\u7a0b\u5e8f\u65e0\u6cd5\u4f7f\u7528\u5b83\uff0c\u90a3\u4e48\u5783\u573e\u6536\u96c6\u5668\u56de\u6536\u8be5\u5bf9\u8c61\u5c31\u662f\u5b89\u5168\u7684\u3002"),(0,r.kt)("p",null,"\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Reference")," \u5bf9\u8c61\u7ee7\u7eed\u4fdd\u6301\u5bf9\u8be5\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u4ee5\u5230\u8fbe\u8be5\u5bf9\u8c61\uff0c\u4f46\u4e5f\u5141\u8bb8\u5783\u573e\u6536\u96c6\u5668\u91ca\u653e\u8be5\u5bf9\u8c61\u3002\u56e0\u6b64\uff0c\u7a0b\u5e8f\u53ef\u4ee5\u4f7f\u7528\u8be5\u5bf9\u8c61\uff0c\u4f46\u5982\u679c\u5185\u5b58\u5373\u5c06\u8017\u5c3d\uff0c\u5219\u5141\u8bb8\u91ca\u653e\u8be5\u5bf9\u8c61\u3002"),(0,r.kt)("p",null,"\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Reference")," \u5bf9\u8c61\u4f5c\u4e3a\u4f60\u548c\u666e\u901a\u5f15\u7528\u4e4b\u95f4\u7684\u4e2d\u4ecb\uff08\u4ee3\u7406\uff09\u6765\u5b9e\u73b0\u6b64\u76ee\u7684\u3002\u6b64\u5916\uff0c\u5fc5\u987b\u6ca1\u6709\u5bf9\u8c61\u7684\u666e\u901a\u5f15\u7528\uff08\u672a\u5305\u542b\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Reference")," \u5bf9\u8c61\u4e2d\u7684\u5bf9\u8c61\uff09\u3002\u5982\u679c\u5783\u573e\u6536\u96c6\u5668\u53d1\u73b0\u5bf9\u8c61\u53ef\u901a\u8fc7\u666e\u901a\u5f15\u7528\u8bbf\u95ee\uff0c\u5219\u5b83\u4e0d\u4f1a\u91ca\u653e\u8be5\u5bf9\u8c61\u3002"),(0,r.kt)("p",null,"\u6309\u7167 ",(0,r.kt)("strong",{parentName:"p"},"SoftReference")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"WeakReference")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"PhantomReference")," \u7684\u987a\u5e8f\uff0c\u6bcf\u4e2a\u90fd\u6bd4\u524d\u4e00\u4e2a\u66f4\u201c\u5f31\u201d\uff0c\u5e76\u4e14\u5bf9\u5e94\u4e8e\u4e0d\u540c\u7684\u53ef\u8fbe\u6027\u7ea7\u522b\u3002\u8f6f\u5f15\u7528\u7528\u4e8e\u5b9e\u73b0\u5bf9\u5185\u5b58\u654f\u611f\u7684\u7f13\u5b58\u3002\u5f31\u5f15\u7528\u7528\u4e8e\u5b9e\u73b0\u201c\u89c4\u8303\u5316\u6620\u5c04\u201d\uff08 canonicalized mappings\uff09\u2014\u2014\u5bf9\u8c61\u7684\u5b9e\u4f8b\u53ef\u4ee5\u5728\u7a0b\u5e8f\u7684\u591a\u4e2a\u4f4d\u7f6e\u540c\u65f6\u4f7f\u7528\uff0c\u4ee5\u8282\u7701\u5b58\u50a8\uff0c\u4f46\u4e0d\u4f1a\u963b\u6b62\u5176\u952e\uff08\u6216\u503c\uff09\u88ab\u56de\u6536\u3002\u865a\u5f15\u7528\u7528\u4e8e\u8c03\u5ea6 pre-mortem \u6e05\u7406\u64cd\u4f5c\uff0c\u8fd9\u662f\u4e00\u79cd\u6bd4 Java \u7ec8\u7ed3\u673a\u5236\uff08Java finalization mechanism\uff09\u66f4\u7075\u6d3b\u7684\u65b9\u5f0f\u3002"),(0,r.kt)("p",null,"\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"SoftReference")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"WeakReference")," \uff0c\u53ef\u4ee5\u9009\u62e9\u662f\u5426\u5c06\u5b83\u4eec\u653e\u5728 ",(0,r.kt)("strong",{parentName:"p"},"ReferenceQueue")," \uff08\u7528\u4e8e pre-mortem \u6e05\u7406\u64cd\u4f5c\u7684\u8bbe\u5907\uff09\u4e2d\uff0c\u4f46 ",(0,r.kt)("strong",{parentName:"p"},"PhantomReference")," \u53ea\u80fd\u5728 ",(0,r.kt)("strong",{parentName:"p"},"ReferenceQueue")," \u4e0a\u6784\u5efa\u3002\u4e0b\u9762\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u6f14\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/References.java\n// Demonstrates Reference objects\nimport java.lang.ref.*;\nimport java.util.*;\n\nclass VeryBig {\n  private static final int SIZE = 10000;\n  private long[] la = new long[SIZE];\n  private String ident;\n  VeryBig(String id) { ident = id; }\n  @Override\n  public String toString() { return ident; }\n  @Override\n  protected void finalize() {\n    System.out.println("Finalizing " + ident);\n  }\n}\n\npublic class References {\n  private static ReferenceQueue<VeryBig> rq =\n    new ReferenceQueue<>();\n  public static void checkQueue() {\n    Reference<? extends VeryBig> inq = rq.poll();\n    if(inq != null)\n      System.out.println("In queue: " + inq.get());\n  }\n  public static void main(String[] args) {\n    int size = 10;\n    // Or, choose size via the command line:\n    if(args.length > 0)\n      size = Integer.valueOf(args[0]);\n    LinkedList<SoftReference<VeryBig>> sa =\n      new LinkedList<>();\n    for(int i = 0; i < size; i++) {\n      sa.add(new SoftReference<>(\n        new VeryBig("Soft " + i), rq));\n      System.out.println(\n        "Just created: " + sa.getLast());\n      checkQueue();\n    }\n    LinkedList<WeakReference<VeryBig>> wa =\n      new LinkedList<>();\n    for(int i = 0; i < size; i++) {\n      wa.add(new WeakReference<>(\n        new VeryBig("Weak " + i), rq));\n      System.out.println(\n        "Just created: " + wa.getLast());\n      checkQueue();\n    }\n    SoftReference<VeryBig> s =\n      new SoftReference<>(new VeryBig("Soft"));\n    WeakReference<VeryBig> w =\n      new WeakReference<>(new VeryBig("Weak"));\n    System.gc();\n    LinkedList<PhantomReference<VeryBig>> pa =\n      new LinkedList<>();\n    for(int i = 0; i < size; i++) {\n      pa.add(new PhantomReference<>(\n        new VeryBig("Phantom " + i), rq));\n      System.out.println(\n        "Just created: " + pa.getLast());\n      checkQueue();\n    }\n  }\n}\n/* Output: (First and Last 10 Lines)\nJust created: java.lang.ref.SoftReference@15db9742\nJust created: java.lang.ref.SoftReference@6d06d69c\nJust created: java.lang.ref.SoftReference@7852e922\nJust created: java.lang.ref.SoftReference@4e25154f\nJust created: java.lang.ref.SoftReference@70dea4e\nJust created: java.lang.ref.SoftReference@5c647e05\nJust created: java.lang.ref.SoftReference@33909752\nJust created: java.lang.ref.SoftReference@55f96302\nJust created: java.lang.ref.SoftReference@3d4eac69\nJust created: java.lang.ref.SoftReference@42a57993\n...________...________...________...________...\nJust created: java.lang.ref.PhantomReference@45ee12a7\nIn queue: null\nJust created: java.lang.ref.PhantomReference@330bedb4\nIn queue: null\nJust created: java.lang.ref.PhantomReference@2503dbd3\nIn queue: null\nJust created: java.lang.ref.PhantomReference@4b67cf4d\nIn queue: null\nJust created: java.lang.ref.PhantomReference@7ea987ac\nIn queue: null\n*/\n')),(0,r.kt)("p",null,"\u5f53\u8fd0\u884c\u6b64\u7a0b\u5e8f\uff08\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u672c\u6587\u4ef6\u4ee5\u67e5\u770b\u9875\u9762\u4e2d\u7684\u8f93\u51fa\uff09\u65f6\uff0c\u5c06\u4f1a\u770b\u5230\u5bf9\u8c61\u662f\u88ab\u5783\u573e\u6536\u96c6\u4e86\u7684\uff0c\u867d\u7136\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7 ",(0,r.kt)("strong",{parentName:"p"},"Reference")," \u5bf9\u8c61\u8bbf\u95ee\u5b83\u4eec\uff08\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"get()")," \u6765\u83b7\u53d6\u5b9e\u9645\u7684\u5bf9\u8c61\u5f15\u7528\uff09\u3002 \u8fd8\u53ef\u4ee5\u770b\u5230 ",(0,r.kt)("strong",{parentName:"p"},"ReferenceQueue")," \u59cb\u7ec8\u751f\u6210\u5305\u542b ",(0,r.kt)("strong",{parentName:"p"},"null")," \u5bf9\u8c61\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Reference")," \u3002 \u8981\u4f7f\u7528\u5b83\uff0c\u8bf7\u4ece\u7279\u5b9a\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Reference")," \u7c7b\u7ee7\u627f\uff0c\u5e76\u4e3a\u65b0\u7c7b\u6dfb\u52a0\u66f4\u591a\u6709\u7528\u7684\u65b9\u6cd5\u3002"),(0,r.kt)("h3",{id:"weakhashmap"},"WeakHashMap"),(0,r.kt)("p",null,"\u96c6\u5408\u7c7b\u5e93\u4e2d\u6709\u4e00\u4e2a\u7279\u6b8a\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Map")," \u6765\u4fdd\u5b58\u5f31\u5f15\u7528\uff1a ",(0,r.kt)("strong",{parentName:"p"},"WeakHashMap")," \u3002 \u6b64\u7c7b\u53ef\u4ee5\u66f4\u8f7b\u677e\u5730\u521b\u5efa\u89c4\u8303\u5316\u6620\u5c04\u3002\u5728\u8fd9\u79cd\u6620\u5c04\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u4ec5\u4ec5\u521b\u5efa\u4e00\u4e2a\u7279\u5b9a\u503c\u7684\u5b9e\u4f8b\u6765\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\u3002\u5f53\u7a0b\u5e8f\u9700\u8981\u8be5\u503c\u65f6\uff0c\u5b83\u4f1a\u67e5\u627e\u6620\u5c04\u4e2d\u7684\u73b0\u6709\u5bf9\u8c61\u5e76\u4f7f\u7528\u5b83\uff08\u800c\u4e0d\u662f\u4ece\u5934\u5f00\u59cb\u521b\u5efa\u4e00\u4e2a\uff09\u3002 \u8be5\u6620\u5c04\u53ef\u4ee5\u5c06\u503c\u4f5c\u4e3a\u5176\u521d\u59cb\u5316\u7684\u4e00\u90e8\u5206\uff0c\u4f46\u66f4\u6709\u53ef\u80fd\u7684\u662f\u5728\u9700\u8981\u65f6\u521b\u5efa\u8be5\u503c\u3002"),(0,r.kt)("p",null,"\u7531\u4e8e\u8fd9\u662f\u4e00\u79cd\u8282\u7701\u5b58\u50a8\u7a7a\u95f4\u7684\u6280\u672f\uff0c\u56e0\u6b64 ",(0,r.kt)("strong",{parentName:"p"},"WeakHashMap")," \u5141\u8bb8\u5783\u573e\u6536\u96c6\u5668\u81ea\u52a8\u6e05\u7406\u952e\u548c\u503c\uff0c\u8fd9\u662f\u975e\u5e38\u65b9\u4fbf\u7684\u3002\u4e0d\u80fd\u5bf9\u653e\u5728 ",(0,r.kt)("strong",{parentName:"p"},"WeakHashMap")," \u4e2d\u7684\u952e\u548c\u503c\u505a\u4efb\u4f55\u7279\u6b8a\u64cd\u4f5c\uff0c\u5b83\u4eec\u7531 map \u81ea\u52a8\u5305\u88c5\u5728 ",(0,r.kt)("strong",{parentName:"p"},"WeakReference")," \u4e2d\u3002\u5f53\u952e\u4e0d\u518d\u88ab\u4f7f\u7528\u7684\u65f6\u5019\u624d\u5141\u8bb8\u6e05\u7406\uff0c\u5982\u4e0b\u6240\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/CanonicalMapping.java\n// Demonstrates WeakHashMap\nimport java.util.*;\n\nclass Element {\n  private String ident;\n  Element(String id) { ident = id; }\n  @Override\n  public String toString() { return ident; }\n  @Override\n  public int hashCode() {\n    return Objects.hashCode(ident);\n  }\n  @Override\n  public boolean equals(Object r) {\n    return r instanceof Element &&\n      Objects.equals(ident, ((Element)r).ident);\n  }\n  @Override\n  protected void finalize() {\n    System.out.println("Finalizing " +\n      getClass().getSimpleName() + " " + ident);\n  }\n}\n\nclass Key extends Element {\n  Key(String id) { super(id); }\n}\n\nclass Value extends Element {\n  Value(String id) { super(id); }\n}\n\npublic class CanonicalMapping {\n  public static void main(String[] args) {\n    int size = 1000;\n    // Or, choose size via the command line:\n    if(args.length > 0)\n      size = Integer.valueOf(args[0]);\n    Key[] keys = new Key[size];\n    WeakHashMap<Key,Value> map =\n      new WeakHashMap<>();\n    for(int i = 0; i < size; i++) {\n      Key k = new Key(Integer.toString(i));\n      Value v = new Value(Integer.toString(i));\n      if(i % 3 == 0)\n        keys[i] = k; // Save as "real" references\n      map.put(k, v);\n    }\n    System.gc();\n  }\n}\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Key")," \u7c7b\u5fc5\u987b\u5177\u6709 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"p"},"equals()")," \uff0c\u56e0\u4e3a\u5b83\u5c06\u88ab\u7528\u4f5c\u6563\u5217\u6570\u636e\u7ed3\u6784\u4e2d\u7684\u952e\u3002 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u7684\u5185\u5bb9\u5728",(0,r.kt)("a",{parentName:"p",href:"./Appendix-Understanding-equals-and-hashCode"},"\u9644\u5f55\uff1a\u7406\u89e3hashCode\u548cequals\u65b9\u6cd5"),"\u4e2d\u8fdb\u884c\u4e86\u63cf\u8ff0\u3002"),(0,r.kt)("p",null,"\u8fd0\u884c\u7a0b\u5e8f\uff0c\u4f60\u4f1a\u770b\u5230\u5783\u573e\u6536\u96c6\u5668\u6bcf\u4e09\u4e2a\u952e\u8df3\u8fc7\u4e00\u6b21\u3002\u5bf9\u8be5\u952e\u7684\u666e\u901a\u5f15\u7528\u4e5f\u88ab\u653e\u7f6e\u5728 ",(0,r.kt)("strong",{parentName:"p"},"keys")," \u6570\u7ec4\u4e2d\uff0c\u56e0\u6b64\u8fd9\u4e9b\u5bf9\u8c61\u4e0d\u80fd\u88ab\u5783\u573e\u6536\u96c6\u3002"),(0,r.kt)("h2",{id:"java-10--11-\u7684\u96c6\u5408\u7c7b"},"Java 1.0 / 1.1 \u7684\u96c6\u5408\u7c7b"),(0,r.kt)("p",null,"\u4e0d\u5e78\u7684\u662f\uff0c\u8bb8\u591a\u4ee3\u7801\u662f\u4f7f\u7528 Java 1.0 / 1.1 \u4e2d\u7684\u96c6\u5408\u7f16\u5199\u7684\uff0c\u751a\u81f3\u65b0\u4ee3\u7801\u6709\u65f6\u4e5f\u662f\u4f7f\u7528\u8fd9\u4e9b\u7c7b\u7f16\u5199\u7684\u3002\u7f16\u5199\u65b0\u4ee3\u7801\u65f6\u5207\u52ff\u4f7f\u7528\u65e7\u96c6\u5408\u3002\u65e7\u7684\u96c6\u5408\u7c7b\u6709\u9650\uff0c\u6240\u4ee5\u5173\u4e8e\u5b83\u4eec\u7684\u8ba8\u8bba\u4e0d\u591a\u3002\u7531\u4e8e\u5b83\u4eec\u662f\u4e0d\u5408\u65f6\u5b9c\u7684\uff0c\u6240\u4ee5\u6211\u4f1a\u5c3d\u91cf\u907f\u514d\u8fc7\u5206\u5f3a\u8c03\u4e00\u4e9b\u53ef\u6015\u7684\u8bbe\u8ba1\u51b3\u5b9a\u3002"),(0,r.kt)("h3",{id:"vector-\u548c-enumeration"},"Vector \u548c Enumeration"),(0,r.kt)("p",null,"Java 1.0 / 1.1 \u4e2d\u552f\u4e00\u7684\u81ea\u6269\u5c55\u5e8f\u5217\u662f ",(0,r.kt)("strong",{parentName:"p"},"Vector")," \uff0c\u56e0\u6b64\u5b83\u88ab\u7528\u4e8e\u5f88\u591a\u5730\u65b9\u3002\u5b83\u7684\u7f3a\u9677\u592a\u591a\u4e86\uff0c\u65e0\u6cd5\u5728\u8fd9\u91cc\u63cf\u8ff0\uff08\u53c2\u89c1\u300aJava\u7f16\u7a0b\u601d\u60f3\u300b\u7b2c1\u7248\uff0c\u53ef\u4ece",(0,r.kt)("a",{parentName:"p",href:"http://www.OnJava8.com"},"www.OnJava8.com"),"\u514d\u8d39\u4e0b\u8f7d\uff09\u3002\u57fa\u672c\u4e0a\uff0c\u4f60\u53ef\u4ee5\u5c06\u5b83\u770b\u4f5c\u662f\u5177\u6709\u5197\u957f\u4e14\u7b28\u62d9\u7684\u65b9\u6cd5\u540d\u79f0\u7684 ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \u3002\u5728\u4fee\u8ba2\u540e\u7684 Java \u96c6\u5408\u5e93\u4e2d\uff0c",(0,r.kt)("strong",{parentName:"p"},"Vector")," \u5df2\u7ecf\u88ab\u8c03\u6574\u9002\u914d\u8fc7\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f5c\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"List")," \u6765\u4f7f\u7528\u3002\u4e8b\u5b9e\u8bc1\u660e\u8fd9\u6709\u70b9\u4e0d\u6b63\u5e38\uff0c\u96c6\u5408\u7c7b\u5e93\u4ecd\u7136\u5305\u542b\u5b83\u53ea\u662f\u4e3a\u4e86\u652f\u6301\u65e7\u7684 Java \u4ee3\u7801\uff0c\u4f46\u8fd9\u4f1a\u8ba9\u4e00\u4e9b\u4eba\u8bef\u4ee5\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"Vector")," \u5df2\u7ecf\u53d8\u5f97\u66f4\u597d\u4e86\u3002"),(0,r.kt)("p",null,"\u8fed\u4ee3\u5668\u7684 Java 1.0 / 1.1 \u7248\u672c\u9009\u62e9\u521b\u5efa\u4e00\u4e2a\u65b0\u540d\u79f0\u201cenumeration\u201d\uff0c\u800c\u4e0d\u662f\u4f7f\u7528\u6bcf\u4e2a\u4eba\u90fd\u719f\u6089\u7684\u672f\u8bed\uff08\u201citerator\u201d\uff09\u3002 ",(0,r.kt)("strong",{parentName:"p"},"Enumeration")," \u63a5\u53e3\u5c0f\u4e8e ",(0,r.kt)("strong",{parentName:"p"},"Iterator")," \uff0c\u53ea\u5305\u542b\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5e76\u4e14\u5b83\u4f7f\u7528\u66f4\u957f\u7684\u65b9\u6cd5\u540d\u79f0\uff1a\u5982\u679c\u8fd8\u6709\u66f4\u591a\u5143\u7d20\uff0c\u5219 ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean hasMoreElements()")," \u8fd4\u56de ",(0,r.kt)("inlineCode",{parentName:"p"},"true")," \uff0c ",(0,r.kt)("inlineCode",{parentName:"p"},"Object nextElement()")," \u8fd4\u56de\u6b64enumeration\u7684\u4e0b\u4e00\u4e2a\u5143\u7d20 \uff08\u5426\u5219\u4f1a\u629b\u51fa\u5f02\u5e38\uff09\u3002"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Enumeration")," \u53ea\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u5b9e\u73b0\uff0c\u751a\u81f3\u65b0\u7684\u7c7b\u5e93\u6709\u65f6\u4ecd\u7136\u4f7f\u7528\u65e7\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Enumeration")," \uff0c\u8fd9\u662f\u4e0d\u5e78\u7684\uff0c\u4f46\u901a\u5e38\u662f\u65e0\u5bb3\u7684\u3002\u5e94\u8be5\u603b\u662f\u5728\u81ea\u5df1\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Iterator")," \uff0c\u4f46\u8981\u505a\u597d\u51c6\u5907\u5e94\u5bf9\u90a3\u4e9b\u63d0\u4f9b ",(0,r.kt)("strong",{parentName:"p"},"Enumeration")," \u7684\u7c7b\u5e93\u3002"),(0,r.kt)("p",null,"\u6b64\u5916\uff0c\u53ef\u4ee5\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"Collections.enumeration()")," \u65b9\u6cd5\u4e3a\u4efb\u4f55 ",(0,r.kt)("strong",{parentName:"p"},"Collection")," \u751f\u6210 ",(0,r.kt)("strong",{parentName:"p"},"Enumeration")," \uff0c\u5982\u4e0b\u4f8b\u6240\u793a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/Enumerations.java\n// Java 1.0/1.1 Vector and Enumeration\nimport java.util.*;\nimport onjava.*;\n\npublic class Enumerations {\n  public static void main(String[] args) {\n    Vector<String> v =\n      new Vector<>(Countries.names(10));\n    Enumeration<String> e = v.elements();\n    while(e.hasMoreElements())\n      System.out.print(e.nextElement() + ", ");\n    // Produce an Enumeration from a Collection:\n    e = Collections.enumeration(new ArrayList<>());\n  }\n}\n/* Output:\nALGERIA, ANGOLA, BENIN, BOTSWANA, BURKINA FASO,\nBURUNDI, CAMEROON, CAPE VERDE, CENTRAL AFRICAN\nREPUBLIC, CHAD,\n*/\n')),(0,r.kt)("p",null,"\u8981\u751f\u6210 ",(0,r.kt)("strong",{parentName:"p"},"Enumeration")," \uff0c\u53ef\u4ee5\u8c03\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"elements()")," \uff0c\u7136\u540e\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u6267\u884c\u5411\u524d\u8fed\u4ee3\u3002"),(0,r.kt)("p",null,"\u6700\u540e\u4e00\u884c\u521b\u5efa\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \uff0c\u5e76\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"enumeration() ")," \u6765\u5c06 ",(0,r.kt)("strong",{parentName:"p"},"ArrayList")," \u9002\u914d\u4e3a\u4e00\u4e2a ",(0,r.kt)("strong",{parentName:"p"},"Enumeration")," \u3002 \u56e0\u6b64\uff0c\u5982\u679c\u6709\u65e7\u4ee3\u7801\u9700\u8981\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Enumeration")," \uff0c\u4f60\u4ecd\u7136\u53ef\u4ee5\u4f7f\u7528\u65b0\u96c6\u5408\u3002"),(0,r.kt)("h3",{id:"hashtable"},"Hashtable"),(0,r.kt)("p",null,"\u6b63\u5982\u4f60\u5728\u672c\u9644\u5f55\u4e2d\u7684\u6027\u80fd\u6bd4\u8f83\u4e2d\u6240\u770b\u5230\u7684\uff0c\u57fa\u672c\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Hashtable")," \u4e0e ",(0,r.kt)("strong",{parentName:"p"},"HashMap")," \u975e\u5e38\u76f8\u4f3c\uff0c\u751a\u81f3\u65b9\u6cd5\u540d\u79f0\u90fd\u76f8\u4f3c\u3002\u5728\u65b0\u4ee3\u7801\u4e2d\u6ca1\u6709\u7406\u7531\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Hashtable")," \u800c\u4e0d\u662f ",(0,r.kt)("strong",{parentName:"p"},"HashMap")," \u3002"),(0,r.kt)("h3",{id:"stack"},"Stack"),(0,r.kt)("p",null,"\u4e4b\u524d\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"LinkedList")," \u5f15\u5165\u4e86\u6808\u7684\u6982\u5ff5\u3002 Java 1.0 / 1.1 ",(0,r.kt)("strong",{parentName:"p"},"Stack")," \u7684\u5947\u602a\u4e4b\u5904\u5728\u4e8e\uff0c\u4e0d\u662f\u4ee5\u7ec4\u5408\u65b9\u5f0f\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"Vector")," \uff0c\u800c\u662f\u7ee7\u627f\u81ea ",(0,r.kt)("strong",{parentName:"p"},"Vector")," \u3002 \u56e0\u6b64\u5b83\u5177\u6709 ",(0,r.kt)("strong",{parentName:"p"},"Vector")," \u7684\u6240\u6709\u7279\u5f81\u548c\u884c\u4e3a\u4ee5\u53ca\u4e00\u4e9b\u989d\u5916\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Stack")," \u884c\u4e3a\u3002\u5f88\u96be\u53bb\u77e5\u9053\u8bbe\u8ba1\u5e08\u662f\u5426\u6709\u610f\u8bc6\u5730\u8ba4\u4e3a\u8fd9\u6837\u505a\u662f\u6709\u7528\u7684\uff0c\u6216\u8005\u5b83\u662f\u5426\u53ea\u662f\u592a\u5929\u771f\u4e86\uff0c\u65e0\u8bba\u5982\u4f55\uff0c\u5b83\u5728\u8fdb\u5165\u53d1\u884c\u7248\u4e4b\u524d\u663e\u7136\u6ca1\u6709\u7ecf\u8fc7\u5ba1\u67e5\uff0c\u6240\u4ee5\u8fd9\u4e2a\u7cdf\u7cd5\u7684\u8bbe\u8ba1\u4ecd\u7136\u5b58\u5728\uff08\u4f46\u4e0d\u8981\u4f7f\u7528\u5b83\uff09\u3002"),(0,r.kt)("p",null,"\u8fd9\u662f ",(0,r.kt)("strong",{parentName:"p"},"Stack")," \u7684\u7b80\u5355\u6f14\u793a\uff0c\u5411\u6808\u4e2d\u653e\u5165\u679a\u4e3e\u4e2d\u6bcf\u4e00\u4e2a\u7c7b\u578b\u7684 ",(0,r.kt)("strong",{parentName:"p"},"String")," \u5f62\u5f0f\u3002\u5b83\u8fd8\u5c55\u793a\u4e86\u5982\u4f55\u8f7b\u677e\u5730\u5c06 ",(0,r.kt)("strong",{parentName:"p"},"LinkedList")," \u7528\u4f5c\u6808\uff0c\u6216\u8005\u4f7f\u7528\u5728",(0,r.kt)("a",{parentName:"p",href:"./Collections"},"\u7b2c\u5341\u4e8c\u7ae0\uff1a\u96c6\u5408"),"\u7ae0\u8282\u4e2d\u521b\u5efa\u7684 ",(0,r.kt)("strong",{parentName:"p"},"Stack")," \u7c7b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/Stacks.java\n// Demonstration of Stack Class\nimport java.util.*;\n\nenum Month { JANUARY, FEBRUARY, MARCH, APRIL,\n  MAY, JUNE, JULY, AUGUST, SEPTEMBER,\n  OCTOBER, NOVEMBER }\n\npublic class Stacks {\n  public static void main(String[] args) {\n    Stack<String> stack = new Stack<>();\n    for(Month m : Month.values())\n      stack.push(m.toString());\n    System.out.println("stack = " + stack);\n    // Treating a stack as a Vector:\n    stack.addElement("The last line");\n    System.out.println(\n      "element 5 = " + stack.elementAt(5));\n    System.out.println("popping elements:");\n    while(!stack.empty())\n      System.out.print(stack.pop() + " ");\n\n    // Using a LinkedList as a Stack:\n    LinkedList<String> lstack = new LinkedList<>();\n    for(Month m : Month.values())\n      lstack.addFirst(m.toString());\n    System.out.println("lstack = " + lstack);\n    while(!lstack.isEmpty())\n      System.out.print(lstack.removeFirst() + " ");\n\n    // Using the Stack class from\n    // the Collections Chapter:\n    onjava.Stack<String> stack2 =\n      new onjava.Stack<>();\n    for(Month m : Month.values())\n      stack2.push(m.toString());\n    System.out.println("stack2 = " + stack2);\n    while(!stack2.isEmpty())\n      System.out.print(stack2.pop() + " ");\n\n  }\n}\n/* Output:\nstack = [JANUARY, FEBRUARY, MARCH, APRIL, MAY, JUNE,\nJULY, AUGUST, SEPTEMBER, OCTOBER, NOVEMBER]\nelement 5 = JUNE\npopping elements:\nThe last line NOVEMBER OCTOBER SEPTEMBER AUGUST JULY\nJUNE MAY APRIL MARCH FEBRUARY JANUARY lstack =\n[NOVEMBER, OCTOBER, SEPTEMBER, AUGUST, JULY, JUNE, MAY,\nAPRIL, MARCH, FEBRUARY, JANUARY]\nNOVEMBER OCTOBER SEPTEMBER AUGUST JULY JUNE MAY APRIL\nMARCH FEBRUARY JANUARY stack2 = [NOVEMBER, OCTOBER,\nSEPTEMBER, AUGUST, JULY, JUNE, MAY, APRIL, MARCH,\nFEBRUARY, JANUARY]\nNOVEMBER OCTOBER SEPTEMBER AUGUST JULY JUNE MAY APRIL\nMARCH FEBRUARY JANUARY\n*/\n')),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"String")," \u5f62\u5f0f\u662f\u7531 ",(0,r.kt)("strong",{parentName:"p"},"Month")," \u4e2d\u7684\u679a\u4e3e\u5e38\u91cf\u751f\u6210\u7684\uff0c\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"push()")," \u538b\u5165\u5230\u6808\u4e2d\uff0c\u7136\u540e\u4f7f\u7528 ",(0,r.kt)("inlineCode",{parentName:"p"},"pop()")," \u4ece\u6808\u9876\u90e8\u53d6\u51fa\u3002\u4e3a\u4e86\u8bf4\u660e\u4e00\u70b9\uff0c\u5c06 ",(0,r.kt)("strong",{parentName:"p"},"Vector")," \u7684\u64cd\u4f5c\u4e5f\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Stack")," \u5bf9\u8c61\u4e0a\u6267\u884c\uff0c \u8fd9\u662f\u53ef\u80fd\u7684\uff0c\u56e0\u4e3a\u51ed\u501f\u7ee7\u627f\uff0c ",(0,r.kt)("strong",{parentName:"p"},"Stack")," \u662f ",(0,r.kt)("strong",{parentName:"p"},"Vector")," \u3002 \u56e0\u6b64\uff0c\u53ef\u4ee5\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Vector")," \u4e0a\u6267\u884c\u7684\u6240\u6709\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u5728 ",(0,r.kt)("strong",{parentName:"p"},"Stack")," \u4e0a\u6267\u884c\uff0c\u4f8b\u5982 ",(0,r.kt)("inlineCode",{parentName:"p"},"elementAt()")," \u3002"),(0,r.kt)("p",null,"\u5982\u524d\u6240\u8ff0\uff0c\u5728\u9700\u8981\u6808\u884c\u4e3a\u65f6\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"LinkedList")," \uff0c\u6216\u8005\u4ece ",(0,r.kt)("strong",{parentName:"p"},"LinkedList")," \u7c7b\u521b\u5efa\u7684 ",(0,r.kt)("strong",{parentName:"p"},"onjava.Stack")," \u7c7b\u3002"),(0,r.kt)("h3",{id:"bitset"},"BitSet"),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u7528\u4e8e\u6709\u6548\u5730\u5b58\u50a8\u5927\u91cf\u7684\u5f00\u5173\u4fe1\u606f\u3002\u4ec5\u4ece\u5c3a\u5bf8\u5927\u5c0f\u7684\u89d2\u5ea6\u6765\u770b\u5b83\u662f\u6709\u6548\u7684\uff0c\u5982\u679c\u4f60\u6b63\u5728\u5bfb\u627e\u6709\u6548\u7684\u8bbf\u95ee\uff0c\u5b83\u6bd4\u4f7f\u7528\u672c\u673a\u6570\u7ec4\uff08native array\uff09\u7a0d\u6162\u3002"),(0,r.kt)("p",null,"\u6b64\u5916\uff0c ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u7684\u6700\u5c0f\u5927\u5c0f\u662f ",(0,r.kt)("strong",{parentName:"p"},"long")," \uff1a64\u4f4d\u3002\u8fd9\u610f\u5473\u7740\u5982\u679c\u4f60\u8981\u5b58\u50a8\u66f4\u5c0f\u7684\u4e1c\u897f\uff0c\u6bd4\u59828\u4f4d\uff0c ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u5c31\u662f\u6d6a\u8d39\uff0c\u5982\u679c\u5c3a\u5bf8\u6709\u95ee\u9898\uff0c\u4f60\u6700\u597d\u521b\u5efa\u81ea\u5df1\u7684\u7c7b\uff0c\u6216\u8005\u53ea\u662f\u7528\u4e00\u4e2a\u6570\u7ec4\u6765\u4fdd\u5b58\u4f60\u7684\u6807\u5fd7\u3002\uff08\u53ea\u6709\u5728\u4f60\u521b\u5efa\u8bb8\u591a\u5305\u542b\u5f00\u5173\u4fe1\u606f\u5217\u8868\u7684\u5bf9\u8c61\u65f6\u624d\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff0c\u5e76\u4e14\u53ea\u5e94\u6839\u636e\u5206\u6790\u548c\u5176\u4ed6\u6307\u6807\u6765\u51b3\u5b9a\u3002\u5982\u679c\u4f60\u505a\u51fa\u6b64\u51b3\u5b9a\u53ea\u662f\u56e0\u4e3a\u60a8\u8ba4\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u592a\u5927\uff0c\u90a3\u4e48\u6700\u7ec8\u4f1a\u4ea7\u751f\u4e0d\u5fc5\u8981\u7684\u590d\u6742\u6027\u5e76\u4e14\u6d6a\u8d39\u5927\u91cf\u65f6\u95f4\u3002\uff09"),(0,r.kt)("p",null,"\u5f53\u6dfb\u52a0\u66f4\u591a\u5143\u7d20\u65f6\uff0c\u666e\u901a\u96c6\u5408\u4f1a\u6269\u5c55\uff0c ",(0,r.kt)("strong",{parentName:"p"},"BitSet"),"\u4e5f\u4f1a\u8fd9\u6837\u505a\u3002\u4ee5\u4e0b\u793a\u4f8b\u663e\u793a\u4e86 ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u7684\u5de5\u4f5c\u539f\u7406\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// collectiontopics/Bits.java\n// Demonstration of BitSet\nimport java.util.*;\n\npublic class Bits {\n  public static void printBitSet(BitSet b) {\n    System.out.println("bits: " + b);\n    StringBuilder bbits = new StringBuilder();\n    for(int j = 0; j < b.size() ; j++)\n      bbits.append(b.get(j) ? "1" : "0");\n    System.out.println("bit pattern: " + bbits);\n  }\n  public static void main(String[] args) {\n    Random rand = new Random(47);\n    // Take the LSB of nextInt():\n    byte bt = (byte)rand.nextInt();\n    BitSet bb = new BitSet();\n    for(int i = 7; i >= 0; i--)\n      if(((1 << i) &  bt) != 0)\n        bb.set(i);\n      else\n        bb.clear(i);\n    System.out.println("byte value: " + bt);\n    printBitSet(bb);\n\n    short st = (short)rand.nextInt();\n    BitSet bs = new BitSet();\n    for(int i = 15; i >= 0; i--)\n      if(((1 << i) &  st) != 0)\n        bs.set(i);\n      else\n        bs.clear(i);\n    System.out.println("short value: " + st);\n    printBitSet(bs);\n\n    int it = rand.nextInt();\n    BitSet bi = new BitSet();\n    for(int i = 31; i >= 0; i--)\n      if(((1 << i) &  it) != 0)\n        bi.set(i);\n      else\n        bi.clear(i);\n    System.out.println("int value: " + it);\n    printBitSet(bi);\n\n    // Test bitsets >= 64 bits:\n    BitSet b127 = new BitSet();\n    b127.set(127);\n    System.out.println("set bit 127: " + b127);\n    BitSet b255 = new BitSet(65);\n    b255.set(255);\n    System.out.println("set bit 255: " + b255);\n    BitSet b1023 = new BitSet(512);\n    b1023.set(1023);\n    b1023.set(1024);\n    System.out.println("set bit 1023: " + b1023);\n  }\n}\n/* Output:\nbyte value: -107\nbits: {0, 2, 4, 7}\nbit pattern: 101010010000000000000000000000000000000000\n0000000000000000000000\nshort value: 1302\nbits: {1, 2, 4, 8, 10}\nbit pattern: 011010001010000000000000000000000000000000\n0000000000000000000000\nint value: -2014573909\nbits: {0, 1, 3, 5, 7, 9, 11, 18, 19, 21, 22, 23, 24,\n25, 26, 31}\nbit pattern: 110101010101000000110111111000010000000000\n0000000000000000000000\nset bit 127: {127}\nset bit 255: {255}\nset bit 1023: {1023, 1024}\n*/\n')),(0,r.kt)("p",null,"\u968f\u673a\u6570\u751f\u6210\u5668\u7528\u4e8e\u521b\u5efa\u968f\u673a ",(0,r.kt)("strong",{parentName:"p"},"byte")," \uff0c ",(0,r.kt)("strong",{parentName:"p"},"short")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"int")," \uff0c\u5e76\u4e14\u6bcf\u4e2a\u90fd\u5728 ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u4e2d\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u4f4d\u6a21\u5f0f\u3002\u8fd9\u6837\u53ef\u4ee5\u6b63\u5e38\u5de5\u4f5c\uff0c\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u662f64\u4f4d\uff0c\u6240\u4ee5\u8fd9\u4e9b\u90fd\u4e0d\u4f1a\u5bfc\u81f4\u5b83\u7684\u5927\u5c0f\u589e\u52a0\uff0c\u7136\u540e\u521b\u5efa\u66f4\u5927\u7684 ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u3002 \u8bf7\u6ce8\u610f\uff0c ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u4f1a\u6839\u636e\u9700\u8981\u8fdb\u884c\u6269\u5c55\u3002"),(0,r.kt)("p",null,"\u5bf9\u4e8e\u53ef\u4ee5\u547d\u540d\u7684\u56fa\u5b9a\u6807\u5fd7\u96c6\uff0c ",(0,r.kt)("strong",{parentName:"p"},"EnumSet")," \uff08\u53c2\u89c1",(0,r.kt)("a",{parentName:"p",href:"./Enumerations"},"\u7b2c\u4e8c\u5341\u4e8c\u7ae0\uff1a\u679a\u4e3e"),"\u7ae0\u8282\uff09\u901a\u5e38\u6bd4 ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u66f4\u597d\uff0c\u56e0\u4e3a ",(0,r.kt)("strong",{parentName:"p"},"EnumSet")," \u5141\u8bb8\u64cd\u4f5c\u540d\u79f0\u800c\u4e0d\u662f\u6570\u5b57\u4f4d\u4f4d\u7f6e\uff0c\u4ece\u800c\u53ef\u4ee5\u51cf\u5c11\u9519\u8bef\u3002 ",(0,r.kt)("strong",{parentName:"p"},"EnumSet")," \u8fd8\u53ef\u4ee5\u9632\u6b62\u610f\u5916\u5730\u6dfb\u52a0\u65b0\u7684\u6807\u8bb0\u4f4d\u7f6e\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5bfc\u81f4\u4e00\u4e9b\u4e25\u91cd\u7684\uff0c\u96be\u4ee5\u53d1\u73b0\u7684\u9519\u8bef\u3002\u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u800c\u4e0d\u662f ",(0,r.kt)("strong",{parentName:"p"},"EnumSet")," \u7684\u552f\u4e00\u539f\u56e0\u662f\uff0c\u4e0d\u77e5\u9053\u5728\u8fd0\u884c\u65f6\u9700\u8981\u591a\u5c11\u6807\u5fd7\uff0c\u6216\u8005\u4e3a\u6807\u5fd7\u5206\u914d\u540d\u79f0\u662f\u4e0d\u5408\u7406\u7684\uff0c\u6216\u8005\u9700\u8981 ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u4e2d\u7684\u4e00\u4e2a\u7279\u6b8a\u64cd\u4f5c\uff08\u8bf7\u53c2\u9605 ",(0,r.kt)("strong",{parentName:"p"},"BitSet")," \u548c ",(0,r.kt)("strong",{parentName:"p"},"EnumSet")," \u7684 JDK \u6587\u6863\uff09\u3002"),(0,r.kt)("h2",{id:"\u672c\u7ae0\u5c0f\u7ed3"},"\u672c\u7ae0\u5c0f\u7ed3"),(0,r.kt)("p",null,"\u96c6\u5408\u53ef\u4ee5\u8bf4\u662f\u7f16\u7a0b\u8bed\u8a00\u4e2d\u6700\u5e38\u7528\u7684\u5de5\u5177\u3002\u6709\u4e9b\u8bed\u8a00\uff08\u4f8b\u5982Python\uff09\u751a\u81f3\u5c06\u57fa\u672c\u96c6\u5408\u7ec4\u4ef6\uff08\u5217\u8868\uff0c\u6620\u5c04\u548c\u96c6\u5408\uff09\u4f5c\u4e3a\u5185\u7f6e\u51fd\u6570\u5305\u542b\u5728\u5176\u4e2d\u3002"),(0,r.kt)("p",null,"\u6b63\u5982\u5728",(0,r.kt)("a",{parentName:"p",href:"./Collections"},"\u7b2c\u5341\u4e8c\u7ae0\uff1a\u96c6\u5408"),"\u7ae0\u8282\u4e2d\u770b\u5230\u7684\u90a3\u6837\uff0c\u53ef\u4ee5\u4f7f\u7528\u96c6\u5408\u6267\u884c\u8bb8\u591a\u975e\u5e38\u6709\u7528\u7684\u64cd\u4f5c\uff0c\u800c\u4e0d\u9700\u8981\u592a\u591a\u52aa\u529b\u3002\u4f46\u662f\uff0c\u5728\u67d0\u4e9b\u65f6\u5019\uff0c\u4e3a\u4e86\u6b63\u786e\u5730\u4f7f\u7528\u5b83\u4eec\u800c\u4e0d\u5f97\u4e0d\u66f4\u591a\u5730\u4e86\u89e3\u96c6\u5408\uff0c\u7279\u522b\u662f\uff0c\u5fc5\u987b\u5145\u5206\u4e86\u89e3\u6563\u5217\u64cd\u4f5c\u4ee5\u7f16\u5199\u81ea\u5df1\u7684 ",(0,r.kt)("inlineCode",{parentName:"p"},"hashCode()")," \u65b9\u6cd5\uff08\u5e76\u4e14\u5fc5\u987b\u77e5\u9053\u4f55\u65f6\u9700\u8981\uff09\uff0c\u5e76\u4e14\u4f60\u5fc5\u987b\u5145\u5206\u4e86\u89e3\u5404\u79cd\u96c6\u5408\u5b9e\u73b0\uff0c\u4ee5\u6839\u636e\u4f60\u7684\u9700\u6c42\u9009\u62e9\u5408\u9002\u7684\u96c6\u5408\u3002\u672c\u9644\u5f55\u6db5\u76d6\u4e86\u8fd9\u4e9b\u6982\u5ff5\uff0c\u5e76\u8ba8\u8bba\u4e86\u6709\u5173\u96c6\u5408\u5e93\u7684\u5176\u4ed6\u6709\u7528\u8be6\u7ec6\u4fe1\u606f\u3002\u4f60\u73b0\u5728\u5e94\u8be5\u5df2\u7ecf\u51c6\u5907\u597d\u5728\u65e5\u5e38\u7f16\u7a0b\u4efb\u52a1\u4e2d\u4f7f\u7528 Java \u96c6\u5408\u4e86\u3002"),(0,r.kt)("p",null,"\u96c6\u5408\u5e93\u7684\u8bbe\u8ba1\u5f88\u56f0\u96be\uff08\u5927\u591a\u6570\u5e93\u8bbe\u8ba1\u95ee\u9898\u90fd\u662f\u5982\u6b64\uff09\u3002\u5728 C++ \u4e2d\uff0c\u96c6\u5408\u7c7b\u6db5\u76d6\u4e86\u8bb8\u591a\u4e0d\u540c\u7c7b\u7684\u57fa\u7840\u3002\u8fd9\u6bd4\u4e4b\u524d\u53ef\u7528\u7684 C++ \u96c6\u5408\u7c7b\u66f4\u597d\uff0c\u4f46\u5b83\u6ca1\u6709\u5f88\u597d\u5730\u8f6c\u6362\u4e3a Java \u3002\u5728\u53e6\u4e00\u4e2a\u6781\u7aef\uff0c\u6211\u770b\u5230\u4e86\u4e00\u4e2a\u7531\u5355\u4e2a\u7c7b\u201ccollection\u201d\u7ec4\u6210\u7684\u96c6\u5408\u5e93\uff0c\u5b83\u540c\u65f6\u5145\u5f53\u7ebf\u6027\u5e8f\u5217\u548c\u5173\u8054\u6570\u7ec4\u3002 Java \u96c6\u5408\u5e93\u8bd5\u56fe\u5728\u529f\u80fd\u548c\u590d\u6742\u6027\u4e4b\u95f4\u53d6\u5f97\u5e73\u8861\u3002\u7ed3\u679c\u5728\u67d0\u4e9b\u5730\u65b9\u770b\u8d77\u6765\u6709\u70b9\u5947\u602a\u3002\u4e0e\u65e9\u671f Java \u5e93\u4e2d\u7684\u4e00\u4e9b\u51b3\u7b56\u4e0d\u540c\uff0c\u8fd9\u4e9b\u5947\u602a\u7684\u4e0d\u662f\u4e8b\u6545\uff0c\u800c\u662f\u5728\u57fa\u4e8e\u590d\u6742\u6027\u7684\u6743\u8861\u4e0b\u800c\u4ed4\u7ec6\u8003\u8651\u7684\u51b3\u7b56\u3002"),(0,r.kt)("div",{className:"footnotes"},(0,r.kt)("hr",{parentName:"div"}),(0,r.kt)("ol",{parentName:"div"},(0,r.kt)("li",{parentName:"ol",id:"fn-1"},(0,r.kt)("strong",{parentName:"li"},"java.util")," \u4e2d\u7684 ",(0,r.kt)("strong",{parentName:"li"},"Map")," \u4f7f\u7528 ",(0,r.kt)("strong",{parentName:"li"},"Map")," \u7684 ",(0,r.kt)("inlineCode",{parentName:"li"},"getKey()")," \u548c ",(0,r.kt)("inlineCode",{parentName:"li"},"getValue()")," \u6267\u884c\u6279\u91cf\u590d\u5236\uff0c\u56e0\u6b64\u8fd9\u662f\u6709\u6548\u7684\u3002\u5982\u679c\u81ea\u5b9a\u4e49 ",(0,r.kt)("strong",{parentName:"li"},"Map")," \u53ea\u662f\u590d\u5236\u6574\u4e2a ",(0,r.kt)("strong",{parentName:"li"},"Map.Entry")," \uff0c\u90a3\u4e48\u8fd9\u79cd\u65b9\u6cd5\u5c31\u4f1a\u51fa\u73b0\u95ee\u9898\u3002",(0,r.kt)("a",{parentName:"li",href:"#fnref-1",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-2"},"\u867d\u7136\u5f53\u6211\u7528\u8fd9\u79cd\u65b9\u5f0f\u63cf\u8ff0\u5b83\u7684\u65f6\u5019\u542c\u8d77\u6765\u5f88\u5947\u602a\u800c\u4e14\u597d\u50cf\u6ca1\u4ec0\u4e48\u7528\u5904\uff0c\u4f46\u5728",(0,r.kt)("a",{parentName:"li",href:"./Type-Information"},"\u7b2c\u5341\u4e5d\u7ae0 \u7c7b\u578b\u4fe1\u606f"),"\u7ae0\u8282\u4e2d\u5df2\u7ecf\u770b\u5230\u8fc7\uff0c\u8fd9\u79cd\u52a8\u6001\u884c\u4e3a\u4e5f\u53ef\u4ee5\u975e\u5e38\u5f3a\u5927\u6709\u7528\u3002",(0,r.kt)("a",{parentName:"li",href:"#fnref-2",className:"footnote-backref"},"\u21a9")),(0,r.kt)("li",{parentName:"ol",id:"fn-3"},"\u5982\u679c\u8fd9\u4e9b\u52a0\u901f\u4ecd\u7136\u65e0\u6cd5\u6ee1\u8db3\u6027\u80fd\u9700\u6c42\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7\u7f16\u5199\u81ea\u5df1\u7684 ",(0,r.kt)("strong",{parentName:"li"},"Map")," \u5e76\u5c06\u5176\u81ea\u5b9a\u4e49\u4e3a\u7279\u5b9a\u7c7b\u578b\u6765\u8fdb\u4e00\u6b65\u52a0\u901f\u8868\u67e5\u627e\uff0c\u4ee5\u907f\u514d\u56e0\u5411 ",(0,r.kt)("strong",{parentName:"li"},"\u5bf9\u8c61")," \u8f6c\u6362\u800c\u5bfc\u81f4\u7684\u5ef6\u8fdf\u3002\u4e3a\u4e86\u8fbe\u5230\u66f4\u9ad8\u7684\u6027\u80fd\u6c34\u5e73\uff0c\u901f\u5ea6\u7231\u597d\u8005\u53ef\u4ee5\u4f7f\u7528 Donald Knuth \u7684\u300a\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u827a\u672f\uff08\u7b2c3\u5377\uff09\uff1a\u6392\u5e8f\u4e0e\u67e5\u627e\u300b\uff08\u7b2c\u4e8c\u7248\uff09\uff0c\u5c06\u6ea2\u51fa\u6876\u5217\u8868\uff08overflow bucket lists\uff09\u66ff\u6362\u4e3a\u5177\u6709\u4e24\u4e2a\u989d\u5916\u4f18\u52bf\u7684\u9635\u5217\uff1a\u5b83\u4eec\u53ef\u4ee5\u9488\u5bf9\u78c1\u76d8\u5b58\u50a8\u8fdb\u884c\u4f18\u5316\uff0c\u5e76\u4e14\u5b83\u4eec\u53ef\u4ee5\u8282\u7701\u5927\u90e8\u5206\u521b\u5efa\u548c\u56de\u6536\u4e2a\u522b\u8bb0\u5f55\uff08individual records\uff09\u7684\u65f6\u95f4\u3002",(0,r.kt)("a",{parentName:"li",href:"#fnref-3",className:"footnote-backref"},"\u21a9")))))}u.isMDXComponent=!0}}]);