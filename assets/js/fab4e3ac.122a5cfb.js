"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2435],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>d});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var p=r.createContext({}),l=function(e){var t=r.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),h=l(a),d=n,m=h["".concat(p,".").concat(d)]||h[d]||u[d]||o;return a?r.createElement(m,i(i({ref:t},c),{},{components:a})):r.createElement(m,i({ref:t},c))}));function d(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var l=2;l<o;l++)i[l]=a[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}h.displayName="MDXCreateElement"},6800:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});var r=a(7462),n=(a(7294),a(3905));const o={},i=void 0,s={unversionedId:"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions",id:"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions",title:"Chapter-10-Item-72-Favor-the-use-of-standard-exceptions",description:"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09",source:"@site/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions.md",sourceDirName:"Books/EffectiveJava3/Chapter-10",slug:"/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions",permalink:"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions",permalink:"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions"},next:{title:"Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction",permalink:"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction"}},p={},l=[{value:"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09",id:"chapter-10-exceptions\u5f02\u5e38",level:2},{value:"Item 72: Favor the use of standard exceptions\uff08\u9f13\u52b1\u590d\u7528\u6807\u51c6\u5f02\u5e38\uff09",id:"item-72-favor-the-use-of-standard-exceptions\u9f13\u52b1\u590d\u7528\u6807\u51c6\u5f02\u5e38",level:3}],c={toc:l};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"chapter-10-exceptions\u5f02\u5e38"},"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09"),(0,n.kt)("h3",{id:"item-72-favor-the-use-of-standard-exceptions\u9f13\u52b1\u590d\u7528\u6807\u51c6\u5f02\u5e38"},"Item 72: Favor the use of standard exceptions\uff08\u9f13\u52b1\u590d\u7528\u6807\u51c6\u5f02\u5e38\uff09"),(0,n.kt)("p",null,"An attribute that distinguishes expert programmers from less experienced ones is that experts strive for and usually achieve a high degree of code reuse. Exceptions are no exception to the rule that code reuse is a good thing. The Java libraries provide a set of exceptions that covers most of the exception-throwing needs of most APIs."),(0,n.kt)("p",null,"\u4e13\u5bb6\u7a0b\u5e8f\u5458\u4e0e\u7ecf\u9a8c\u8f83\u5c11\u7684\u7a0b\u5e8f\u5458\u4e4b\u95f4\u7684\u4e00\u4e2a\u533a\u522b\u662f\uff0c\u4e13\u5bb6\u529b\u6c42\u5b9e\u73b0\u9ad8\u5ea6\u7684\u4ee3\u7801\u590d\u7528\u3002\u4ee3\u7801\u590d\u7528\u662f\u4e00\u4ef6\u597d\u4e8b\uff0c\u5f02\u5e38\u4e5f\u4e0d\u4f8b\u5916\u3002Java \u5e93\u63d0\u4f9b\u4e86\u4e00\u7ec4\u5f02\u5e38\uff0c\u6db5\u76d6\u4e86\u5927\u591a\u6570 API \u7684\u5927\u591a\u6570\u5f02\u5e38\u629b\u51fa\u9700\u6c42\u3002"),(0,n.kt)("p",null,"Reusing standard exceptions has several benefits. Chief among them is that it makes your API easier to learn and use because it matches the established conventions that programmers are already familiar with. A close second is that programs using your API are easier to read because they aren\u2019t cluttered with unfamiliar exceptions. Last (and least), fewer exception classes means a smaller memory footprint and less time spent loading classes."),(0,n.kt)("p",null,"\u590d\u7528\u6807\u51c6\u5f02\u5e38\u6709\u51e0\u4e2a\u597d\u5904\u3002\u5176\u4e2d\u6700\u4e3b\u8981\u7684\u662f\uff0c\u5b83\u4f7f\u4f60\u7684 API \u66f4\u5bb9\u6613\u5b66\u4e60\u548c\u4f7f\u7528\uff0c\u56e0\u4e3a\u5b83\u7b26\u5408\u7a0b\u5e8f\u5458\u5df2\u7ecf\u719f\u6089\u7684\u65e2\u5b9a\u7ea6\u5b9a\u3002\u5176\u6b21\uff0c\u4f7f\u7528\u4f60\u7684 API \u7684\u7a0b\u5e8f\u66f4\u5bb9\u6613\u9605\u8bfb\uff0c\u56e0\u4e3a\u5b83\u4eec\u4e0d\u4f1a\u56e0\u4e3a\u4e0d\u719f\u6089\u7684\u5f02\u5e38\u800c\u6df7\u4e71\u3002\u6700\u540e\uff08\u4e5f\u662f\u6700\u4e0d\u91cd\u8981\u7684\uff09\uff0c\u66f4\u5c11\u7684\u5f02\u5e38\u7c7b\u610f\u5473\u7740\u66f4\u5c0f\u7684\u5185\u5b58\u5360\u7528\u548c\u66f4\u5c11\u7684\u52a0\u8f7d\u7c7b\u7684\u65f6\u95f4\u3002"),(0,n.kt)("p",null,"The most commonly reused exception type is IllegalArgumentException (Item 49). This is generally the exception to throw when the caller passes in an argument whose value is inappropriate. For example, this would be the exception to throw if the caller passed a negative number in a parameter representing the number of times some action was to be repeated."),(0,n.kt)("p",null,"\u6700\u5e38\u89c1\u7684\u590d\u7528\u5f02\u5e38\u7c7b\u578b\u662f IllegalArgumentException\uff08",(0,n.kt)("a",{parentName:"p",href:"./Chapter-8-Item-49-Check-parameters-for-validity"},"Item-49"),"\uff09\u3002\u8fd9\u901a\u5e38\u662f\u8c03\u7528\u8005\u4f20\u5165\u4e0d\u5408\u9002\u7684\u53c2\u6570\u65f6\u629b\u51fa\u7684\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8c03\u7528\u8005\u5728\u8868\u793a\u67d0\u4e2a\u64cd\u4f5c\u8981\u91cd\u590d\u591a\u5c11\u6b21\u7684\u53c2\u6570\u4e2d\u4f20\u9012\u4e86\u4e00\u4e2a\u8d1f\u6570\uff0c\u5219\u629b\u51fa\u8fd9\u4e2a\u5f02\u5e38\u3002"),(0,n.kt)("p",null,"Another commonly reused exception is IllegalStateException. This is generally the exception to throw if the invocation is illegal because of the state of the receiving object. For example, this would be the exception to throw if the caller attempted to use some object before it had been properly initialized."),(0,n.kt)("p",null,"\u53e6\u4e00\u4e2a\u5e38\u88ab\u590d\u7528\u5f02\u5e38\u662f IllegalStateException\u3002\u5982\u679c\u63a5\u6536\u5bf9\u8c61\u7684\u72b6\u6001\u5bfc\u81f4\u8c03\u7528\u975e\u6cd5\uff0c\u5219\u901a\u5e38\u4f1a\u629b\u51fa\u6b64\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u5982\u679c\u8c03\u7528\u8005\u8bd5\u56fe\u5728\u5bf9\u8c61\u88ab\u6b63\u786e\u521d\u59cb\u5316\u4e4b\u524d\u4f7f\u7528\u5b83\uff0c\u90a3\u4e48\u8fd9\u5c06\u662f\u629b\u51fa\u7684\u5f02\u5e38\u3002"),(0,n.kt)("p",null,"Arguably, every erroneous method invocation boils down to an illegal argument or state, but other exceptions are standardly used for certain kinds of illegal arguments and states. If a caller passes null in some parameter for which null values are prohibited, convention dictates that NullPointerException be thrown rather than IllegalArgumentException. Similarly, if a caller passes an out-of-range value in a parameter representing an index into a sequence, IndexOutOfBoundsException should be thrown rather than IllegalArgumentException."),(0,n.kt)("p",null,"\u53ef\u4ee5\u8bf4\uff0c\u6bcf\u4e2a\u9519\u8bef\u7684\u65b9\u6cd5\u8c03\u7528\u90fd\u5f52\u7ed3\u4e3a\u53c2\u6570\u975e\u6cd5\u6216\u72b6\u6001\u975e\u6cd5\uff0c\u4f46\u662f\u6709\u4e00\u4e9b\u5f02\u5e38\u901a\u5e38\u7528\u4e8e\u67d0\u4e9b\u7279\u5b9a\u7684\u53c2\u6570\u975e\u6cd5\u548c\u72b6\u6001\u975e\u6cd5\u3002\u5982\u679c\u8c03\u7528\u8005\u5728\u7981\u6b62\u7a7a\u503c\u7684\u53c2\u6570\u4e2d\u4f20\u9012 null\uff0c\u90a3\u4e48\u6309\u7167\u60ef\u4f8b\uff0c\u629b\u51fa NullPointerException \u800c\u4e0d\u662f IllegalArgumentException\u3002\u7c7b\u4f3c\u5730\uff0c\u5982\u679c\u8c03\u7528\u8005\u5c06\u8868\u793a\u7d22\u5f15\u7684\u53c2\u6570\u4e2d\u7684\u8d85\u51fa\u8303\u56f4\u7684\u503c\u4f20\u9012\u7ed9\u5e8f\u5217\uff0c\u5219\u5e94\u8be5\u629b\u51fa IndexOutOfBoundsException\uff0c\u800c\u4e0d\u662f IllegalArgumentException\u3002"),(0,n.kt)("p",null,"Another reusable exception is ConcurrentModificationException. It should be thrown if an object that was designed for use by a single thread (or with external synchronization) detects that it is being modified concurrently. This exception is at best a hint because it is impossible to reliably detect concurrent modification."),(0,n.kt)("p",null,"\u53e6\u4e00\u4e2a\u53ef\u590d\u7528\u5f02\u5e38\u662f ConcurrentModificationException\u3002\u5982\u679c\u4e00\u4e2a\u5bf9\u8c61\u88ab\u8bbe\u8ba1\u4e3a\u7531\u5355\u4e2a\u7ebf\u7a0b\u4f7f\u7528\uff08\u6216\u4e0e\u5916\u90e8\u540c\u6b65\uff09\uff0c\u5e76\u4e14\u68c0\u6d4b\u5230\u5b83\u6b63\u5728\u88ab\u5e76\u53d1\u5730\u4fee\u6539\uff0c\u5219\u5e94\u8be5\u629b\u51fa\u8be5\u5f02\u5e38\u3002\u56e0\u4e3a\u4e0d\u53ef\u80fd\u53ef\u9760\u5730\u68c0\u6d4b\u5e76\u53d1\u4fee\u6539\uff0c\u6240\u4ee5\u8be5\u5f02\u5e38\u5145\u5176\u91cf\u53ea\u662f\u4e00\u4e2a\u63d0\u793a\u3002"),(0,n.kt)("p",null,"A last standard exception of note is UnsupportedOperationException. This is the exception to throw if an object does not support an attempted operation. Its use is rare because most objects support all of their methods. This exception is used by classes that fail to implement one or more optional operations defined by an interface they implement. For example, an append-only List implementation would throw this exception if someone tried to delete an element from the list."),(0,n.kt)("p",null,"\u6700\u540e\u4e00\u4e2a\u9700\u8981\u6ce8\u610f\u7684\u6807\u51c6\u5f02\u5e38\u662f UnsupportedOperationException\u3002\u5982\u679c\u5bf9\u8c61\u4e0d\u652f\u6301\u5c1d\u8bd5\u7684\u64cd\u4f5c\uff0c\u5219\u629b\u51fa\u6b64\u5f02\u5e38\u3002\u5b83\u5f88\u5c11\u4f7f\u7528\uff0c\u56e0\u4e3a\u5927\u591a\u6570\u5bf9\u8c61\u90fd\u652f\u6301\u5b83\u4eec\u7684\u6240\u6709\u65b9\u6cd5\u3002\u6b64\u5f02\u5e38\u7528\u4e8e\u4e00\u4e2a\u7c7b\u6ca1\u6709\u5b9e\u73b0\u7531\u5176\u5b9e\u73b0\u7684\u63a5\u53e3\u5b9a\u4e49\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u53ef\u9009\u64cd\u4f5c\u3002\u4f8b\u5982\uff0c\u5bf9\u4e8e\u53ea\u652f\u6301\u8ffd\u52a0\u64cd\u4f5c\u7684 List \u5b9e\u73b0\uff0c\u8bd5\u56fe\u4ece\u4e2d\u5220\u9664\u5143\u7d20\u65f6\u5c31\u4f1a\u629b\u51fa\u8fd9\u4e2a\u5f02\u5e38\u3002"),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Do not reuse Exception, RuntimeException, Throwable, or Error directly.")," Treat these classes as if they were abstract. You can't reliably test for these exceptions because they are superclasses of other exceptions that a method may throw."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"\u4e0d\u8981\u76f4\u63a5\u590d\u7528 Exception\u3001RuntimeException\u3001Throwable \u6216 Error\u3002")," \u5e94\u5f53\u5c06\u8fd9\u4e9b\u7c7b\u89c6\u4e3a\u62bd\u8c61\u7c7b\u3002\u4f60\u4e0d\u80fd\u5bf9\u8fd9\u4e9b\u5f02\u5e38\u8fdb\u884c\u53ef\u9760\u7684\u6d4b\u8bd5\uff0c\u56e0\u4e3a\u5b83\u4eec\u662f\u65b9\u6cd5\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u7684\u8d85\u7c7b\u3002"),(0,n.kt)("p",null,"This table summarizes the most commonly reused exceptions:"),(0,n.kt)("p",null,"\u6b64\u8868\u603b\u7ed3\u4e86\u6700\u5e38\u89c1\u7684\u53ef\u590d\u7528\u5f02\u5e38\uff1a"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"center"},"Exception"),(0,n.kt)("th",{parentName:"tr",align:"center"},"Occasion for Use"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"IllegalArgumentException"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Non-null parameter value is inappropriate\uff08\u975e\u7a7a\u53c2\u6570\u503c\u4e0d\u5408\u9002\uff09")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"IllegalStateException"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Object state is inappropriate for method invocation\uff08\u5bf9\u8c61\u72b6\u6001\u4e0d\u9002\u7528\u4e8e\u65b9\u6cd5\u8c03\u7528\uff09")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"NullPointerException"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Parameter value is null where prohibited\uff08\u7981\u6b62\u53c2\u6570\u4e3a\u7a7a\u65f6\u4ecd\u4f20\u5165 null\uff09")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"IndexOutOfBoundsException"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Index parameter value is out of range\uff08\u7d22\u5f15\u53c2\u6570\u503c\u8d85\u51fa\u8303\u56f4\uff09")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"ConcurrentModificationException"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Concurrent modification of an object has been detected where it is prohibited\uff08\u5728\u7981\u6b62\u5e76\u53d1\u4fee\u6539\u5bf9\u8c61\u7684\u5730\u65b9\u68c0\u6d4b\u5230\u8be5\u52a8\u4f5c\uff09")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"center"},"UnsupportedOperationException"),(0,n.kt)("td",{parentName:"tr",align:"center"},"Object does not support method\uff08\u5bf9\u8c61\u4e0d\u652f\u6301\u8be5\u65b9\u6cd5\u8c03\u7528\uff09")))),(0,n.kt)("p",null,"While these are by far the most commonly reused exceptions, others may be reused where circumstances warrant. For example, it would be appropriate to reuse ArithmeticException and NumberFormatException if you were implementing arithmetic objects such as complex numbers or rational numbers. If an exception fits your needs, go ahead and use it, but only if the conditions under which you would throw it are consistent with the exception\u2019s documentation: reuse must be based on documented semantics, not just on name. Also, feel free to subclass a standard exception if you want to add more detail (Item 75), but remember that exceptions are serializable (Chapter 12). That alone is reason not to write your own exception class without good reason."),(0,n.kt)("p",null,"\u867d\u7136\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u8fd9\u4e9b\u662f\u6700\u5e38\u89c1\u7684\u590d\u7528\u5f02\u5e38\uff0c\u4f46\u662f\u5728\u73af\u5883\u5141\u8bb8\u7684\u60c5\u51b5\u4e0b\u4e5f\u53ef\u4ee5\u590d\u7528\u5176\u4ed6\u5f02\u5e38\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4f60\u6b63\u5728\u5b9e\u73b0\u8bf8\u5982\u590d\u6570\u6216\u6709\u7406\u6570\u4e4b\u7c7b\u7684\u7b97\u672f\u5bf9\u8c61\uff0c\u90a3\u4e48\u590d\u7528 ArithmeticException \u548c NumberFormatException \u662f\u5408\u9002\u7684\u3002\u5982\u679c\u4e00\u4e2a\u5f02\u5e38\u7b26\u5408\u4f60\u7684\u9700\u8981\uff0c\u90a3\u4e48\u7ee7\u7eed\u4f7f\u7528\u5b83\uff0c\u4f46\u524d\u63d0\u662f\u4f60\u629b\u51fa\u5b83\u7684\u6761\u4ef6\u4e0e\u5f02\u5e38\u7684\u6587\u6863\u63cf\u8ff0\u4e00\u81f4\uff1a\u590d\u7528\u5fc5\u987b\u57fa\u4e8e\u6587\u6863\u5316\u7684\u8bed\u4e49\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u57fa\u4e8e\u540d\u79f0\u3002\u53e6\u5916\uff0c\u5982\u679c\u4f60\u60f3\u6dfb\u52a0\u66f4\u591a\u7684\u7ec6\u8282\uff0c\u53ef\u4ee5\u968f\u610f\u5b50\u7c7b\u5316\u6807\u51c6\u5f02\u5e38(\u7b2c75\u9879)\uff0c\u4f46\u662f\u8bf7\u8bb0\u4f4f\uff0c\u5f02\u5e38\u662f\u53ef\u5e8f\u5217\u5316\u7684\uff08Chapter 12\uff09\u3002\u5982\u679c\u6ca1\u6709\u5145\u5206\u7684\u7406\u7531\uff0c\u4e0d\u8981\u7f16\u5199\u81ea\u5df1\u7684\u5f02\u5e38\u7c7b\u3002"),(0,n.kt)("p",null,"Choosing which exception to reuse can be tricky because the \u201coccasions for use\u201d in the table above do not appear to be mutually exclusive. Consider the case of an object representing a deck of cards, and suppose there were a method to deal a hand from the deck that took as an argument the size of the hand. If the caller passed a value larger than the number of cards remaining in the deck, it could be construed as an IllegalArgumentException (the handSize parameter value is too high) or an IllegalStateException (the deck contains too few cards). Under these circumstances, the rule is to throw IllegalStateException if no argument values would have worked, otherwise throw IllegalArgumentException."),(0,n.kt)("p",null,"\u9009\u62e9\u590d\u7528\u54ea\u4e2a\u5f02\u5e38\u53ef\u80fd\u6bd4\u8f83\u68d8\u624b\uff0c\u56e0\u4e3a\u4e0a\u8868\u4e2d\u7684\u300c\u4f7f\u7528\u573a\u5408\u300d\u4f3c\u4e4e\u5e76\u4e0d\u76f8\u4e92\u6392\u65a5\u3002\u8003\u8651\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8868\u793a\u4e00\u526f\u724c\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a\u65b9\u6cd5\u4ee3\u8868\u53d1\u724c\u64cd\u4f5c\uff0c\u8be5\u65b9\u6cd5\u5c06\u624b\u724c\u591a\u5c11\u4f5c\u4e3a\u53c2\u6570\u3002\u5982\u679c\u8c03\u7528\u8005\u4f20\u9012\u7684\u503c\u5927\u4e8e\u724c\u5806\u4e2d\u5269\u4f59\u7684\u724c\u7684\u6570\u91cf\uff0c\u5219\u53ef\u4ee5\u5c06\u5176\u89e3\u91ca\u4e3a IllegalArgumentException \uff08handSize \u53c2\u6570\u503c\u592a\u5927\uff09\u6216 IllegalStateException\uff08\u724c\u5806\u4e2d\u5305\u542b\u7684\u724c\u592a\u5c11\uff09\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u89c4\u5219\u662f\uff1a\u5982\u679c\u6ca1\u6709\u53c2\u6570\u503c\uff0c\u629b\u51fa IllegalStateException\uff0c\u5426\u5219\u629b\u51fa IllegalArgumentException\u3002"),(0,n.kt)("hr",null),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},(0,n.kt)("a",{parentName:"strong",href:"./Chapter-10/Chapter-10-Introduction"},"Back to contents of the chapter\uff08\u8fd4\u56de\u7ae0\u8282\u76ee\u5f55\uff09"))),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Previous Item\uff08\u4e0a\u4e00\u6761\u76ee\uff09\uff1a",(0,n.kt)("a",{parentName:"strong",href:"./Chapter-10/Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions"},"Item 71: Avoid unnecessary use of checked exceptions\uff08\u907f\u514d\u4e0d\u5fc5\u8981\u5730\u4f7f\u7528 checked \u5f02\u5e38\uff09"))),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("strong",{parentName:"li"},"Next Item\uff08\u4e0b\u4e00\u6761\u76ee\uff09\uff1a",(0,n.kt)("a",{parentName:"strong",href:"./Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction"},"Item 73: Throw exceptions appropriate to the abstraction\uff08\u629b\u51fa\u80fd\u7528\u62bd\u8c61\u89e3\u91ca\u7684\u5f02\u5e38\uff09")))))}u.isMDXComponent=!0}}]);