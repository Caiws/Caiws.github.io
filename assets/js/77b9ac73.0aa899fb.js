"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2151],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),l=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=l(e.components);return r.createElement(p.Provider,{value:t},e.children)},h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(n),m=o,d=u["".concat(p,".").concat(m)]||u[m]||h[m]||a;return n?r.createElement(d,i(i({ref:t},c),{},{components:n})):r.createElement(d,i({ref:t},c))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1256:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=n(7462),o=(n(7294),n(3905));const a={},i=void 0,s={unversionedId:"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction",id:"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction",title:"Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction",description:"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09",source:"@site/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction.md",sourceDirName:"Books/EffectiveJava3/Chapter-10",slug:"/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction",permalink:"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chapter-10-Item-72-Favor-the-use-of-standard-exceptions",permalink:"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions"},next:{title:"Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method",permalink:"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method"}},p={},l=[{value:"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09",id:"chapter-10-exceptions\u5f02\u5e38",level:2},{value:"Item 73: Throw exceptions appropriate to the abstraction\uff08\u629b\u51fa\u80fd\u7528\u62bd\u8c61\u89e3\u91ca\u7684\u5f02\u5e38\uff09",id:"item-73-throw-exceptions-appropriate-to-the-abstraction\u629b\u51fa\u80fd\u7528\u62bd\u8c61\u89e3\u91ca\u7684\u5f02\u5e38",level:3}],c={toc:l};function h(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"chapter-10-exceptions\u5f02\u5e38"},"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09"),(0,o.kt)("h3",{id:"item-73-throw-exceptions-appropriate-to-the-abstraction\u629b\u51fa\u80fd\u7528\u62bd\u8c61\u89e3\u91ca\u7684\u5f02\u5e38"},"Item 73: Throw exceptions appropriate to the abstraction\uff08\u629b\u51fa\u80fd\u7528\u62bd\u8c61\u89e3\u91ca\u7684\u5f02\u5e38\uff09"),(0,o.kt)("p",null,"It is disconcerting when a method throws an exception that has no apparent connection to the task that it performs. This often happens when a method propagates an exception thrown by a lower-level abstraction. Not only is it disconcerting, but it pollutes the API of the higher layer with implementation details. If the implementation of the higher layer changes in a later release, the exceptions it throws will change too, potentially breaking existing client programs."),(0,o.kt)("p",null,"\u5f53\u4e00\u4e2a\u65b9\u6cd5\u629b\u51fa\u4e00\u4e2a\u4e0e\u5b83\u6240\u6267\u884c\u7684\u4efb\u52a1\u6ca1\u6709\u660e\u663e\u5173\u8054\u7684\u5f02\u5e38\u65f6\uff0c\u8fd9\u662f\u4ee4\u4eba\u4e0d\u5b89\u7684\u3002\u8fd9\u79cd\u60c5\u51b5\u7ecf\u5e38\u53d1\u751f\u5728\u7531\u65b9\u6cd5\u4f20\u64ad\u81ea\u4f4e\u5c42\u62bd\u8c61\u629b\u51fa\u7684\u5f02\u5e38\u3002\u5b83\u4e0d\u4ec5\u4ee4\u4eba\u4e0d\u5b89\uff0c\u800c\u4e14\u8ba9\u5b9e\u73b0\u7ec6\u8282\u6c61\u67d3\u4e86\u4e0a\u5c42\u7684 API\u3002\u5982\u679c\u9ad8\u5c42\u5b9e\u73b0\u5728\u4ee5\u540e\u7684\u7248\u672c\u4e2d\u53d1\u751f\u53d8\u5316\uff0c\u90a3\u4e48\u5b83\u629b\u51fa\u7684\u5f02\u5e38\u4e5f\u4f1a\u53d1\u751f\u53d8\u5316\uff0c\u53ef\u80fd\u4f1a\u7834\u574f\u73b0\u6709\u7684\u5ba2\u6237\u7aef\u7a0b\u5e8f\u3002"),(0,o.kt)("p",null,"To avoid this problem, ",(0,o.kt)("strong",{parentName:"p"},"higher layers should catch lower-level exceptions and, in their place, throw exceptions that can be explained in terms of the higher-level abstraction.")," This idiom is known as exception translation:"),(0,o.kt)("p",null,"\u4e3a\u4e86\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff0c",(0,o.kt)("strong",{parentName:"p"},"\u9ad8\u5c42\u5e94\u8be5\u6355\u83b7\u4f4e\u5c42\u5f02\u5e38\uff0c\u5e76\u786e\u4fdd\u629b\u51fa\u7684\u5f02\u5e38\u53ef\u4ee5\u7528\u9ad8\u5c42\u62bd\u8c61\u89e3\u91ca\u3002")," \u8fd9\u4e2a\u4e60\u60ef\u7528\u6cd5\u79f0\u4e3a\u5f02\u5e38\u8f6c\u6362\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// Exception Translation\ntry {\n    ... // Use lower-level abstraction to do our bidding\n} catch (LowerLevelException e) {\n    throw new HigherLevelException(...);\n}\n")),(0,o.kt)("p",null,"Here is an example of exception translation taken from the AbstractSequentialList class, which is a skeletal implementation (Item 20) of the List interface. In this example, exception translation is mandated by the specification of the get method in the ",(0,o.kt)("inlineCode",{parentName:"p"},"List<E>")," interface:"),(0,o.kt)("p",null,"\u4e0b\u9762\u662f\u6765\u81ea AbstractSequentialList \u7c7b\u7684\u5f02\u5e38\u8f6c\u6362\u793a\u4f8b\uff0c\u8be5\u7c7b\u662f List \u63a5\u53e3\u7684\u4e00\u4e2a\u6846\u67b6\u5b9e\u73b0\uff08",(0,o.kt)("a",{parentName:"p",href:"./Chapter-4-Item-20-Prefer-interfaces-to-abstract-classes"},"Item-20"),"\uff09\u3002\u5728\u672c\u4f8b\u4e2d\uff0c\u5f02\u5e38\u8f6c\u6362\u662f\u7531 ",(0,o.kt)("inlineCode",{parentName:"p"},"List<E>")," \u63a5\u53e3\u4e2d\u7684 get \u65b9\u6cd5\u89c4\u8303\u5f3a\u5236\u6267\u884c\u7684\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'/**\n* Returns the element at the specified position in this list.\n* @throws IndexOutOfBoundsException if the index is out of range\n* ({@code index < 0 || index >= size()}).\n*/\npublic E get(int index) {\n    ListIterator<E> i = listIterator(index);\n    try {\n        return i.next();\n    }\n    catch (NoSuchElementException e) {\n        throw new IndexOutOfBoundsException("Index: " + index);\n    }\n}\n')),(0,o.kt)("p",null,"A special form of exception translation called exception chaining is called for in cases where the lower-level exception might be helpful to someone debugging the problem that caused the higher-level exception. The lower-level exception (the cause) is passed to the higher-level exception, which provides an accessor method (Throwable\u2019s getCause method) to retrieve the lower-level exception:"),(0,o.kt)("p",null,"\u5982\u679c\u4f4e\u5c42\u5f02\u5e38\u53ef\u80fd\u6709\u52a9\u4e8e\u8c03\u8bd5\u9ad8\u5c42\u5f02\u5e38\u7684\u95ee\u9898\uff0c\u5219\u9700\u8981\u4e00\u79cd\u79f0\u4e3a\u94fe\u5f0f\u5f02\u5e38\u7684\u7279\u6b8a\u5f02\u5e38\u8f6c\u6362\u5f62\u5f0f\u3002\u4f4e\u5c42\u5f02\u5e38\uff08\u4f5c\u4e3a\u539f\u56e0\uff09\u4f20\u9012\u7ed9\u9ad8\u5c42\u5f02\u5e38\uff0c\u9ad8\u5c42\u5f02\u5e38\u63d0\u4f9b\u4e00\u4e2a\u8bbf\u95ee\u5668\u65b9\u6cd5\uff08Throwable \u7684 getCause \u65b9\u6cd5\uff09\u6765\u68c0\u7d22\u4f4e\u5c42\u5f02\u5e38\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// Exception Chaining\ntry {\n    ... // Use lower-level abstraction to do our bidding\n}\ncatch (LowerLevelException cause) {\n    throw new HigherLevelException(cause);\n}\n")),(0,o.kt)("p",null,"The higher-level exception\u2019s constructor passes the cause to a chaining-aware superclass constructor, so it is ultimately passed to one of Throwable\u2019s chaining-aware constructors, such as Throwable(Throwable):"),(0,o.kt)("p",null,"\u9ad8\u5c42\u5f02\u5e38\u7684\u6784\u9020\u51fd\u6570\u5c06\u539f\u56e0\u4f20\u9012\u7ed9\u80fd\u591f\u63a5\u6536\u94fe\u5f0f\u5f02\u5e38\u7684\u8d85\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u56e0\u6b64\u5b83\u6700\u7ec8\u88ab\u4f20\u9012\u7ed9 Throwable \u7684\u4e00\u4e2a\u63a5\u6536\u94fe\u5f0f\u5f02\u5e38\u7684\u6784\u9020\u51fd\u6570\uff0c\u6bd4\u5982 ",(0,o.kt)("inlineCode",{parentName:"p"},"Throwable(Throwable)"),"\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// Exception with chaining-aware constructor\nclass HigherLevelException extends Exception {\n    HigherLevelException(Throwable cause) {\n        super(cause);\n    }\n}\n")),(0,o.kt)("p",null,"Most standard exceptions have chaining-aware constructors. For exceptions that don\u2019t, you can set the cause using Throwable\u2019s initCause method. Not only does exception chaining let you access the cause programmatically (with getCause), but it integrates the cause\u2019s stack trace into that of the higher-level exception."),(0,o.kt)("p",null,"\u5927\u591a\u6570\u6807\u51c6\u5f02\u5e38\u90fd\u6709\u63a5\u6536\u94fe\u5f0f\u5f02\u5e38\u7684\u6784\u9020\u51fd\u6570\u3002\u5bf9\u4e8e\u4e0d\u652f\u6301\u94fe\u5f0f\u5f02\u5e38\u7684\u5f02\u5e38\uff0c\u53ef\u4ee5\u4f7f\u7528 Throwable \u7684 initCause \u65b9\u6cd5\u8bbe\u7f6e\u539f\u56e0\u3002\u5f02\u5e38\u94fe\u63a5\u4e0d\u4ec5\u5141\u8bb8\u4f60\u4ee5\u7f16\u7a0b\u65b9\u5f0f\u8bbf\u95ee\u539f\u56e0\uff08\u4f7f\u7528 getCause\uff09\uff0c\u800c\u4e14\u8fd8\u5c06\u539f\u56e0\u7684\u5806\u6808\u8ddf\u8e2a\u96c6\u6210\u5230\u66f4\u9ad8\u5c42\u5f02\u5e38\u7684\u5806\u6808\u8ddf\u8e2a\u4e2d\u3002"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"While exception translation is superior to mindless propagation of exceptions from lower layers, it should not be overused.")," Where possible, the best way to deal with exceptions from lower layers is to avoid them, by ensuring that lower-level methods succeed. Sometimes you can do this by checking the validity of the higher-level method\u2019s parameters before passing them on to lower layers."),(0,o.kt)("p",null,"\u867d\u7136\u5f02\u5e38\u8f6c\u6362\u4f18\u4e8e\u5e95\u5c42\u5f02\u5e38\u7684\u76f2\u76ee\u4f20\u64ad\uff0c\u4f46\u5b83\u4e0d\u5e94\u8be5\u88ab\u8fc7\u5ea6\u4f7f\u7528\u3002\u5728\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u5904\u7406\u4f4e\u5c42\u5f02\u5e38\u7684\u6700\u4f73\u65b9\u6cd5\u662f\u786e\u4fdd\u4f4e\u5c42\u65b9\u6cd5\u907f\u514d\u5f02\u5e38\u3002\u6709\u65f6\uff0c\u4f60\u53ef\u4ee5\u5728\u5c06\u9ad8\u5c42\u65b9\u6cd5\u7684\u53c2\u6570\u4f20\u9012\u5230\u4f4e\u5c42\u4e4b\u524d\u68c0\u67e5\u5b83\u4eec\u7684\u6709\u6548\u6027\u3002"),(0,o.kt)("p",null,"If it is impossible to prevent exceptions from lower layers, the next best thing is to have the higher layer silently work around these exceptions, insulating the caller of the higher-level method from lower-level problems. Under these circumstances, it may be appropriate to log the exception using some appropriate logging facility such as java.util.logging. This allows programmers to investigate the problem, while insulating client code and the users from it."),(0,o.kt)("p",null,"\u5982\u679c\u4e0d\u53ef\u80fd\u4ece\u4f4e\u5c42\u9632\u6b62\u5f02\u5e38\uff0c\u90a3\u4e48\u4e0b\u4e00\u4e2a\u6700\u597d\u7684\u65b9\u6cd5\u5c31\u662f\u8ba9\u9ad8\u5c42\u9759\u9ed8\u5904\u7406\u8fd9\u4e9b\u5f02\u5e38\uff0c\u4f7f\u8f83\u9ad8\u5c42\u65b9\u6cd5\u7684\u8c03\u7528\u8005\u514d\u53d7\u4f4e\u5c42\u95ee\u9898\u7684\u5f71\u54cd\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u4e9b\u9002\u5f53\u7684\u65e5\u5fd7\u5de5\u5177\uff08\u5982 ",(0,o.kt)("inlineCode",{parentName:"p"},"java.util.logging"),"\uff09\u6765\u8bb0\u5f55\u5f02\u5e38\u3002\u8fd9\u5141\u8bb8\u7a0b\u5e8f\u5458\u7814\u7a76\u95ee\u9898\uff0c\u540c\u65f6\u5c06\u5ba2\u6237\u7aef\u4ee3\u7801\u548c\u7528\u6237\u4e0e\u4e4b\u9694\u79bb\u3002"),(0,o.kt)("p",null,"In summary, if it isn\u2019t feasible to prevent or to handle exceptions from lower layers, use exception translation, unless the lower-level method happens to guarantee that all of its exceptions are appropriate to the higher level. Chaining provides the best of both worlds: it allows you to throw an appropriate higherlevel exception, while capturing the underlying cause for failure analysis (Item 75)."),(0,o.kt)("p",null,"\u603b\u4e4b\uff0c\u5982\u679c\u65e0\u6cd5\u9632\u6b62\u6216\u5904\u7406\u6765\u81ea\u4f4e\u5c42\u7684\u5f02\u5e38\uff0c\u5219\u4f7f\u7528\u5f02\u5e38\u8f6c\u6362\uff0c\u4f46\u8981\u4fdd\u8bc1\u4f4e\u5c42\u65b9\u6cd5\u7684\u6240\u6709\u5f02\u5e38\u90fd\u9002\u7528\u4e8e\u8f83\u9ad8\u5c42\u3002\u94fe\u5f0f\u5f02\u5e38\u63d0\u4f9b\u4e86\u517c\u987e\u4e24\u65b9\u9762\u7684\u6700\u4f73\u670d\u52a1\uff1a\u5141\u8bb8\u629b\u51fa\u9002\u5f53\u7684\u9ad8\u5c42\u5f02\u5e38\uff0c\u540c\u65f6\u6355\u83b7\u5e76\u5206\u6790\u5931\u8d25\u7684\u6f5c\u5728\u539f\u56e0\uff08",(0,o.kt)("a",{parentName:"p",href:"./Chapter-10/Chapter-10-Item-75-Include-failure-capture-information-in-detail-messages"},"Item-75"),"\uff09\u3002"),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"./Chapter-10/Chapter-10-Introduction"},"Back to contents of the chapter\uff08\u8fd4\u56de\u7ae0\u8282\u76ee\u5f55\uff09"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Previous Item\uff08\u4e0a\u4e00\u6761\u76ee\uff09\uff1a",(0,o.kt)("a",{parentName:"strong",href:"./Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions"},"Item 72: Favor the use of standard exceptions\uff08\u9f13\u52b1\u590d\u7528\u6807\u51c6\u5f02\u5e38\uff09"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Next Item\uff08\u4e0b\u4e00\u6761\u76ee\uff09\uff1a",(0,o.kt)("a",{parentName:"strong",href:"./Chapter-10/Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method"},"Item 74: Document all exceptions thrown by each method\uff08\u4e3a\u6bcf\u4e2a\u65b9\u6cd5\u8bb0\u5f55\u4f1a\u629b\u51fa\u7684\u6240\u6709\u5f02\u5e38\uff09")))))}h.isMDXComponent=!0}}]);