"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2968],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>m});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),c=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=c(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),h=c(r),m=o,y=h["".concat(i,".").concat(m)]||h[m]||p[m]||a;return r?n.createElement(y,l(l({ref:t},u),{},{components:r})):n.createElement(y,l({ref:t},u))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=h;var s={};for(var i in t)hasOwnProperty.call(t,i)&&(s[i]=t[i]);s.originalType=e,s.mdxType="string"==typeof e?e:o,l[1]=s;for(var c=2;c<a;c++)l[c]=r[c];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},4241:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const a={},l=void 0,s={unversionedId:"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls",id:"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls",title:"Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls",description:"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09",source:"@site/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls.md",sourceDirName:"Books/EffectiveJava3/Chapter-8",slug:"/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls",permalink:"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Chapter-8-Item-53-Use-varargs-judiciously",permalink:"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-53-Use-varargs-judiciously"},next:{title:"Chapter-8-Item-55-Return-optionals-judiciously",permalink:"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-55-Return-optionals-judiciously"}},i={},c=[{value:"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09",id:"chapter-8-methods\u65b9\u6cd5",level:2},{value:"Item 54: Return empty collections or arrays, not nulls\uff08\u8fd4\u56de\u7a7a\u96c6\u5408\u6216\u6570\u7ec4\uff0c\u800c\u4e0d\u662f null\uff09",id:"item-54-return-empty-collections-or-arrays-not-nulls\u8fd4\u56de\u7a7a\u96c6\u5408\u6216\u6570\u7ec4\u800c\u4e0d\u662f-null",level:3}],u={toc:c};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"chapter-8-methods\u65b9\u6cd5"},"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09"),(0,o.kt)("h3",{id:"item-54-return-empty-collections-or-arrays-not-nulls\u8fd4\u56de\u7a7a\u96c6\u5408\u6216\u6570\u7ec4\u800c\u4e0d\u662f-null"},"Item 54: Return empty collections or arrays, not nulls\uff08\u8fd4\u56de\u7a7a\u96c6\u5408\u6216\u6570\u7ec4\uff0c\u800c\u4e0d\u662f null\uff09"),(0,o.kt)("p",null,"It is not uncommon to see methods that look something like this:"),(0,o.kt)("p",null,"\u5982\u4e0b\u7684\u65b9\u6cd5\u5f88\u5e38\u89c1\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// Returns null to indicate an empty collection. Don't do this!\nprivate final List<Cheese> cheesesInStock = ...;\n/**\n* @return a list containing all of the cheeses in the shop,\n* or null if no cheeses are available for purchase.\n*/\npublic List<Cheese> getCheeses() {\n    return cheesesInStock.isEmpty() ? null: new ArrayList<>(cheesesInStock);\n}\n")),(0,o.kt)("p",null,"There is no reason to special-case the situation where no cheeses are available for purchase. Doing so requires extra code in the client to handle the possibly null return value, for example:"),(0,o.kt)("p",null,"\u6ca1\u6709\u7406\u7531\u5bf9\u6ca1\u6709\u5976\u916a\u53ef\u4f9b\u8d2d\u4e70\u7684\u60c5\u51b5\u8fdb\u884c\u7279\u6b8a\u5904\u7406\u3002\u5982\u679c\u8fd9\u6837\u505a\uff0c\u5728\u5ba2\u6237\u7aef\u9700\u8981\u989d\u5916\u7684\u4ee3\u7801\u5904\u7406\u53ef\u80fd\u4e3a\u7a7a\u7684\u8fd4\u56de\u503c\uff0c\u4f8b\u5982\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'List<Cheese> cheeses = shop.getCheeses();\nif (cheeses != null && cheeses.contains(Cheese.STILTON))\n    System.out.println("Jolly good, just the thing.");\n')),(0,o.kt)("p",null,"This sort of circumlocution is required in nearly every use of a method that returns null in place of an empty collection or array. It is error-prone, because the programmer writing the client might forget to write the special-case code to handle a null return. Such an error may go unnoticed for years because such methods usually return one or more objects. Also, returning null in place of an empty container complicates the implementation of the method returning the container."),(0,o.kt)("p",null,"\u5728\u51e0\u4e4e\u6bcf\u6b21\u4f7f\u7528\u8fd4\u56de null \u6765\u4ee3\u66ff\u7a7a\u96c6\u5408\u6216\u6570\u7ec4\u7684\u65b9\u6cd5\u65f6\uff0c\u90fd\u9700\u8981\u4f7f\u7528\u8fd9\u79cd\u6743\u5b9c\u4e4b\u8ba1\u3002\u5b83\u5f88\u5bb9\u6613\u51fa\u9519\uff0c\u56e0\u4e3a\u7f16\u5199\u5ba2\u6237\u7aef\u7684\u7a0b\u5e8f\u5458\u53ef\u80fd\u5fd8\u8bb0\u7f16\u5199\u7279\u6b8a\u60c5\u51b5\u7684\u4ee3\u7801\u6765\u5904\u7406 null \u8fd4\u56de\u3002\u8fd9\u6837\u7684\u9519\u8bef\u53ef\u80fd\u4f1a\u88ab\u5ffd\u7565\u591a\u5e74\uff0c\u56e0\u4e3a\u8fd9\u6837\u7684\u65b9\u6cd5\u901a\u5e38\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u5bf9\u8c61\u3002\u6b64\u5916\uff0c\u5728\u7a7a\u5bb9\u5668\u4e2d\u8fd4\u56de null \u4f1a\u4f7f\u8fd4\u56de\u5bb9\u5668\u7684\u65b9\u6cd5\u7684\u5b9e\u73b0\u590d\u6742\u5316\u3002"),(0,o.kt)("p",null,"It is sometimes argued that a null return value is preferable to an empty collection or array because it avoids the expense of allocating the empty container. This argument fails on two counts. First, it is inadvisable to worry about performance at this level unless measurements have shown that the allocation in question is a real contributor to performance problems (Item 67). Second, it is possible to return empty collections and arrays without allocating them. Here is the typical code to return a possibly empty collection. Usually, this is all you need:"),(0,o.kt)("p",null,"\u6709\u65f6\u6709\u4eba\u8ba4\u4e3a\uff0c\u7a7a\u8fd4\u56de\u503c\u6bd4\u7a7a\u96c6\u5408\u6216\u6570\u7ec4\u66f4\u53ef\u53d6\uff0c\u56e0\u4e3a\u5b83\u907f\u514d\u4e86\u5206\u914d\u7a7a\u5bb9\u5668\u7684\u5f00\u9500\u3002\u8fd9\u4e2a\u8bba\u70b9\u6709\u4e24\u70b9\u662f\u4e0d\u6210\u7acb\u7684\u3002\u9996\u5148\uff0c\u5728\u8fd9\u4e2a\u7ea7\u522b\u4e0a\u62c5\u5fc3\u6027\u80fd\u662f\u4e0d\u660e\u667a\u7684\uff0c\u9664\u975e\u5206\u6790\u8868\u660e\u8fd9\u4e2a\u65b9\u6cd5\u6b63\u662f\u9020\u6210\u6027\u80fd\u95ee\u9898\u7684\u771f\u6b63\u6e90\u5934\uff08",(0,o.kt)("a",{parentName:"p",href:"./Chapter-9-Item-67-Optimize-judiciously"},"Item-67"),"\uff09\u3002\u7b2c\u4e8c\uff0c\u8fd4\u56de\u7a7a\u96c6\u5408\u548c\u6570\u7ec4\u800c\u4e0d\u5206\u914d\u5b83\u4eec\u662f\u53ef\u80fd\u7684\u3002\u4e0b\u9762\u662f\u8fd4\u56de\u53ef\u80fd\u4e3a\u7a7a\u7684\u96c6\u5408\u7684\u5178\u578b\u4ee3\u7801\u3002\u901a\u5e38\uff0c\u8fd9\u5c31\u662f\u4f60\u6240\u9700\u8981\u7684\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"//The right way to return a possibly empty collection\npublic List<Cheese> getCheeses() {\n    return new ArrayList<>(cheesesInStock);\n}\n")),(0,o.kt)("p",null,"In the unlikely event that you have evidence suggesting that allocating empty collections is harming performance, you can avoid the allocations by returning the same immutable empty collection repeatedly, as immutable objects may be shared freely (Item 17). Here is the code to do it, using the Collections.emptyList method. If you were returning a set, you\u2019d use Collections.emptySet; if you were returning a map, you\u2019d use Collections.emptyMap. But remember, this is an optimization, and it\u2019s seldom called for. If you think you need it, measure performance before and after, to ensure that it\u2019s actually helping:"),(0,o.kt)("p",null,"\u5728\u4e0d\u592a\u53ef\u80fd\u7684\u60c5\u51b5\u4e0b\uff0c\u4f60\u6709\u8bc1\u636e\u8868\u660e\u5206\u914d\u7a7a\u96c6\u5408\u4f1a\u635f\u5bb3\u6027\u80fd\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u91cd\u590d\u8fd4\u56de\u76f8\u540c\u7684\u4e0d\u53ef\u53d8\u7a7a\u96c6\u5408\u6765\u907f\u514d\u5206\u914d\uff0c\u56e0\u4e3a\u4e0d\u53ef\u53d8\u5bf9\u8c61\u53ef\u4ee5\u81ea\u7531\u5171\u4eab\uff08",(0,o.kt)("a",{parentName:"p",href:"./Chapter-4-Item-17-Minimize-mutability"},"Item-17"),"\uff09\u3002\u4e0b\u9762\u662f\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"Collections.emptyList")," \u5b8c\u6210\u6b64\u4efb\u52a1\u7684\u4ee3\u7801\u3002\u5982\u679c\u4f60\u8981\u8fd4\u56de\u4e00\u4e2a Set\uff0c\u4f60\u4f1a\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"Collections.emptySet"),"\uff1b\u5982\u679c\u8981\u8fd4\u56de Map\uff0c\u5219\u4f7f\u7528 ",(0,o.kt)("inlineCode",{parentName:"p"},"Collections.emptyMap"),"\u3002\u4f46\u662f\u8bf7\u8bb0\u4f4f\uff0c\u8fd9\u662f\u4e00\u4e2a\u4f18\u5316\uff0c\u5f88\u5c11\u771f\u6b63\u9700\u8981\u5b83\u3002\u5982\u679c\u4f60\u8ba4\u4e3a\u4f60\u9700\u8981\u5b83\uff0c\u6d4b\u8bd5\u4e00\u4e0b\u524d\u540e\u7684\u8868\u73b0\uff0c\u786e\u4fdd\u5b83\u786e\u5b9e\u6709\u5e2e\u52a9\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// Optimization - avoids allocating empty collections\npublic List<Cheese> getCheeses() {\n    return cheesesInStock.isEmpty() ? Collections.emptyList(): new ArrayList<>(cheesesInStock);\n}\n")),(0,o.kt)("p",null,"The situation for arrays is identical to that for collections. Never return null instead of a zero-length array. Normally, you should simply return an array of the correct length, which may be zero. Note that we\u2019re passing a zero-length array into the toArray method to indicate the desired return type, which is Cheese[]:"),(0,o.kt)("p",null,"\u6570\u7ec4\u7684\u60c5\u51b5\u4e0e\u96c6\u5408\u7684\u60c5\u51b5\u76f8\u540c\u3002\u6c38\u8fdc\u4e0d\u8981\u8fd4\u56de null\uff0c\u800c\u5e94\u8be5\u8fd4\u56de\u96f6\u957f\u5ea6\u7684\u6570\u7ec4\u3002\u901a\u5e38\uff0c\u4f60\u5e94\u8be5\u7b80\u5355\u5730\u8fd4\u56de\u4e00\u4e2a\u6b63\u786e\u957f\u5ea6\u7684\u6570\u7ec4\uff0c\u5b83\u53ef\u80fd\u662f\u96f6\u957f\u5ea6\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u5c06\u4e00\u4e2a\u96f6\u957f\u5ea6\u7684\u6570\u7ec4\u4f20\u9012\u5230 toArray \u65b9\u6cd5\u4e2d\uff0c\u4ee5\u6307\u793a\u6240\u9700\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u5373 Cheese","[0]","\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"//The right way to return a possibly empty array\npublic Cheese[] getCheeses() {\n    return cheesesInStock.toArray(new Cheese[0]);\n}\n")),(0,o.kt)("p",null,"If you believe that allocating zero-length arrays is harming performance, you can return the same zero-length array repeatedly because all zero-length arrays are immutable:"),(0,o.kt)("p",null,"\u5982\u679c\u4f60\u8ba4\u4e3a\u5206\u914d\u96f6\u957f\u5ea6\u6570\u7ec4\u4f1a\u635f\u5bb3\u6027\u80fd\uff0c\u4f60\u53ef\u4ee5\u91cd\u590d\u8fd4\u56de\u76f8\u540c\u7684\u96f6\u957f\u5ea6\u6570\u7ec4\uff0c\u56e0\u4e3a\u6240\u6709\u7684\u96f6\u957f\u5ea6\u6570\u7ec4\u90fd\u662f\u4e0d\u53ef\u53d8\u7684\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// Optimization - avoids allocating empty arrays\nprivate static final Cheese[] EMPTY_CHEESE_ARRAY = new Cheese[0];\npublic Cheese[] getCheeses() {\n    return cheesesInStock.toArray(EMPTY_CHEESE_ARRAY);\n}\n")),(0,o.kt)("p",null,"In the optimized version, we pass the same empty array into every toArray call, and this array will be returned from getCheeses whenever cheesesInStock is empty. Do not preallocate the array passed to toArray in hopes of improving performance. Studies have shown that it is counterproductive ","[Shipil\xebv16]",":"),(0,o.kt)("p",null,"\u5728\u4f18\u5316\u7248\u672c\u4e2d\uff0c\u6211\u4eec\u5c06\u76f8\u540c\u7684\u7a7a\u6570\u7ec4\u4f20\u9012\u5230\u6bcf\u4e2a toArray \u8c03\u7528\u4e2d\uff0c\u5f53 cheesesInStock \u4e3a\u7a7a\u65f6\uff0c\u8fd9\u4e2a\u6570\u7ec4\u5c06\u4ece getCheeses \u8fd4\u56de\u3002\u4e0d\u8981\u4e3a\u4e86\u63d0\u9ad8\u6027\u80fd\u800c\u9884\u5148\u5206\u914d\u4f20\u9012\u7ed9 toArray \u7684\u6570\u7ec4\u3002\u7814\u7a76\u8868\u660e\uff0c\u8fd9\u6837\u505a\u4f1a\u9002\u5f97\u5176\u53cd ","[Shipilev16]",":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"// Don\u2019t do this - preallocating the array harms performance!\nreturn cheesesInStock.toArray(new Cheese[cheesesInStock.size()]);\n")),(0,o.kt)("p",null,"In summary, never return null in place of an empty array or collection. It makes your API more difficult to use and more prone to error, and it has no performance advantages."),(0,o.kt)("p",null,"\u603b\u4e4b\uff0c\u6c38\u8fdc\u4e0d\u8981\u7528 null \u6765\u4ee3\u66ff\u7a7a\u6570\u7ec4\u6216\u96c6\u5408\u3002\u5b83\u4f7f\u4f60\u7684 API \u66f4\u96be\u4ee5\u4f7f\u7528\uff0c\u66f4\u5bb9\u6613\u51fa\u9519\uff0c\u5e76\u4e14\u6ca1\u6709\u6027\u80fd\u4f18\u52bf\u3002"),(0,o.kt)("hr",null),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("a",{parentName:"strong",href:"./Chapter-8-Introduction"},"Back to contents of the chapter\uff08\u8fd4\u56de\u7ae0\u8282\u76ee\u5f55\uff09"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Previous Item\uff08\u4e0a\u4e00\u6761\u76ee\uff09\uff1a",(0,o.kt)("a",{parentName:"strong",href:"./Chapter-8-Item-53-Use-varargs-judiciously"},"Item 53: Use varargs judiciously\uff08\u660e\u667a\u5730\u4f7f\u7528\u53ef\u53d8\u53c2\u6570\uff09"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Next Item\uff08\u4e0b\u4e00\u6761\u76ee\uff09\uff1a",(0,o.kt)("a",{parentName:"strong",href:"./Chapter-8-Item-55-Return-optionals-judiciously"},"Item 55: Return optionals judiciously\uff08\u660e\u667a\u5730\u7684\u8fd4\u56de Optional\uff09")))))}p.isMDXComponent=!0}}]);