"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Books","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Effective-Java-3rd-edition-Chinese-English-bilingual","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Chapter-2","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-2-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Introduction","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Introduction"},{"type":"link","label":"Chapter-2-Item-1-Consider-static-factory-methods-instead-of-constructors","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Item-1-Consider-static-factory-methods-instead-of-constructors","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-1-Consider-static-factory-methods-instead-of-constructors"},{"type":"link","label":"Chapter-2-Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters"},{"type":"link","label":"Chapter-2-Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type"},{"type":"link","label":"Chapter-2-Item-4-Enforce-noninstantiability-with-a-private-constructor","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Item-4-Enforce-noninstantiability-with-a-private-constructor","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-4-Enforce-noninstantiability-with-a-private-constructor"},{"type":"link","label":"Chapter-2-Item-5-Prefer-dependency-injection-to-hardwiring-resources","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Item-5-Prefer-dependency-injection-to-hardwiring-resources","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-5-Prefer-dependency-injection-to-hardwiring-resources"},{"type":"link","label":"Chapter-2-Item-6-Avoid-creating-unnecessary-objects","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Item-6-Avoid-creating-unnecessary-objects","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-6-Avoid-creating-unnecessary-objects"},{"type":"link","label":"Chapter-2-Item-7-Eliminate-obsolete-object-references","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Item-7-Eliminate-obsolete-object-references","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-7-Eliminate-obsolete-object-references"},{"type":"link","label":"Chapter-2-Item-8-Avoid-finalizers-and-cleaners","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Item-8-Avoid-finalizers-and-cleaners","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-8-Avoid-finalizers-and-cleaners"},{"type":"link","label":"Chapter-2-Item-9-Prefer-try-with-resources-to-try-finally","href":"/docs/Books/EffectiveJava3/Chapter-2/Chapter-2-Item-9-Prefer-try-with-resources-to-try-finally","docId":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-9-Prefer-try-with-resources-to-try-finally"}]},{"type":"category","label":"Chapter-3","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-3-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-3/Chapter-3-Introduction","docId":"Books/EffectiveJava3/Chapter-3/Chapter-3-Introduction"},{"type":"link","label":"Chapter-3-Item-10-Obey-the-general-contract-when-overriding-equals","href":"/docs/Books/EffectiveJava3/Chapter-3/Chapter-3-Item-10-Obey-the-general-contract-when-overriding-equals","docId":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-10-Obey-the-general-contract-when-overriding-equals"},{"type":"link","label":"Chapter-3-Item-11-Always-override-hashCode-when-you-override-equals","href":"/docs/Books/EffectiveJava3/Chapter-3/Chapter-3-Item-11-Always-override-hashCode-when-you-override-equals","docId":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-11-Always-override-hashCode-when-you-override-equals"},{"type":"link","label":"Chapter-3-Item-12-Always-override-toString","href":"/docs/Books/EffectiveJava3/Chapter-3/Chapter-3-Item-12-Always-override-toString","docId":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-12-Always-override-toString"},{"type":"link","label":"Chapter-3-Item-13-Override-clone-judiciously","href":"/docs/Books/EffectiveJava3/Chapter-3/Chapter-3-Item-13-Override-clone-judiciously","docId":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-13-Override-clone-judiciously"},{"type":"link","label":"Chapter-3-Item-14-Consider-implementing-Comparable","href":"/docs/Books/EffectiveJava3/Chapter-3/Chapter-3-Item-14-Consider-implementing-Comparable","docId":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-14-Consider-implementing-Comparable"}]},{"type":"category","label":"Chapter-4","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-4-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Introduction","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Introduction"},{"type":"link","label":"Chapter-4-Item-15-Minimize-the-accessibility-of-classes-and-members","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-15-Minimize-the-accessibility-of-classes-and-members","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-15-Minimize-the-accessibility-of-classes-and-members"},{"type":"link","label":"Chapter-4-Item-16-In-public-classes-use-accessor-methods-not-public-fields","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-16-In-public-classes-use-accessor-methods-not-public-fields","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-16-In-public-classes-use-accessor-methods-not-public-fields"},{"type":"link","label":"Chapter-4-Item-17-Minimize-mutability","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-17-Minimize-mutability","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-17-Minimize-mutability"},{"type":"link","label":"Chapter-4-Item-18-Favor-composition-over-inheritance","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-18-Favor-composition-over-inheritance","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-18-Favor-composition-over-inheritance"},{"type":"link","label":"Chapter-4-Item-19-Design-and-document-for-inheritance-or-else-prohibit-it","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-19-Design-and-document-for-inheritance-or-else-prohibit-it","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-19-Design-and-document-for-inheritance-or-else-prohibit-it"},{"type":"link","label":"Chapter-4-Item-20-Prefer-interfaces-to-abstract-classes","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-20-Prefer-interfaces-to-abstract-classes","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-20-Prefer-interfaces-to-abstract-classes"},{"type":"link","label":"Chapter-4-Item-21-Design-interfaces-for-posterity","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-21-Design-interfaces-for-posterity","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-21-Design-interfaces-for-posterity"},{"type":"link","label":"Chapter-4-Item-22-Use-interfaces-only-to-define-types","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-22-Use-interfaces-only-to-define-types","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-22-Use-interfaces-only-to-define-types"},{"type":"link","label":"Chapter-4-Item-23-Prefer-class-hierarchies-to-tagged-classes","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-23-Prefer-class-hierarchies-to-tagged-classes","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-23-Prefer-class-hierarchies-to-tagged-classes"},{"type":"link","label":"Chapter-4-Item-24-Favor-static-member-classes-over-nonstatic","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-24-Favor-static-member-classes-over-nonstatic","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-24-Favor-static-member-classes-over-nonstatic"},{"type":"link","label":"Chapter-4-Item-25-Limit-source-files-to-a-single-top-level-class","href":"/docs/Books/EffectiveJava3/Chapter-4/Chapter-4-Item-25-Limit-source-files-to-a-single-top-level-class","docId":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-25-Limit-source-files-to-a-single-top-level-class"}]},{"type":"category","label":"Chapter-5","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-5-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-5/Chapter-5-Introduction","docId":"Books/EffectiveJava3/Chapter-5/Chapter-5-Introduction"},{"type":"link","label":"Chapter-5-Item-26-Do-not-use-raw-types","href":"/docs/Books/EffectiveJava3/Chapter-5/Chapter-5-Item-26-Do-not-use-raw-types","docId":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-26-Do-not-use-raw-types"},{"type":"link","label":"Chapter-5-Item-27-Eliminate-unchecked-warnings","href":"/docs/Books/EffectiveJava3/Chapter-5/Chapter-5-Item-27-Eliminate-unchecked-warnings","docId":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-27-Eliminate-unchecked-warnings"},{"type":"link","label":"Chapter-5-Item-28-Prefer-lists-to-arrays","href":"/docs/Books/EffectiveJava3/Chapter-5/Chapter-5-Item-28-Prefer-lists-to-arrays","docId":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-28-Prefer-lists-to-arrays"},{"type":"link","label":"Chapter-5-Item-29-Favor-generic-types","href":"/docs/Books/EffectiveJava3/Chapter-5/Chapter-5-Item-29-Favor-generic-types","docId":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-29-Favor-generic-types"},{"type":"link","label":"Chapter-5-Item-30-Favor-generic-methods","href":"/docs/Books/EffectiveJava3/Chapter-5/Chapter-5-Item-30-Favor-generic-methods","docId":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-30-Favor-generic-methods"},{"type":"link","label":"Chapter-5-Item-31-Use-bounded-wildcards-to-increase-API-flexibility","href":"/docs/Books/EffectiveJava3/Chapter-5/Chapter-5-Item-31-Use-bounded-wildcards-to-increase-API-flexibility","docId":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-31-Use-bounded-wildcards-to-increase-API-flexibility"},{"type":"link","label":"Chapter-5-Item-32-Combine-generics-and-varargs-judiciously","href":"/docs/Books/EffectiveJava3/Chapter-5/Chapter-5-Item-32-Combine-generics-and-varargs-judiciously","docId":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-32-Combine-generics-and-varargs-judiciously"},{"type":"link","label":"Chapter-5-Item-33-Consider-typesafe-heterogeneous-containers","href":"/docs/Books/EffectiveJava3/Chapter-5/Chapter-5-Item-33-Consider-typesafe-heterogeneous-containers","docId":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-33-Consider-typesafe-heterogeneous-containers"}]},{"type":"category","label":"Chapter-6","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-6-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Introduction","docId":"Books/EffectiveJava3/Chapter-6/Chapter-6-Introduction"},{"type":"link","label":"Chapter-6-Item-34-Use-enums-instead-of-int-constants","href":"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-34-Use-enums-instead-of-int-constants","docId":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-34-Use-enums-instead-of-int-constants"},{"type":"link","label":"Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals","href":"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals","docId":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals"},{"type":"link","label":"Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields","href":"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields","docId":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields"},{"type":"link","label":"Chapter-6-Item-37-Use-EnumMap-instead-of-ordinal-indexing","href":"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-37-Use-EnumMap-instead-of-ordinal-indexing","docId":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-37-Use-EnumMap-instead-of-ordinal-indexing"},{"type":"link","label":"Chapter-6-Item-38-Emulate-extensible-enums-with-interfaces","href":"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-38-Emulate-extensible-enums-with-interfaces","docId":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-38-Emulate-extensible-enums-with-interfaces"},{"type":"link","label":"Chapter-6-Item-39-Prefer-annotations-to-naming-patterns","href":"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-39-Prefer-annotations-to-naming-patterns","docId":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-39-Prefer-annotations-to-naming-patterns"},{"type":"link","label":"Chapter-6-Item-40-Consistently-use-the-Override-annotation","href":"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-40-Consistently-use-the-Override-annotation","docId":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-40-Consistently-use-the-Override-annotation"},{"type":"link","label":"Chapter-6-Item-41-Use-marker-interfaces-to-define-types","href":"/docs/Books/EffectiveJava3/Chapter-6/Chapter-6-Item-41-Use-marker-interfaces-to-define-types","docId":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-41-Use-marker-interfaces-to-define-types"}]},{"type":"category","label":"Chapter-7","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-7-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-7/Chapter-7-Introduction","docId":"Books/EffectiveJava3/Chapter-7/Chapter-7-Introduction"},{"type":"link","label":"Chapter-7-Item-42-Prefer-lambdas-to-anonymous-classes","href":"/docs/Books/EffectiveJava3/Chapter-7/Chapter-7-Item-42-Prefer-lambdas-to-anonymous-classes","docId":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-42-Prefer-lambdas-to-anonymous-classes"},{"type":"link","label":"Chapter-7-Item-43-Prefer-method-references-to-lambdas","href":"/docs/Books/EffectiveJava3/Chapter-7/Chapter-7-Item-43-Prefer-method-references-to-lambdas","docId":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-43-Prefer-method-references-to-lambdas"},{"type":"link","label":"Chapter-7-Item-44-Favor-the-use-of-standard-functional-interfaces","href":"/docs/Books/EffectiveJava3/Chapter-7/Chapter-7-Item-44-Favor-the-use-of-standard-functional-interfaces","docId":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-44-Favor-the-use-of-standard-functional-interfaces"},{"type":"link","label":"Chapter-7-Item-45-Use-streams-judiciously","href":"/docs/Books/EffectiveJava3/Chapter-7/Chapter-7-Item-45-Use-streams-judiciously","docId":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-45-Use-streams-judiciously"},{"type":"link","label":"Chapter-7-Item-46-Prefer-side-effect-free-functions-in-streams","href":"/docs/Books/EffectiveJava3/Chapter-7/Chapter-7-Item-46-Prefer-side-effect-free-functions-in-streams","docId":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-46-Prefer-side-effect-free-functions-in-streams"},{"type":"link","label":"Chapter-7-Item-47-Prefer-Collection-to-Stream-as-a-return-type","href":"/docs/Books/EffectiveJava3/Chapter-7/Chapter-7-Item-47-Prefer-Collection-to-Stream-as-a-return-type","docId":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-47-Prefer-Collection-to-Stream-as-a-return-type"},{"type":"link","label":"Chapter-7-Item-48-Use-caution-when-making-streams-parallel","href":"/docs/Books/EffectiveJava3/Chapter-7/Chapter-7-Item-48-Use-caution-when-making-streams-parallel","docId":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-48-Use-caution-when-making-streams-parallel"}]},{"type":"category","label":"Chapter-8","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-8-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Introduction","docId":"Books/EffectiveJava3/Chapter-8/Chapter-8-Introduction"},{"type":"link","label":"Chapter-8-Item-49-Check-parameters-for-validity","href":"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-49-Check-parameters-for-validity","docId":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-49-Check-parameters-for-validity"},{"type":"link","label":"Chapter-8-Item-50-Make-defensive-copies-when-needed","href":"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-50-Make-defensive-copies-when-needed","docId":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-50-Make-defensive-copies-when-needed"},{"type":"link","label":"Chapter-8-Item-51-Design-method-signatures-carefully","href":"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-51-Design-method-signatures-carefully","docId":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-51-Design-method-signatures-carefully"},{"type":"link","label":"Chapter-8-Item-52-Use-overloading-judiciously","href":"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-52-Use-overloading-judiciously","docId":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-52-Use-overloading-judiciously"},{"type":"link","label":"Chapter-8-Item-53-Use-varargs-judiciously","href":"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-53-Use-varargs-judiciously","docId":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-53-Use-varargs-judiciously"},{"type":"link","label":"Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls","href":"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls","docId":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls"},{"type":"link","label":"Chapter-8-Item-55-Return-optionals-judiciously","href":"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-55-Return-optionals-judiciously","docId":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-55-Return-optionals-judiciously"},{"type":"link","label":"Chapter-8-Item-56-Write-doc-comments-for-all-exposed-API-elements","href":"/docs/Books/EffectiveJava3/Chapter-8/Chapter-8-Item-56-Write-doc-comments-for-all-exposed-API-elements","docId":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-56-Write-doc-comments-for-all-exposed-API-elements"}]},{"type":"category","label":"Chapter-9","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-9-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Introduction","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Introduction"},{"type":"link","label":"Chapter-9-Item-57-Minimize-the-scope-of-local-variables","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-57-Minimize-the-scope-of-local-variables","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-57-Minimize-the-scope-of-local-variables"},{"type":"link","label":"Chapter-9-Item-58-Prefer-for-each-loops-to-traditional-for-loops","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-58-Prefer-for-each-loops-to-traditional-for-loops","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-58-Prefer-for-each-loops-to-traditional-for-loops"},{"type":"link","label":"Chapter-9-Item-59-Know-and-use-the-libraries","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-59-Know-and-use-the-libraries","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-59-Know-and-use-the-libraries"},{"type":"link","label":"Chapter-9-Item-60-Avoid-float-and-double-if-exact-answers-are-required","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-60-Avoid-float-and-double-if-exact-answers-are-required","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-60-Avoid-float-and-double-if-exact-answers-are-required"},{"type":"link","label":"Chapter-9-Item-61-Prefer-primitive-types-to-boxed-primitives","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-61-Prefer-primitive-types-to-boxed-primitives","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-61-Prefer-primitive-types-to-boxed-primitives"},{"type":"link","label":"Chapter-9-Item-62-Avoid-strings-where-other-types-are-more-appropriate","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-62-Avoid-strings-where-other-types-are-more-appropriate","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-62-Avoid-strings-where-other-types-are-more-appropriate"},{"type":"link","label":"Chapter-9-Item-63-Beware-the-performance-of-string-concatenation","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-63-Beware-the-performance-of-string-concatenation","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-63-Beware-the-performance-of-string-concatenation"},{"type":"link","label":"Chapter-9-Item-64-Refer-to-objects-by-their-interfaces","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces"},{"type":"link","label":"Chapter-9-Item-65-Prefer-interfaces-to-reflection","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-65-Prefer-interfaces-to-reflection","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-65-Prefer-interfaces-to-reflection"},{"type":"link","label":"Chapter-9-Item-66-Use-native-methods-judiciously","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-66-Use-native-methods-judiciously","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-66-Use-native-methods-judiciously"},{"type":"link","label":"Chapter-9-Item-67-Optimize-judiciously","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-67-Optimize-judiciously","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-67-Optimize-judiciously"},{"type":"link","label":"Chapter-9-Item-68-Adhere-to-generally-accepted-naming-conventions","href":"/docs/Books/EffectiveJava3/Chapter-9/Chapter-9-Item-68-Adhere-to-generally-accepted-naming-conventions","docId":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-68-Adhere-to-generally-accepted-naming-conventions"}]},{"type":"category","label":"Chapter-10","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-10-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Introduction","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Introduction"},{"type":"link","label":"Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions"},{"type":"link","label":"Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors"},{"type":"link","label":"Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions"},{"type":"link","label":"Chapter-10-Item-72-Favor-the-use-of-standard-exceptions","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions"},{"type":"link","label":"Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction"},{"type":"link","label":"Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method"},{"type":"link","label":"Chapter-10-Item-75-Include-failure-capture-information-in-detail-messages","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-75-Include-failure-capture-information-in-detail-messages","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-75-Include-failure-capture-information-in-detail-messages"},{"type":"link","label":"Chapter-10-Item-76-Strive-for-failure-atomicity","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-76-Strive-for-failure-atomicity","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-76-Strive-for-failure-atomicity"},{"type":"link","label":"Chapter-10-Item-77-Don\u2019t-ignore-exceptions","href":"/docs/Books/EffectiveJava3/Chapter-10/Chapter-10-Item-77-Don\u2019t-ignore-exceptions","docId":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-77-Don\u2019t-ignore-exceptions"}]},{"type":"category","label":"Chapter-11","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-11-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-11/Chapter-11-Introduction","docId":"Books/EffectiveJava3/Chapter-11/Chapter-11-Introduction"},{"type":"link","label":"Chapter-11-Item-78-Synchronize-access-to-shared-mutable-data","href":"/docs/Books/EffectiveJava3/Chapter-11/Chapter-11-Item-78-Synchronize-access-to-shared-mutable-data","docId":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-78-Synchronize-access-to-shared-mutable-data"},{"type":"link","label":"Chapter-11-Item-79-Avoid-excessive-synchronization","href":"/docs/Books/EffectiveJava3/Chapter-11/Chapter-11-Item-79-Avoid-excessive-synchronization","docId":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-79-Avoid-excessive-synchronization"},{"type":"link","label":"Chapter-11-Item-80-Prefer-executors,-tasks,-and-streams-to-threads","href":"/docs/Books/EffectiveJava3/Chapter-11/Chapter-11-Item-80-Prefer-executors,-tasks,-and-streams-to-threads","docId":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-80-Prefer-executors,-tasks,-and-streams-to-threads"},{"type":"link","label":"Chapter-11-Item-81-Prefer-concurrency-utilities-to-wait-and-notify","href":"/docs/Books/EffectiveJava3/Chapter-11/Chapter-11-Item-81-Prefer-concurrency-utilities-to-wait-and-notify","docId":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-81-Prefer-concurrency-utilities-to-wait-and-notify"},{"type":"link","label":"Chapter-11-Item-82-Document-thread-safety","href":"/docs/Books/EffectiveJava3/Chapter-11/Chapter-11-Item-82-Document-thread-safety","docId":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-82-Document-thread-safety"},{"type":"link","label":"Chapter-11-Item-83-Use-lazy-initialization-judiciously","href":"/docs/Books/EffectiveJava3/Chapter-11/Chapter-11-Item-83-Use-lazy-initialization-judiciously","docId":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-83-Use-lazy-initialization-judiciously"},{"type":"link","label":"Chapter-11-Item-84-Don\u2019t-depend-on-the-thread-scheduler","href":"/docs/Books/EffectiveJava3/Chapter-11/Chapter-11-Item-84-Don\u2019t-depend-on-the-thread-scheduler","docId":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-84-Don\u2019t-depend-on-the-thread-scheduler"}]},{"type":"category","label":"Chapter-12","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Chapter-12-Introduction","href":"/docs/Books/EffectiveJava3/Chapter-12/Chapter-12-Introduction","docId":"Books/EffectiveJava3/Chapter-12/Chapter-12-Introduction"},{"type":"link","label":"Chapter-12-Item-85-Prefer-alternatives-to-Java-serialization","href":"/docs/Books/EffectiveJava3/Chapter-12/Chapter-12-Item-85-Prefer-alternatives-to-Java-serialization","docId":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-85-Prefer-alternatives-to-Java-serialization"},{"type":"link","label":"Chapter-12-Item-86-Implement-Serializable-with-great-caution","href":"/docs/Books/EffectiveJava3/Chapter-12/Chapter-12-Item-86-Implement-Serializable-with-great-caution","docId":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-86-Implement-Serializable-with-great-caution"},{"type":"link","label":"Chapter-12-Item-87-Consider-using-a-custom-serialized-form","href":"/docs/Books/EffectiveJava3/Chapter-12/Chapter-12-Item-87-Consider-using-a-custom-serialized-form","docId":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-87-Consider-using-a-custom-serialized-form"},{"type":"link","label":"Chapter-12-Item-88-Write-readObject-methods-defensively","href":"/docs/Books/EffectiveJava3/Chapter-12/Chapter-12-Item-88-Write-readObject-methods-defensively","docId":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-88-Write-readObject-methods-defensively"},{"type":"link","label":"Chapter-12-Item-89-For-instance-control-prefer-enum-types-to-readResolve","href":"/docs/Books/EffectiveJava3/Chapter-12/Chapter-12-Item-89-For-instance-control-prefer-enum-types-to-readResolve","docId":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-89-For-instance-control-prefer-enum-types-to-readResolve"},{"type":"link","label":"Chapter-12-Item-90-Consider-serialization-proxies-instead-of-serialized-instances","href":"/docs/Books/EffectiveJava3/Chapter-12/Chapter-12-Item-90-Consider-serialization-proxies-instead-of-serialized-instances","docId":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-90-Consider-serialization-proxies-instead-of-serialized-instances"}]}],"href":"/docs/Books/EffectiveJava3/"},{"type":"category","label":"OnJava8","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"\u7b80\u4ecb","href":"/docs/Books/OnJava8/Introduction","docId":"Books/OnJava8/Introduction"},{"type":"link","label":"\u524d\u8a00","href":"/docs/Books/OnJava8/Preface","docId":"Books/OnJava8/Preface"},{"type":"link","label":"\u7b2c\u4e00\u7ae0 \u5bf9\u8c61\u7684\u6982\u5ff5","href":"/docs/Books/OnJava8/What-is-an-Object","docId":"Books/OnJava8/What-is-an-Object"},{"type":"link","label":"\u7b2c\u4e8c\u7ae0 \u5b89\u88c5Java\u548c\u672c\u4e66\u7528\u4f8b","href":"/docs/Books/OnJava8/Installing-Java-and-the-Book-Examples","docId":"Books/OnJava8/Installing-Java-and-the-Book-Examples"},{"type":"link","label":"\u7b2c\u4e09\u7ae0 \u4e07\u7269\u7686\u5bf9\u8c61","href":"/docs/Books/OnJava8/Objects-Everywhere","docId":"Books/OnJava8/Objects-Everywhere"},{"type":"link","label":"\u7b2c\u56db\u7ae0 \u8fd0\u7b97\u7b26","href":"/docs/Books/OnJava8/Operators","docId":"Books/OnJava8/Operators"},{"type":"link","label":"\u7b2c\u4e94\u7ae0 \u63a7\u5236\u6d41","href":"/docs/Books/OnJava8/Control-Flow","docId":"Books/OnJava8/Control-Flow"},{"type":"link","label":"\u7b2c\u516d\u7ae0 \u521d\u59cb\u5316\u548c\u6e05\u7406","href":"/docs/Books/OnJava8/Housekeeping","docId":"Books/OnJava8/Housekeeping"},{"type":"link","label":"\u7b2c\u4e03\u7ae0 \u5c01\u88c5","href":"/docs/Books/OnJava8/Implementation-Hiding","docId":"Books/OnJava8/Implementation-Hiding"},{"type":"link","label":"\u7b2c\u516b\u7ae0 \u590d\u7528","href":"/docs/Books/OnJava8/Reuse","docId":"Books/OnJava8/Reuse"},{"type":"link","label":"\u7b2c\u4e5d\u7ae0 \u591a\u6001","href":"/docs/Books/OnJava8/Polymorphism","docId":"Books/OnJava8/Polymorphism"},{"type":"link","label":"\u7b2c\u5341\u7ae0 \u63a5\u53e3","href":"/docs/Books/OnJava8/Interfaces","docId":"Books/OnJava8/Interfaces"},{"type":"link","label":"\u7b2c\u5341\u4e00\u7ae0 \u5185\u90e8\u7c7b","href":"/docs/Books/OnJava8/Inner-Classes","docId":"Books/OnJava8/Inner-Classes"},{"type":"link","label":"\u7b2c\u5341\u4e8c\u7ae0 \u96c6\u5408","href":"/docs/Books/OnJava8/Collections","docId":"Books/OnJava8/Collections"},{"type":"link","label":"\u7b2c\u5341\u4e09\u7ae0 \u51fd\u6570\u5f0f\u7f16\u7a0b","href":"/docs/Books/OnJava8/Functional-Programming","docId":"Books/OnJava8/Functional-Programming"},{"type":"link","label":"\u7b2c\u5341\u56db\u7ae0 \u6d41\u5f0f\u7f16\u7a0b","href":"/docs/Books/OnJava8/Streams","docId":"Books/OnJava8/Streams"},{"type":"link","label":"\u7b2c\u5341\u4e94\u7ae0 \u5f02\u5e38","href":"/docs/Books/OnJava8/Exceptions","docId":"Books/OnJava8/Exceptions"},{"type":"link","label":"\u7b2c\u5341\u516d\u7ae0 \u4ee3\u7801\u6821\u9a8c","href":"/docs/Books/OnJava8/Validating-Your-Code","docId":"Books/OnJava8/Validating-Your-Code"},{"type":"link","label":"\u7b2c\u5341\u4e03\u7ae0 \u6587\u4ef6","href":"/docs/Books/OnJava8/Files","docId":"Books/OnJava8/Files"},{"type":"link","label":"\u7b2c\u5341\u516b\u7ae0 \u5b57\u7b26\u4e32","href":"/docs/Books/OnJava8/Strings","docId":"Books/OnJava8/Strings"},{"type":"link","label":"\u7b2c\u5341\u4e5d\u7ae0 \u7c7b\u578b\u4fe1\u606f","href":"/docs/Books/OnJava8/Type-Information","docId":"Books/OnJava8/Type-Information"},{"type":"link","label":"\u7b2c\u4e8c\u5341\u7ae0 \u6cdb\u578b","href":"/docs/Books/OnJava8/Generics","docId":"Books/OnJava8/Generics"},{"type":"link","label":"\u7b2c\u4e8c\u5341\u4e00\u7ae0 \u6570\u7ec4","href":"/docs/Books/OnJava8/Arrays","docId":"Books/OnJava8/Arrays"},{"type":"link","label":"\u7b2c\u4e8c\u5341\u4e8c\u7ae0 \u679a\u4e3e","href":"/docs/Books/OnJava8/Enumerations","docId":"Books/OnJava8/Enumerations"},{"type":"link","label":"\u7b2c\u4e8c\u5341\u4e09\u7ae0 \u6ce8\u89e3","href":"/docs/Books/OnJava8/Annotations","docId":"Books/OnJava8/Annotations"},{"type":"link","label":"\u7b2c\u4e8c\u5341\u56db\u7ae0 \u5e76\u53d1\u7f16\u7a0b","href":"/docs/Books/OnJava8/Concurrent-Programming","docId":"Books/OnJava8/Concurrent-Programming"},{"type":"link","label":"\u7b2c\u4e8c\u5341\u4e94\u7ae0 \u8bbe\u8ba1\u6a21\u5f0f","href":"/docs/Books/OnJava8/Patterns","docId":"Books/OnJava8/Patterns"},{"type":"link","label":"\u9644\u5f55:\u6210\u4e3a\u4e00\u540d\u7a0b\u5e8f\u5458","href":"/docs/Books/OnJava8/Appendix-Becoming-a-Programmer","docId":"Books/OnJava8/Appendix-Becoming-a-Programmer"},{"type":"link","label":"\u9644\u5f55:\u9759\u6001\u8bed\u8a00\u7c7b\u578b\u68c0\u67e5","href":"/docs/Books/OnJava8/Appendix-Benefits-and-Costs-of-Static-Type-Checking","docId":"Books/OnJava8/Appendix-Benefits-and-Costs-of-Static-Type-Checking"},{"type":"link","label":"\u9644\u5f55:\u96c6\u5408\u4e3b\u9898","href":"/docs/Books/OnJava8/Appendix-Collection-Topics","docId":"Books/OnJava8/Appendix-Collection-Topics"},{"type":"link","label":"\u9644\u5f55:\u6570\u636e\u538b\u7f29","href":"/docs/Books/OnJava8/Appendix-Data-Compression","docId":"Books/OnJava8/Appendix-Data-Compression"},{"type":"link","label":"\u9644\u5f55:\u6d41\u5f0fIO","href":"/docs/Books/OnJava8/Appendix-IO-Streams","docId":"Books/OnJava8/Appendix-IO-Streams"},{"type":"link","label":"\u9644\u5f55:\u6587\u6863\u6ce8\u91ca","href":"/docs/Books/OnJava8/Appendix-Javadoc","docId":"Books/OnJava8/Appendix-Javadoc"},{"type":"link","label":"\u9644\u5f55:\u5e76\u53d1\u5e95\u5c42\u539f\u7406","href":"/docs/Books/OnJava8/Appendix-Low-Level-Concurrency","docId":"Books/OnJava8/Appendix-Low-Level-Concurrency"},{"type":"link","label":"\u9644\u5f55:\u65b0IO","href":"/docs/Books/OnJava8/Appendix-New-IO","docId":"Books/OnJava8/Appendix-New-IO"},{"type":"link","label":"\u9644\u5f55:\u5bf9\u8c61\u5e8f\u5217\u5316","href":"/docs/Books/OnJava8/Appendix-Object-Serialization","docId":"Books/OnJava8/Appendix-Object-Serialization"},{"type":"link","label":"\u9644\u5f55:\u5bf9\u8c61\u4f20\u9012\u548c\u8fd4\u56de","href":"/docs/Books/OnJava8/Appendix-Passing-and-Returning-Objects","docId":"Books/OnJava8/Appendix-Passing-and-Returning-Objects"},{"type":"link","label":"\u9644\u5f55:\u7f16\u7a0b\u6307\u5357","href":"/docs/Books/OnJava8/Appendix-Programming-Guidelines","docId":"Books/OnJava8/Appendix-Programming-Guidelines"},{"type":"link","label":"\u9644\u5f55:\u6807\u51c6IO","href":"/docs/Books/OnJava8/Appendix-Standard-IO","docId":"Books/OnJava8/Appendix-Standard-IO"},{"type":"link","label":"\u9644\u5f55:\u8865\u5145","href":"/docs/Books/OnJava8/Appendix-Supplements","docId":"Books/OnJava8/Appendix-Supplements"},{"type":"link","label":"\u9644\u5f55:C++\u548cJava\u7684\u4f18\u826f\u4f20\u7edf","href":"/docs/Books/OnJava8/Appendix-The-Positive-Legacy-of-C-plus-plus-and-Java","docId":"Books/OnJava8/Appendix-The-Positive-Legacy-of-C-plus-plus-and-Java"},{"type":"link","label":"\u9644\u5f55:\u7406\u89e3equals\u548chashCode\u65b9\u6cd5","href":"/docs/Books/OnJava8/Appendix-Understanding-equals-and-hashCode","docId":"Books/OnJava8/Appendix-Understanding-equals-and-hashCode"},{"type":"link","label":"GLOSSARY","href":"/docs/Books/OnJava8/GLOSSARY","docId":"Books/OnJava8/GLOSSARY"}]}]},{"type":"category","label":"Git","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"config","href":"/docs/Git/config","docId":"Git/config"}]},{"type":"link","label":"intro","href":"/docs/intro","docId":"intro"}]},"docs":{"Books/EffectiveJava3/Chapter-10/Chapter-10-Introduction":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Introduction","title":"Chapter-10-Introduction","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions","title":"Chapter-10-Item-69-Use-exceptions-only-for-exceptional-conditions","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors","title":"Chapter-10-Item-70-Use-checked-exceptions-for-recoverable-conditions-and-runtime-exceptions-for-programming-errors","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions","title":"Chapter-10-Item-71-Avoid-unnecessary-use-of-checked-exceptions","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-72-Favor-the-use-of-standard-exceptions","title":"Chapter-10-Item-72-Favor-the-use-of-standard-exceptions","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction","title":"Chapter-10-Item-73-Throw-exceptions-appropriate-to-the-abstraction","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method","title":"Chapter-10-Item-74-Document-all-exceptions-thrown-by-each-method","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-75-Include-failure-capture-information-in-detail-messages":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-75-Include-failure-capture-information-in-detail-messages","title":"Chapter-10-Item-75-Include-failure-capture-information-in-detail-messages","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-76-Strive-for-failure-atomicity":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-76-Strive-for-failure-atomicity","title":"Chapter-10-Item-76-Strive-for-failure-atomicity","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-77-Don\u2019t-ignore-exceptions":{"id":"Books/EffectiveJava3/Chapter-10/Chapter-10-Item-77-Don\u2019t-ignore-exceptions","title":"Chapter-10-Item-77-Don\u2019t-ignore-exceptions","description":"Chapter 10. Exceptions\uff08\u5f02\u5e38\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-11/Chapter-11-Introduction":{"id":"Books/EffectiveJava3/Chapter-11/Chapter-11-Introduction","title":"Chapter-11-Introduction","description":"Chapter 11. Concurrency\uff08\u5e76\u53d1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-78-Synchronize-access-to-shared-mutable-data":{"id":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-78-Synchronize-access-to-shared-mutable-data","title":"Chapter-11-Item-78-Synchronize-access-to-shared-mutable-data","description":"Chapter 11. Concurrency\uff08\u5e76\u53d1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-79-Avoid-excessive-synchronization":{"id":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-79-Avoid-excessive-synchronization","title":"Chapter-11-Item-79-Avoid-excessive-synchronization","description":"Chapter 11. Concurrency\uff08\u5e76\u53d1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-80-Prefer-executors,-tasks,-and-streams-to-threads":{"id":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-80-Prefer-executors,-tasks,-and-streams-to-threads","title":"Chapter-11-Item-80-Prefer-executors,-tasks,-and-streams-to-threads","description":"Chapter 11. Concurrency\uff08\u5e76\u53d1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-81-Prefer-concurrency-utilities-to-wait-and-notify":{"id":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-81-Prefer-concurrency-utilities-to-wait-and-notify","title":"Chapter-11-Item-81-Prefer-concurrency-utilities-to-wait-and-notify","description":"Chapter 11. Concurrency\uff08\u5e76\u53d1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-82-Document-thread-safety":{"id":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-82-Document-thread-safety","title":"Chapter-11-Item-82-Document-thread-safety","description":"Chapter 11. Concurrency\uff08\u5e76\u53d1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-83-Use-lazy-initialization-judiciously":{"id":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-83-Use-lazy-initialization-judiciously","title":"Chapter-11-Item-83-Use-lazy-initialization-judiciously","description":"Chapter 11. Concurrency\uff08\u5e76\u53d1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-84-Don\u2019t-depend-on-the-thread-scheduler":{"id":"Books/EffectiveJava3/Chapter-11/Chapter-11-Item-84-Don\u2019t-depend-on-the-thread-scheduler","title":"Chapter-11-Item-84-Don\u2019t-depend-on-the-thread-scheduler","description":"Chapter 11. Concurrency\uff08\u5e76\u53d1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-12/Chapter-12-Introduction":{"id":"Books/EffectiveJava3/Chapter-12/Chapter-12-Introduction","title":"Chapter-12-Introduction","description":"Chapter 12. Serialization\uff08\u5e8f\u5217\u5316\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-85-Prefer-alternatives-to-Java-serialization":{"id":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-85-Prefer-alternatives-to-Java-serialization","title":"Chapter-12-Item-85-Prefer-alternatives-to-Java-serialization","description":"Chapter 12. Serialization\uff08\u5e8f\u5217\u5316\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-86-Implement-Serializable-with-great-caution":{"id":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-86-Implement-Serializable-with-great-caution","title":"Chapter-12-Item-86-Implement-Serializable-with-great-caution","description":"Chapter 12. Serialization\uff08\u5e8f\u5217\u5316\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-87-Consider-using-a-custom-serialized-form":{"id":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-87-Consider-using-a-custom-serialized-form","title":"Chapter-12-Item-87-Consider-using-a-custom-serialized-form","description":"Chapter 12. Serialization\uff08\u5e8f\u5217\u5316\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-88-Write-readObject-methods-defensively":{"id":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-88-Write-readObject-methods-defensively","title":"Chapter-12-Item-88-Write-readObject-methods-defensively","description":"Chapter 12. Serialization\uff08\u5e8f\u5217\u5316\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-89-For-instance-control-prefer-enum-types-to-readResolve":{"id":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-89-For-instance-control-prefer-enum-types-to-readResolve","title":"Chapter-12-Item-89-For-instance-control-prefer-enum-types-to-readResolve","description":"Chapter 12. Serialization\uff08\u5e8f\u5217\u5316\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-90-Consider-serialization-proxies-instead-of-serialized-instances":{"id":"Books/EffectiveJava3/Chapter-12/Chapter-12-Item-90-Consider-serialization-proxies-instead-of-serialized-instances","title":"Chapter-12-Item-90-Consider-serialization-proxies-instead-of-serialized-instances","description":"Chapter 12. Serialization\uff08\u5e8f\u5217\u5316\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Introduction":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Introduction","title":"Chapter-2-Introduction","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-1-Consider-static-factory-methods-instead-of-constructors":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-1-Consider-static-factory-methods-instead-of-constructors","title":"Chapter-2-Item-1-Consider-static-factory-methods-instead-of-constructors","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters","title":"Chapter-2-Item-2-Consider-a-builder-when-faced-with-many-constructor-parameters","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type","title":"Chapter-2-Item-3-Enforce-the-singleton-property-with-a-private-constructor-or-an-enum-type","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-4-Enforce-noninstantiability-with-a-private-constructor":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-4-Enforce-noninstantiability-with-a-private-constructor","title":"Chapter-2-Item-4-Enforce-noninstantiability-with-a-private-constructor","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-5-Prefer-dependency-injection-to-hardwiring-resources":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-5-Prefer-dependency-injection-to-hardwiring-resources","title":"Chapter-2-Item-5-Prefer-dependency-injection-to-hardwiring-resources","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-6-Avoid-creating-unnecessary-objects":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-6-Avoid-creating-unnecessary-objects","title":"Chapter-2-Item-6-Avoid-creating-unnecessary-objects","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-7-Eliminate-obsolete-object-references":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-7-Eliminate-obsolete-object-references","title":"Chapter-2-Item-7-Eliminate-obsolete-object-references","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-8-Avoid-finalizers-and-cleaners":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-8-Avoid-finalizers-and-cleaners","title":"Chapter-2-Item-8-Avoid-finalizers-and-cleaners","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-9-Prefer-try-with-resources-to-try-finally":{"id":"Books/EffectiveJava3/Chapter-2/Chapter-2-Item-9-Prefer-try-with-resources-to-try-finally","title":"Chapter-2-Item-9-Prefer-try-with-resources-to-try-finally","description":"Chapter 2. Creating and Destroying Objects\uff08\u521b\u5efa\u548c\u9500\u6bc1\u5bf9\u8c61\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-3/Chapter-3-Introduction":{"id":"Books/EffectiveJava3/Chapter-3/Chapter-3-Introduction","title":"Chapter-3-Introduction","description":"Chapter 3. Methods Common to All Objects\uff08\u5bf9\u8c61\u7684\u901a\u7528\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-10-Obey-the-general-contract-when-overriding-equals":{"id":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-10-Obey-the-general-contract-when-overriding-equals","title":"Chapter-3-Item-10-Obey-the-general-contract-when-overriding-equals","description":"Chapter 3. Methods Common to All Objects\uff08\u5bf9\u8c61\u7684\u901a\u7528\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-11-Always-override-hashCode-when-you-override-equals":{"id":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-11-Always-override-hashCode-when-you-override-equals","title":"Chapter-3-Item-11-Always-override-hashCode-when-you-override-equals","description":"Chapter 3. Methods Common to All Objects\uff08\u5bf9\u8c61\u7684\u901a\u7528\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-12-Always-override-toString":{"id":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-12-Always-override-toString","title":"Chapter-3-Item-12-Always-override-toString","description":"Chapter 3. Methods Common to All Objects\uff08\u5bf9\u8c61\u7684\u901a\u7528\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-13-Override-clone-judiciously":{"id":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-13-Override-clone-judiciously","title":"Chapter-3-Item-13-Override-clone-judiciously","description":"Chapter 3. Methods Common to All Objects\uff08\u5bf9\u8c61\u7684\u901a\u7528\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-14-Consider-implementing-Comparable":{"id":"Books/EffectiveJava3/Chapter-3/Chapter-3-Item-14-Consider-implementing-Comparable","title":"Chapter-3-Item-14-Consider-implementing-Comparable","description":"Chapter 3. Methods Common to All Objects\uff08\u5bf9\u8c61\u7684\u901a\u7528\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Introduction":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Introduction","title":"Chapter-4-Introduction","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-15-Minimize-the-accessibility-of-classes-and-members":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-15-Minimize-the-accessibility-of-classes-and-members","title":"Chapter-4-Item-15-Minimize-the-accessibility-of-classes-and-members","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-16-In-public-classes-use-accessor-methods-not-public-fields":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-16-In-public-classes-use-accessor-methods-not-public-fields","title":"Chapter-4-Item-16-In-public-classes-use-accessor-methods-not-public-fields","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-17-Minimize-mutability":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-17-Minimize-mutability","title":"Chapter-4-Item-17-Minimize-mutability","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-18-Favor-composition-over-inheritance":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-18-Favor-composition-over-inheritance","title":"Chapter-4-Item-18-Favor-composition-over-inheritance","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-19-Design-and-document-for-inheritance-or-else-prohibit-it":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-19-Design-and-document-for-inheritance-or-else-prohibit-it","title":"Chapter-4-Item-19-Design-and-document-for-inheritance-or-else-prohibit-it","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-20-Prefer-interfaces-to-abstract-classes":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-20-Prefer-interfaces-to-abstract-classes","title":"Chapter-4-Item-20-Prefer-interfaces-to-abstract-classes","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-21-Design-interfaces-for-posterity":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-21-Design-interfaces-for-posterity","title":"Chapter-4-Item-21-Design-interfaces-for-posterity","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-22-Use-interfaces-only-to-define-types":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-22-Use-interfaces-only-to-define-types","title":"Chapter-4-Item-22-Use-interfaces-only-to-define-types","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-23-Prefer-class-hierarchies-to-tagged-classes":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-23-Prefer-class-hierarchies-to-tagged-classes","title":"Chapter-4-Item-23-Prefer-class-hierarchies-to-tagged-classes","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-24-Favor-static-member-classes-over-nonstatic":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-24-Favor-static-member-classes-over-nonstatic","title":"Chapter-4-Item-24-Favor-static-member-classes-over-nonstatic","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-25-Limit-source-files-to-a-single-top-level-class":{"id":"Books/EffectiveJava3/Chapter-4/Chapter-4-Item-25-Limit-source-files-to-a-single-top-level-class","title":"Chapter-4-Item-25-Limit-source-files-to-a-single-top-level-class","description":"Chapter 4. Classes and Interfaces\uff08\u7c7b\u548c\u63a5\u53e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-5/Chapter-5-Introduction":{"id":"Books/EffectiveJava3/Chapter-5/Chapter-5-Introduction","title":"Chapter-5-Introduction","description":"Chapter 5. Generics\uff08\u6cdb\u578b\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-26-Do-not-use-raw-types":{"id":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-26-Do-not-use-raw-types","title":"Chapter-5-Item-26-Do-not-use-raw-types","description":"Chapter 5. Generics\uff08\u6cdb\u578b\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-27-Eliminate-unchecked-warnings":{"id":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-27-Eliminate-unchecked-warnings","title":"Chapter-5-Item-27-Eliminate-unchecked-warnings","description":"Chapter 5. Generics\uff08\u6cdb\u578b\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-28-Prefer-lists-to-arrays":{"id":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-28-Prefer-lists-to-arrays","title":"Chapter-5-Item-28-Prefer-lists-to-arrays","description":"Chapter 5. Generics\uff08\u6cdb\u578b\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-29-Favor-generic-types":{"id":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-29-Favor-generic-types","title":"Chapter-5-Item-29-Favor-generic-types","description":"Chapter 5. Generics\uff08\u6cdb\u578b\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-30-Favor-generic-methods":{"id":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-30-Favor-generic-methods","title":"Chapter-5-Item-30-Favor-generic-methods","description":"Chapter 5. Generics\uff08\u6cdb\u578b\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-31-Use-bounded-wildcards-to-increase-API-flexibility":{"id":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-31-Use-bounded-wildcards-to-increase-API-flexibility","title":"Chapter-5-Item-31-Use-bounded-wildcards-to-increase-API-flexibility","description":"Chapter 5. Generics\uff08\u6cdb\u578b\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-32-Combine-generics-and-varargs-judiciously":{"id":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-32-Combine-generics-and-varargs-judiciously","title":"Chapter-5-Item-32-Combine-generics-and-varargs-judiciously","description":"Chapter 5. Generics\uff08\u6cdb\u578b\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-33-Consider-typesafe-heterogeneous-containers":{"id":"Books/EffectiveJava3/Chapter-5/Chapter-5-Item-33-Consider-typesafe-heterogeneous-containers","title":"Chapter-5-Item-33-Consider-typesafe-heterogeneous-containers","description":"Chapter 5. Generics\uff08\u6cdb\u578b\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-6/Chapter-6-Introduction":{"id":"Books/EffectiveJava3/Chapter-6/Chapter-6-Introduction","title":"Chapter-6-Introduction","description":"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-34-Use-enums-instead-of-int-constants":{"id":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-34-Use-enums-instead-of-int-constants","title":"Chapter-6-Item-34-Use-enums-instead-of-int-constants","description":"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals":{"id":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals","title":"Chapter-6-Item-35-Use-instance-fields-instead-of-ordinals","description":"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields":{"id":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields","title":"Chapter-6-Item-36-Use-EnumSet-instead-of-bit-fields","description":"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-37-Use-EnumMap-instead-of-ordinal-indexing":{"id":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-37-Use-EnumMap-instead-of-ordinal-indexing","title":"Chapter-6-Item-37-Use-EnumMap-instead-of-ordinal-indexing","description":"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-38-Emulate-extensible-enums-with-interfaces":{"id":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-38-Emulate-extensible-enums-with-interfaces","title":"Chapter-6-Item-38-Emulate-extensible-enums-with-interfaces","description":"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-39-Prefer-annotations-to-naming-patterns":{"id":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-39-Prefer-annotations-to-naming-patterns","title":"Chapter-6-Item-39-Prefer-annotations-to-naming-patterns","description":"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-40-Consistently-use-the-Override-annotation":{"id":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-40-Consistently-use-the-Override-annotation","title":"Chapter-6-Item-40-Consistently-use-the-Override-annotation","description":"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-41-Use-marker-interfaces-to-define-types":{"id":"Books/EffectiveJava3/Chapter-6/Chapter-6-Item-41-Use-marker-interfaces-to-define-types","title":"Chapter-6-Item-41-Use-marker-interfaces-to-define-types","description":"Chapter 6. Enums and Annotations\uff08\u679a\u4e3e\u548c\u6ce8\u89e3\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-7/Chapter-7-Introduction":{"id":"Books/EffectiveJava3/Chapter-7/Chapter-7-Introduction","title":"Chapter-7-Introduction","description":"Chapter 7. Lambdas and Streams\uff08\u03bb \u8868\u8fbe\u5f0f\u548c\u6d41\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-42-Prefer-lambdas-to-anonymous-classes":{"id":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-42-Prefer-lambdas-to-anonymous-classes","title":"Chapter-7-Item-42-Prefer-lambdas-to-anonymous-classes","description":"Chapter 7. Lambdas and Streams\uff08\u03bb \u8868\u8fbe\u5f0f\u548c\u6d41\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-43-Prefer-method-references-to-lambdas":{"id":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-43-Prefer-method-references-to-lambdas","title":"Chapter-7-Item-43-Prefer-method-references-to-lambdas","description":"Chapter 7. Lambdas and Streams\uff08\u03bb \u8868\u8fbe\u5f0f\u548c\u6d41\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-44-Favor-the-use-of-standard-functional-interfaces":{"id":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-44-Favor-the-use-of-standard-functional-interfaces","title":"Chapter-7-Item-44-Favor-the-use-of-standard-functional-interfaces","description":"Chapter 7. Lambdas and Streams\uff08\u03bb \u8868\u8fbe\u5f0f\u548c\u6d41\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-45-Use-streams-judiciously":{"id":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-45-Use-streams-judiciously","title":"Chapter-7-Item-45-Use-streams-judiciously","description":"Chapter 7. Lambdas and Streams\uff08\u03bb \u8868\u8fbe\u5f0f\u548c\u6d41\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-46-Prefer-side-effect-free-functions-in-streams":{"id":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-46-Prefer-side-effect-free-functions-in-streams","title":"Chapter-7-Item-46-Prefer-side-effect-free-functions-in-streams","description":"Chapter 7. Lambdas and Streams\uff08\u03bb \u8868\u8fbe\u5f0f\u548c\u6d41\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-47-Prefer-Collection-to-Stream-as-a-return-type":{"id":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-47-Prefer-Collection-to-Stream-as-a-return-type","title":"Chapter-7-Item-47-Prefer-Collection-to-Stream-as-a-return-type","description":"Chapter 7. Lambdas and Streams\uff08\u03bb \u8868\u8fbe\u5f0f\u548c\u6d41\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-48-Use-caution-when-making-streams-parallel":{"id":"Books/EffectiveJava3/Chapter-7/Chapter-7-Item-48-Use-caution-when-making-streams-parallel","title":"Chapter-7-Item-48-Use-caution-when-making-streams-parallel","description":"Chapter 7. Lambdas and Streams\uff08\u03bb \u8868\u8fbe\u5f0f\u548c\u6d41\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-8/Chapter-8-Introduction":{"id":"Books/EffectiveJava3/Chapter-8/Chapter-8-Introduction","title":"Chapter-8-Introduction","description":"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-49-Check-parameters-for-validity":{"id":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-49-Check-parameters-for-validity","title":"Chapter-8-Item-49-Check-parameters-for-validity","description":"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-50-Make-defensive-copies-when-needed":{"id":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-50-Make-defensive-copies-when-needed","title":"Chapter-8-Item-50-Make-defensive-copies-when-needed","description":"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-51-Design-method-signatures-carefully":{"id":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-51-Design-method-signatures-carefully","title":"Chapter-8-Item-51-Design-method-signatures-carefully","description":"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-52-Use-overloading-judiciously":{"id":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-52-Use-overloading-judiciously","title":"Chapter-8-Item-52-Use-overloading-judiciously","description":"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-53-Use-varargs-judiciously":{"id":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-53-Use-varargs-judiciously","title":"Chapter-8-Item-53-Use-varargs-judiciously","description":"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls":{"id":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls","title":"Chapter-8-Item-54-Return-empty-collections-or-arrays-not-nulls","description":"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-55-Return-optionals-judiciously":{"id":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-55-Return-optionals-judiciously","title":"Chapter-8-Item-55-Return-optionals-judiciously","description":"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-56-Write-doc-comments-for-all-exposed-API-elements":{"id":"Books/EffectiveJava3/Chapter-8/Chapter-8-Item-56-Write-doc-comments-for-all-exposed-API-elements","title":"Chapter-8-Item-56-Write-doc-comments-for-all-exposed-API-elements","description":"Chapter 8. Methods\uff08\u65b9\u6cd5\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Introduction":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Introduction","title":"Chapter-9-Introduction","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-57-Minimize-the-scope-of-local-variables":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-57-Minimize-the-scope-of-local-variables","title":"Chapter-9-Item-57-Minimize-the-scope-of-local-variables","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-58-Prefer-for-each-loops-to-traditional-for-loops":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-58-Prefer-for-each-loops-to-traditional-for-loops","title":"Chapter-9-Item-58-Prefer-for-each-loops-to-traditional-for-loops","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-59-Know-and-use-the-libraries":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-59-Know-and-use-the-libraries","title":"Chapter-9-Item-59-Know-and-use-the-libraries","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-60-Avoid-float-and-double-if-exact-answers-are-required":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-60-Avoid-float-and-double-if-exact-answers-are-required","title":"Chapter-9-Item-60-Avoid-float-and-double-if-exact-answers-are-required","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-61-Prefer-primitive-types-to-boxed-primitives":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-61-Prefer-primitive-types-to-boxed-primitives","title":"Chapter-9-Item-61-Prefer-primitive-types-to-boxed-primitives","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-62-Avoid-strings-where-other-types-are-more-appropriate":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-62-Avoid-strings-where-other-types-are-more-appropriate","title":"Chapter-9-Item-62-Avoid-strings-where-other-types-are-more-appropriate","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-63-Beware-the-performance-of-string-concatenation":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-63-Beware-the-performance-of-string-concatenation","title":"Chapter-9-Item-63-Beware-the-performance-of-string-concatenation","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-64-Refer-to-objects-by-their-interfaces","title":"Chapter-9-Item-64-Refer-to-objects-by-their-interfaces","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-65-Prefer-interfaces-to-reflection":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-65-Prefer-interfaces-to-reflection","title":"Chapter-9-Item-65-Prefer-interfaces-to-reflection","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-66-Use-native-methods-judiciously":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-66-Use-native-methods-judiciously","title":"Chapter-9-Item-66-Use-native-methods-judiciously","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-67-Optimize-judiciously":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-67-Optimize-judiciously","title":"Chapter-9-Item-67-Optimize-judiciously","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-68-Adhere-to-generally-accepted-naming-conventions":{"id":"Books/EffectiveJava3/Chapter-9/Chapter-9-Item-68-Adhere-to-generally-accepted-naming-conventions","title":"Chapter-9-Item-68-Adhere-to-generally-accepted-naming-conventions","description":"Chapter 9. General Programming\uff08\u901a\u7528\u7a0b\u5e8f\u8bbe\u8ba1\uff09","sidebar":"tutorialSidebar"},"Books/EffectiveJava3/README":{"id":"Books/EffectiveJava3/README","title":"Effective-Java-3rd-edition-Chinese-English-bilingual","description":"Effective Java\uff08\u7b2c 3 \u7248\uff09\u5404\u7ae0\u8282\u7684\u4e2d\u82f1\u6587\u5b66\u4e60\u53c2\u8003\uff0c\u5e0c\u671b\u5bf9 Java \u6280\u672f\u7684\u63d0\u9ad8\u6709\u6240\u5e2e\u52a9\uff0c\u6b22\u8fce\u901a\u8fc7 issue \u6216 pr \u63d0\u51fa\u5efa\u8bae\u548c\u4fee\u6539\u610f\u89c1\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Annotations":{"id":"Books/OnJava8/Annotations","title":"\u7b2c\u4e8c\u5341\u4e09\u7ae0 \u6ce8\u89e3","description":"\u6ce8\u89e3\uff08\u4e5f\u88ab\u79f0\u4e3a\u5143\u6570\u636e\uff09\u4e3a\u6211\u4eec\u5728\u4ee3\u7801\u4e2d\u6dfb\u52a0\u4fe1\u606f\u63d0\u4f9b\u4e86\u4e00\u79cd\u5f62\u5f0f\u5316\u7684\u65b9\u5f0f\uff0c\u4f7f\u6211\u4eec\u53ef\u4ee5\u5728\u7a0d\u540e\u7684\u67d0\u4e2a\u65f6\u523b\u66f4\u5bb9\u6613\u7684\u4f7f\u7528\u8fd9\u4e9b\u6570\u636e\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Becoming-a-Programmer":{"id":"Books/OnJava8/Appendix-Becoming-a-Programmer","title":"\u9644\u5f55:\u6210\u4e3a\u4e00\u540d\u7a0b\u5e8f\u5458","description":"\u6211\u5206\u522b\u4e8e2003\uff0c2006\uff0c2007\u548c2009\u5e74\u64b0\u5199\u7684\u535a\u5ba2\u6587\u7ae0\u6df7\u642d","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Benefits-and-Costs-of-Static-Type-Checking":{"id":"Books/OnJava8/Appendix-Benefits-and-Costs-of-Static-Type-Checking","title":"\u9644\u5f55:\u9759\u6001\u8bed\u8a00\u7c7b\u578b\u68c0\u67e5","description":"\u8fd9\u662f\u4e00\u672c\u6211\u591a\u5e74\u6765\u64b0\u5199\u7684\u7ecf\u8fc7\u7f16\u8f91\u8fc7\u7684\u8bba\u6587\u96c6\uff0c\u8bba\u6587\u96c6\u8bd5\u56fe\u5c06\u9759\u6001\u68c0\u67e5\u8bed\u8a00\u548c\u52a8\u6001\u8bed\u8a00\u4e4b\u95f4\u7684\u4e89\u8bba\u653e\u5230\u4e00\u4e2a\u6b63\u786e\u7684\u89d2\u5ea6\u3002\u8fd8\u6709\u4e00\u4e2a\u524d\u8a00\u90e8\u5206\uff0c\u63cf\u8ff0\u4e86\u6211\u6700\u8fd1\u5bf9\u8fd9\u4e2a\u8bdd\u9898\u7684\u601d\u8003\u548c\u89c1\u89e3\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Collection-Topics":{"id":"Books/OnJava8/Appendix-Collection-Topics","title":"\u9644\u5f55:\u96c6\u5408\u4e3b\u9898","description":"\u672c\u9644\u5f55\u662f\u4e00\u4e9b\u6bd4\u7b2c\u5341\u4e8c\u7ae0 \u96c6\u5408\u4e2d\u4ecb\u7ecd\u7684\u66f4\u9ad8\u7ea7\u7684\u5185\u5bb9\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Data-Compression":{"id":"Books/OnJava8/Appendix-Data-Compression","title":"\u9644\u5f55:\u6570\u636e\u538b\u7f29","description":"Java I/O \u7c7b\u5e93\u63d0\u4f9b\u4e86\u53ef\u4ee5\u8bfb\u5199\u538b\u7f29\u683c\u5f0f\u6d41\u7684\u7c7b\u3002\u4f60\u53ef\u4ee5\u5c06\u5176\u4ed6 I/O \u7c7b\u5305\u88c5\u8d77\u6765\u7528\u4e8e\u63d0\u4f9b\u538b\u7f29\u529f\u80fd\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-IO-Streams":{"id":"Books/OnJava8/Appendix-IO-Streams","title":"\u9644\u5f55:\u6d41\u5f0fIO","description":"Java 7 \u5f15\u5165\u4e86\u4e00\u79cd\u7b80\u5355\u660e\u4e86\u7684\u65b9\u5f0f\u6765\u8bfb\u5199\u6587\u4ef6\u548c\u64cd\u4f5c\u76ee\u5f55\u3002\u5927\u591a\u60c5\u51b5\u4e0b\uff0c\u6587\u4ef6\u8fd9\u4e00\u7ae0\u6240\u4ecb\u7ecd\u7684\u90a3\u4e9b\u5e93\u548c\u6280\u672f\u5c31\u8db3\u591f\u4f60\u7528\u4e86\u3002\u4f46\u662f\uff0c\u5982\u679c\u4f60\u5fc5\u987b\u9762\u5bf9\u4e00\u4e9b\u7279\u6b8a\u7684\u9700\u6c42\u548c\u6bd4\u8f83\u5e95\u5c42\u7684\u64cd\u4f5c\uff0c\u6216\u8005\u5904\u7406\u4e00\u4e9b\u8001\u7248\u672c\u7684\u4ee3\u7801\uff0c\u90a3\u4e48\u4f60\u5c31\u5fc5\u987b\u4e86\u89e3\u672c\u9644\u5f55\u4e2d\u7684\u5185\u5bb9\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Javadoc":{"id":"Books/OnJava8/Appendix-Javadoc","title":"\u9644\u5f55:\u6587\u6863\u6ce8\u91ca","description":"\u7f16\u5199\u4ee3\u7801\u6587\u6863\u7684\u6700\u5927\u95ee\u9898\u53ef\u80fd\u662f\u7ef4\u62a4\u8be5\u6587\u6863\u3002\u5982\u679c\u6587\u6863\u548c\u4ee3\u7801\u662f\u5206\u5f00\u7684\uff0c\u6bcf\u6b21\u66f4\u6539\u4ee3\u7801\u65f6\u90fd\u8981\u5f88\u7e41\u7410\u5730\u518d\u53bb\u66f4\u6539\u6587\u6863\u3002\u89e3\u51b3\u65b9\u6848\u4f3c\u4e4e\u5f88\u7b80\u5355\uff1a\u5c06\u4ee3\u7801\u94fe\u63a5\u5230\u6587\u6863\u3002\u6700\u7b80\u5355\u7684\u65b9\u6cd5\u662f\u5c06\u6240\u6709\u5185\u5bb9\u653e\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\u3002\u7136\u800c\uff0c\u8981\u5b8c\u6210\u8fd9\u4e2a\u4efb\u52a1\uff0c\u9700\u8981\u4e00\u4e2a\u7279\u6b8a\u7684\u6ce8\u91ca\u8bed\u6cd5\u6765\u6807\u8bb0\u6587\u6863\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5de5\u5177\u5c06\u8fd9\u4e9b\u6ce8\u91ca\u63d0\u53d6\u4e3a\u6709\u7528\u7684\u5f62\u5f0f\uff0c\u8fd9\u5c31\u662fJava\u6240\u505a\u7684\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Low-Level-Concurrency":{"id":"Books/OnJava8/Appendix-Low-Level-Concurrency","title":"\u9644\u5f55:\u5e76\u53d1\u5e95\u5c42\u539f\u7406","description":"\u5c3d\u7ba1\u4e0d\u5efa\u8bae\u4f60\u81ea\u5df1\u7f16\u5199\u5e95\u5c42 Java \u5e76\u53d1\u4ee3\u7801\uff0c\u4f46\u662f\u8fd9\u6837\u901a\u5e38\u6709\u52a9\u4e8e\u4e86\u89e3\u5b83\u662f\u5982\u4f55\u5de5\u4f5c\u7684\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-New-IO":{"id":"Books/OnJava8/Appendix-New-IO","title":"\u9644\u5f55:\u65b0IO","description":"Java \u65b0I/O \u5e93\u662f\u5728 1.4 \u7248\u672c\u5f15\u5165\u5230 java.nio.* \u5305\u4e2d\u7684\uff0c\u65e8\u5728\u66f4\u5feb\u901f\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Object-Serialization":{"id":"Books/OnJava8/Appendix-Object-Serialization","title":"\u9644\u5f55:\u5bf9\u8c61\u5e8f\u5217\u5316","description":"\u5f53\u4f60\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u53ea\u8981\u4f60\u9700\u8981\uff0c\u5b83\u5c31\u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u4f46\u662f\u5728\u7a0b\u5e8f\u7ec8\u6b62\u65f6\uff0c\u65e0\u8bba\u5982\u4f55\u5b83\u90fd\u4e0d\u4f1a\u7ee7\u7eed\u5b58\u5728\u3002\u5c3d\u7ba1\u8fd9\u4e48\u505a\u80af\u5b9a\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u662f\u4ecd\u65e7\u5b58\u5728\u67d0\u4e9b\u60c5\u51b5\uff0c\u5982\u679c\u5bf9\u8c61\u80fd\u591f\u5728\u7a0b\u5e8f\u4e0d\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\u4ecd\u80fd\u5b58\u5728\u5e76\u4fdd\u5b58\u5176\u4fe1\u606f\uff0c\u90a3\u5c06\u975e\u5e38\u6709\u7528\u3002\u8fd9\u6837\uff0c\u5728\u4e0b\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u8be5\u5bf9\u8c61\u5c06\u88ab\u91cd\u5efa\u5e76\u4e14\u62e5\u6709\u7684\u4fe1\u606f\u4e0e\u5728\u7a0b\u5e8f\u4e0a\u6b21\u8fd0\u884c\u65f6\u5b83\u6240\u62e5\u6709\u7684\u4fe1\u606f\u76f8\u540c\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5c06\u4fe1\u606f\u5199\u5165\u6587\u4ef6\u6216\u6570\u636e\u5e93\u6765\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\uff0c\u4f46\u662f\u5728\u4f7f\u4e07\u7269\u90fd\u6210\u4e3a\u5bf9\u8c61\u7684\u7cbe\u795e\u4e2d\uff0c\u5982\u679c\u80fd\u591f\u5c06\u4e00\u4e2a\u5bf9\u8c61\u58f0\u660e\u4e3a\u662f\u201c\u6301\u4e45\u6027\u201d\u7684\uff0c\u5e76\u4e3a\u6211\u4eec\u5904\u7406\u6389\u6240\u6709\u7ec6\u8282\uff0c\u90a3\u5c06\u4f1a\u663e\u5f97\u5341\u5206\u65b9\u4fbf\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Passing-and-Returning-Objects":{"id":"Books/OnJava8/Appendix-Passing-and-Returning-Objects","title":"\u9644\u5f55:\u5bf9\u8c61\u4f20\u9012\u548c\u8fd4\u56de","description":"\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u4f60\u5df2\u7ecf\u5bf9\u201c\u4f20\u9012\u201d\u5bf9\u8c61\u5b9e\u9645\u4e0a\u662f\u4f20\u9012\u5f15\u7528\u8fd9\u4e00\u60f3\u6cd5\u60f3\u6cd5\u611f\u5230\u6ee1\u610f\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Programming-Guidelines":{"id":"Books/OnJava8/Appendix-Programming-Guidelines","title":"\u9644\u5f55:\u7f16\u7a0b\u6307\u5357","description":"\u672c\u9644\u5f55\u5305\u542b\u4e86\u6709\u52a9\u4e8e\u6307\u5bfc\u4f60\u8fdb\u884c\u4f4e\u7ea7\u7a0b\u5e8f\u8bbe\u8ba1\u548c\u7f16\u5199\u4ee3\u7801\u7684\u5efa\u8bae\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Standard-IO":{"id":"Books/OnJava8/Appendix-Standard-IO","title":"\u9644\u5f55:\u6807\u51c6IO","description":"\u6807\u51c6 I/O\u8fd9\u4e2a\u672f\u8bed\u53c2\u8003Unix\u4e2d\u7684\u6982\u5ff5\uff0c\u6307\u7a0b\u5e8f\u6240\u4f7f\u7528\u7684\u5355\u4e00\u4fe1\u606f\u6d41\uff08\u8fd9\u79cd\u601d\u60f3\u5728\u5927\u591a\u6570\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0c\u4e5f\u6709\u76f8\u4f3c\u5f62\u5f0f\u7684\u5b9e\u73b0\uff09\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Supplements":{"id":"Books/OnJava8/Appendix-Supplements","title":"\u9644\u5f55:\u8865\u5145","description":"\u672c\u4e66\u6709\u8bb8\u591a\u8865\u5145\u5185\u5bb9\uff0c\u5305\u62ecMindView\u7f51\u7ad9\u63d0\u4f9b\u7684\u9879\u76ee\u548c\u670d\u52a1\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-The-Positive-Legacy-of-C-plus-plus-and-Java":{"id":"Books/OnJava8/Appendix-The-Positive-Legacy-of-C-plus-plus-and-Java","title":"\u9644\u5f55:C++\u548cJava\u7684\u4f18\u826f\u4f20\u7edf","description":"\u5728\u5404\u79cd\u8ba8\u8bba\u58f0\u4e2d\uff0c\u6709\u4e00\u4e9b\u4eba\u8ba4\u4e3aC++\u662f\u4e00\u79cd\u8bbe\u8ba1\u7cdf\u7cd5\u7684\u8bed\u8a00\u3002 \u6211\u8ba4\u4e3a\u7406\u89e3C++\u548cJava\u8bed\u8a00\u7684\u9009\u62e9\u6709\u52a9\u4e8e\u4e86\u89e3\u66f4\u5927\u7684\u89c6\u89d2\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Appendix-Understanding-equals-and-hashCode":{"id":"Books/OnJava8/Appendix-Understanding-equals-and-hashCode","title":"\u9644\u5f55:\u7406\u89e3equals\u548chashCode\u65b9\u6cd5","description":"\u5047\u8bbe\u6709\u4e00\u4e2a\u5bb9\u5668\u4f7f\u7528hash\u51fd\u6570\uff0c\u5f53\u4f60\u521b\u5efa\u4e00\u4e2a\u653e\u5230\u8fd9\u4e2a\u5bb9\u5668\u65f6\uff0c\u4f60\u5fc5\u987b\u5b9a\u4e49 hashCode() \u51fd\u6570\u548c equals() \u51fd\u6570\u3002\u8fd9\u4e24\u4e2a\u51fd\u6570\u4e00\u8d77\u88ab\u7528\u4e8ehash\u5bb9\u5668\u4e2d\u7684\u67e5\u8be2\u64cd\u4f5c\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Arrays":{"id":"Books/OnJava8/Arrays","title":"\u7b2c\u4e8c\u5341\u4e00\u7ae0 \u6570\u7ec4","description":"\u5728 \u521d\u59cb\u5316\u548c\u6e05\u7406 \u4e00\u7ae0\u7684\u6700\u540e\uff0c\u4f60\u5df2\u7ecf\u5b66\u8fc7\u5982\u4f55\u5b9a\u4e49\u548c\u521d\u59cb\u5316\u4e00\u4e2a\u6570\u7ec4\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Collections":{"id":"Books/OnJava8/Collections","title":"\u7b2c\u5341\u4e8c\u7ae0 \u96c6\u5408","description":"\u5982\u679c\u4e00\u4e2a\u7a0b\u5e8f\u53ea\u5305\u542b\u56fa\u5b9a\u6570\u91cf\u7684\u5bf9\u8c61\u4e14\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u90fd\u662f\u5df2\u77e5\u7684\uff0c\u90a3\u4e48\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u7b80\u5355\u7684\u7a0b\u5e8f\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Concurrent-Programming":{"id":"Books/OnJava8/Concurrent-Programming","title":"\u7b2c\u4e8c\u5341\u56db\u7ae0 \u5e76\u53d1\u7f16\u7a0b","description":"\u7231\u4e3d\u4e1d\uff1a\u201c\u6211\u53ef\u4e0d\u60f3\u5230\u75af\u5b50\u4e2d\u95f4\u53bb\u201d","sidebar":"tutorialSidebar"},"Books/OnJava8/Control-Flow":{"id":"Books/OnJava8/Control-Flow","title":"\u7b2c\u4e94\u7ae0 \u63a7\u5236\u6d41","description":"\u7a0b\u5e8f\u5fc5\u987b\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u63a7\u5236\u5b83\u7684\u4e16\u754c\u5e76\u505a\u51fa\u9009\u62e9\u3002 \u5728 Java \u4e2d\uff0c\u4f60\u9700\u8981\u6267\u884c\u63a7\u5236\u8bed\u53e5\u6765\u505a\u51fa\u9009\u62e9\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Enumerations":{"id":"Books/OnJava8/Enumerations","title":"\u7b2c\u4e8c\u5341\u4e8c\u7ae0 \u679a\u4e3e","description":"\u5173\u952e\u5b57 enum \u53ef\u4ee5\u5c06\u4e00\u7ec4\u5177\u540d\u7684\u503c\u7684\u6709\u9650\u96c6\u5408\u521b\u5efa\u4e3a\u4e00\u79cd\u65b0\u7684\u7c7b\u578b\uff0c\u800c\u8fd9\u4e9b\u5177\u540d\u7684\u503c\u53ef\u4ee5\u4f5c\u4e3a\u5e38\u89c4\u7684\u7a0b\u5e8f\u7ec4\u4ef6\u4f7f\u7528\u3002\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u6709\u7528\u7684\u529f\u80fd","sidebar":"tutorialSidebar"},"Books/OnJava8/Exceptions":{"id":"Books/OnJava8/Exceptions","title":"\u7b2c\u5341\u4e94\u7ae0 \u5f02\u5e38","description":"Java \u7684\u57fa\u672c\u7406\u5ff5\u662f\u201c\u7ed3\u6784\u4e0d\u4f73\u7684\u4ee3\u7801\u4e0d\u80fd\u8fd0\u884c\u201d\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Files":{"id":"Books/OnJava8/Files","title":"\u7b2c\u5341\u4e03\u7ae0 \u6587\u4ef6","description":"\u5728\u4e11\u964b\u7684 Java I/O \u7f16\u7a0b\u65b9\u5f0f\u8bde\u751f\u591a\u5e74\u4ee5\u540e\uff0cJava\u7ec8\u4e8e\u7b80\u5316\u4e86\u6587\u4ef6\u8bfb\u5199\u7684\u57fa\u672c\u64cd\u4f5c\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Functional-Programming":{"id":"Books/OnJava8/Functional-Programming","title":"\u7b2c\u5341\u4e09\u7ae0 \u51fd\u6570\u5f0f\u7f16\u7a0b","description":"\u51fd\u6570\u5f0f\u7f16\u7a0b\u8bed\u8a00\u64cd\u7eb5\u4ee3\u7801\u7247\u6bb5\u5c31\u50cf\u64cd\u4f5c\u6570\u636e\u4e00\u6837\u5bb9\u6613\u3002 \u867d\u7136 Java \u4e0d\u662f\u51fd\u6570\u5f0f\u8bed\u8a00\uff0c\u4f46 Java 8 Lambda \u8868\u8fbe\u5f0f\u548c\u65b9\u6cd5\u5f15\u7528 (Method References) \u5141\u8bb8\u4f60\u4ee5\u51fd\u6570\u5f0f\u7f16\u7a0b\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Generics":{"id":"Books/OnJava8/Generics","title":"\u7b2c\u4e8c\u5341\u7ae0 \u6cdb\u578b","description":"\u666e\u901a\u7684\u7c7b\u548c\u65b9\u6cd5\u53ea\u80fd\u4f7f\u7528\u7279\u5b9a\u7684\u7c7b\u578b\uff1a\u57fa\u672c\u6570\u636e\u7c7b\u578b\u6216\u7c7b\u7c7b\u578b\u3002\u5982\u679c\u7f16\u5199\u7684\u4ee3\u7801\u9700\u8981\u5e94\u7528\u4e8e\u591a\u79cd\u7c7b\u578b\uff0c\u8fd9\u79cd\u4e25\u82db\u7684\u9650\u5236\u5bf9\u4ee3\u7801\u7684\u675f\u7f1a\u5c31\u4f1a\u5f88\u5927\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/GLOSSARY":{"id":"Books/OnJava8/GLOSSARY","title":"GLOSSARY","description":"\u8bcd\u6c47\u8868","sidebar":"tutorialSidebar"},"Books/OnJava8/Housekeeping":{"id":"Books/OnJava8/Housekeeping","title":"\u7b2c\u516d\u7ae0 \u521d\u59cb\u5316\u548c\u6e05\u7406","description":"\\"\u4e0d\u5b89\u5168\\"\u7684\u7f16\u7a0b\u662f\u9020\u6210\u7f16\u7a0b\u4ee3\u4ef7\u6602\u8d35\u7684\u7f6a\u9b41\u7978\u9996\u4e4b\u4e00\u3002\u6709\u4e24\u4e2a\u5b89\u5168\u6027\u95ee\u9898\uff1a\u521d\u59cb\u5316\u548c\u6e05\u7406\u3002C \u8bed\u8a00\u4e2d\u5f88\u591a\u7684 bug \u90fd\u662f\u56e0\u4e3a\u7a0b\u5e8f\u5458\u5fd8\u8bb0\u521d\u59cb\u5316\u5bfc\u81f4\u7684\u3002\u5c24\u5176\u662f\u5f88\u591a\u7c7b\u5e93\u7684\u4f7f\u7528\u8005\u4e0d\u77e5\u9053\u5982\u4f55\u521d\u59cb\u5316\u7c7b\u5e93\u7ec4\u4ef6\uff0c\u751a\u81f3\u4ed6\u4eec\u5fc5\u987b\u5f97\u53bb\u521d\u59cb\u5316\u3002\u6e05\u7406\u5219\u662f\u53e6\u4e00\u4e2a\u7279\u6b8a\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u5f53\u4f60\u4f7f\u7528\u4e00\u4e2a\u5143\u7d20\u505a\u5b8c\u4e8b\u540e\u5c31\u4e0d\u4f1a\u53bb\u5173\u5fc3\u8fd9\u4e2a\u5143\u7d20\uff0c\u6240\u4ee5\u4f60\u5f88\u5bb9\u6613\u5fd8\u8bb0\u6e05\u7406\u5b83\u3002\u8fd9\u6837\u5c31\u9020\u6210\u4e86\u5143\u7d20\u4f7f\u7528\u7684\u8d44\u6e90\u6ede\u7559\u4e0d\u4f1a\u88ab\u56de\u6536\uff0c\u76f4\u5230\u7a0b\u5e8f\u6d88\u8017\u5b8c\u6240\u6709\u7684\u8d44\u6e90\uff08\u7279\u522b\u662f\u5185\u5b58\uff09\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Implementation-Hiding":{"id":"Books/OnJava8/Implementation-Hiding","title":"\u7b2c\u4e03\u7ae0 \u5c01\u88c5","description":"\u8bbf\u95ee\u63a7\u5236\uff08Access control\uff09\uff08\u6216\u8005\u9690\u85cf\u5b9e\u73b0\uff08implementation hiding\uff09\uff09\u4e0e\u201c\u6700\u521d\u7684\u5b9e\u73b0\u4e0d\u6070\u5f53\u201d\u6709\u5173\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Inner-Classes":{"id":"Books/OnJava8/Inner-Classes","title":"\u7b2c\u5341\u4e00\u7ae0 \u5185\u90e8\u7c7b","description":"\u4e00\u4e2a\u5b9a\u4e49\u5728\u53e6\u4e00\u4e2a\u7c7b\u4e2d\u7684\u7c7b\uff0c\u53eb\u4f5c\u5185\u90e8\u7c7b\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Installing-Java-and-the-Book-Examples":{"id":"Books/OnJava8/Installing-Java-and-the-Book-Examples","title":"\u7b2c\u4e8c\u7ae0 \u5b89\u88c5Java\u548c\u672c\u4e66\u7528\u4f8b","description":"\u73b0\u5728\uff0c\u6211\u4eec\u6765\u4e3a\u8fd9\u6b21\u9605\u8bfb\u4e4b\u65c5\u505a\u4e9b\u51c6\u5907\u5427\uff01","sidebar":"tutorialSidebar"},"Books/OnJava8/Interfaces":{"id":"Books/OnJava8/Interfaces","title":"\u7b2c\u5341\u7ae0 \u63a5\u53e3","description":"\u63a5\u53e3\u548c\u62bd\u8c61\u7c7b\u63d0\u4f9b\u4e86\u4e00\u79cd\u5c06\u63a5\u53e3\u4e0e\u5b9e\u73b0\u5206\u79bb\u7684\u66f4\u52a0\u7ed3\u6784\u5316\u7684\u65b9\u6cd5\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Introduction":{"id":"Books/OnJava8/Introduction","title":"\u7b80\u4ecb","description":"\u201c\u8bed\u8a00\u89c2\u51b3\u5b9a\u4e16\u754c\u89c2\u3002\u201d \u2014\u2014\u8def\u5fb7\u7ef4\u5e0c\xb7\u7ef4\u7279\u6839\u65af\u5766\uff08Wittgenstein\uff09","sidebar":"tutorialSidebar"},"Books/OnJava8/Objects-Everywhere":{"id":"Books/OnJava8/Objects-Everywhere","title":"\u7b2c\u4e09\u7ae0 \u4e07\u7269\u7686\u5bf9\u8c61","description":"\u5982\u679c\u6211\u4eec\u8bf4\u53e6\u5916\u4e00\u79cd\u4e0d\u540c\u7684\u8bed\u8a00\uff0c\u6211\u4eec\u4f1a\u53d1\u89c9\u4e00\u4e2a\u4e0d\u540c\u7684\u4e16\u754c\uff01\u2014 Ludwig Wittgenstein (1889-1951)","sidebar":"tutorialSidebar"},"Books/OnJava8/Operators":{"id":"Books/OnJava8/Operators","title":"\u7b2c\u56db\u7ae0 \u8fd0\u7b97\u7b26","description":"\u8fd0\u7b97\u7b26\u64cd\u7eb5\u6570\u636e\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Patterns":{"id":"Books/OnJava8/Patterns","title":"\u7b2c\u4e8c\u5341\u4e94\u7ae0 \u8bbe\u8ba1\u6a21\u5f0f","description":"\u6982\u5ff5","sidebar":"tutorialSidebar"},"Books/OnJava8/Polymorphism":{"id":"Books/OnJava8/Polymorphism","title":"\u7b2c\u4e5d\u7ae0 \u591a\u6001","description":"\u66fe\u7ecf\u6709\u4eba\u8bf7\u6559\u6211 \u201c Babbage \u5148\u751f\uff0c\u5982\u679c\u8f93\u5165\u9519\u8bef\u7684\u6570\u5b57\u5230\u673a\u5668\u4e2d\uff0c\u4f1a\u5f97\u51fa\u6b63\u786e\u7ed3\u679c\u5417\uff1f\u201d \u6211\u65e0\u6cd5\u7406\u89e3\u4ea7\u751f\u5982\u6b64\u95ee\u9898\u7684\u6982\u5ff5\u4e0a\u7684\u56f0\u60d1\u3002 \u2014\u2014 Charles Babbage (1791 - 1871)","sidebar":"tutorialSidebar"},"Books/OnJava8/Preface":{"id":"Books/OnJava8/Preface","title":"\u524d\u8a00","description":"\u672c\u4e66\u57fa\u4e8e Java 8 \u7248\u672c\u6765\u6559\u6388\u5f53\u524d Java \u7f16\u7a0b\u7684\u6700\u4f18\u5b9e\u8df5\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Reuse":{"id":"Books/OnJava8/Reuse","title":"\u7b2c\u516b\u7ae0 \u590d\u7528","description":"\u4ee3\u7801\u590d\u7528\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff08OOP\uff09\u6700\u5177\u9b45\u529b\u7684\u539f\u56e0\u4e4b\u4e00\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Streams":{"id":"Books/OnJava8/Streams","title":"\u7b2c\u5341\u56db\u7ae0 \u6d41\u5f0f\u7f16\u7a0b","description":"\u96c6\u5408\u4f18\u5316\u4e86\u5bf9\u8c61\u7684\u5b58\u50a8\uff0c\u800c\u6d41\uff08Streams\uff09\u5219\u662f\u5173\u4e8e\u4e00\u7ec4\u7ec4\u5bf9\u8c61\u7684\u5904\u7406\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Strings":{"id":"Books/OnJava8/Strings","title":"\u7b2c\u5341\u516b\u7ae0 \u5b57\u7b26\u4e32","description":"\u5b57\u7b26\u4e32\u64cd\u4f5c\u6beb\u65e0\u7591\u95ee\u662f\u8ba1\u7b97\u673a\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\u6700\u5e38\u89c1\u7684\u884c\u4e3a\u4e4b\u4e00\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/Type-Information":{"id":"Books/OnJava8/Type-Information","title":"\u7b2c\u5341\u4e5d\u7ae0 \u7c7b\u578b\u4fe1\u606f","description":"RTTI\uff08RunTime Type Information\uff0c\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff09\u80fd\u591f\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u53d1\u73b0\u548c\u4f7f\u7528\u7c7b\u578b\u4fe1\u606f","sidebar":"tutorialSidebar"},"Books/OnJava8/Validating-Your-Code":{"id":"Books/OnJava8/Validating-Your-Code","title":"\u7b2c\u5341\u516d\u7ae0 \u4ee3\u7801\u6821\u9a8c","description":"\u4f60\u6c38\u8fdc\u4e0d\u80fd\u4fdd\u8bc1\u4f60\u7684\u4ee3\u7801\u662f\u6b63\u786e\u7684\uff0c\u4f60\u53ea\u80fd\u8bc1\u660e\u5b83\u662f\u9519\u7684\u3002","sidebar":"tutorialSidebar"},"Books/OnJava8/What-is-an-Object":{"id":"Books/OnJava8/What-is-an-Object","title":"\u7b2c\u4e00\u7ae0 \u5bf9\u8c61\u7684\u6982\u5ff5","description":"\u201c\u6211\u4eec\u6ca1\u6709\u610f\u8bc6\u5230\u60ef\u7528\u8bed\u8a00\u7684\u7ed3\u6784\u6709\u591a\u5927\u7684\u529b\u91cf\u3002\u53ef\u4ee5\u6beb\u4e0d\u5938\u5f20\u5730\u8bf4\uff0c\u5b83\u901a\u8fc7\u8bed\u4e49\u53cd\u5e94\u673a\u5236\u5974\u5f79\u6211\u4eec\u3002\u8bed\u8a00\u8868\u73b0\u51fa\u6765\u5e76\u5728\u65e0\u610f\u8bc6\u4e2d\u7ed9\u6211\u4eec\u7559\u4e0b\u6df1\u523b\u5370\u8c61\u7684\u7ed3\u6784\u4f1a\u81ea\u52a8\u6295\u5c04\u5230\u6211\u4eec\u5468\u56f4\u7684\u4e16\u754c\u3002\u201d  -- Alfred Korzybski (1930)","sidebar":"tutorialSidebar"},"Git/config":{"id":"Git/config","title":"config","description":"\u67e5\u770b\u53c2\u6570","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"intro","description":"","sidebar":"tutorialSidebar"}}}')}}]);