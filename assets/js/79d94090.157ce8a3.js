"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1496],{3905:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},u=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=p(t),d=r,b=m["".concat(s,".").concat(d)]||m[d]||c[d]||i;return t?a.createElement(b,l(l({ref:n},u),{},{components:t})):a.createElement(b,l({ref:n},u))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,l=new Array(i);l[0]=m;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=t[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1905:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={},l="\u9644\u5f55:\u5bf9\u8c61\u5e8f\u5217\u5316",o={unversionedId:"Books/OnJava8/Appendix-Object-Serialization",id:"Books/OnJava8/Appendix-Object-Serialization",title:"\u9644\u5f55:\u5bf9\u8c61\u5e8f\u5217\u5316",description:"\u5f53\u4f60\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u53ea\u8981\u4f60\u9700\u8981\uff0c\u5b83\u5c31\u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u4f46\u662f\u5728\u7a0b\u5e8f\u7ec8\u6b62\u65f6\uff0c\u65e0\u8bba\u5982\u4f55\u5b83\u90fd\u4e0d\u4f1a\u7ee7\u7eed\u5b58\u5728\u3002\u5c3d\u7ba1\u8fd9\u4e48\u505a\u80af\u5b9a\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u662f\u4ecd\u65e7\u5b58\u5728\u67d0\u4e9b\u60c5\u51b5\uff0c\u5982\u679c\u5bf9\u8c61\u80fd\u591f\u5728\u7a0b\u5e8f\u4e0d\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\u4ecd\u80fd\u5b58\u5728\u5e76\u4fdd\u5b58\u5176\u4fe1\u606f\uff0c\u90a3\u5c06\u975e\u5e38\u6709\u7528\u3002\u8fd9\u6837\uff0c\u5728\u4e0b\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u8be5\u5bf9\u8c61\u5c06\u88ab\u91cd\u5efa\u5e76\u4e14\u62e5\u6709\u7684\u4fe1\u606f\u4e0e\u5728\u7a0b\u5e8f\u4e0a\u6b21\u8fd0\u884c\u65f6\u5b83\u6240\u62e5\u6709\u7684\u4fe1\u606f\u76f8\u540c\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5c06\u4fe1\u606f\u5199\u5165\u6587\u4ef6\u6216\u6570\u636e\u5e93\u6765\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\uff0c\u4f46\u662f\u5728\u4f7f\u4e07\u7269\u90fd\u6210\u4e3a\u5bf9\u8c61\u7684\u7cbe\u795e\u4e2d\uff0c\u5982\u679c\u80fd\u591f\u5c06\u4e00\u4e2a\u5bf9\u8c61\u58f0\u660e\u4e3a\u662f\u201c\u6301\u4e45\u6027\u201d\u7684\uff0c\u5e76\u4e3a\u6211\u4eec\u5904\u7406\u6389\u6240\u6709\u7ec6\u8282\uff0c\u90a3\u5c06\u4f1a\u663e\u5f97\u5341\u5206\u65b9\u4fbf\u3002",source:"@site/docs/Books/OnJava8/Appendix-Object-Serialization.md",sourceDirName:"Books/OnJava8",slug:"/Books/OnJava8/Appendix-Object-Serialization",permalink:"/docs/Books/OnJava8/Appendix-Object-Serialization",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Books/OnJava8/Appendix-Object-Serialization.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u9644\u5f55:\u65b0IO",permalink:"/docs/Books/OnJava8/Appendix-New-IO"},next:{title:"\u9644\u5f55:\u5bf9\u8c61\u4f20\u9012\u548c\u8fd4\u56de",permalink:"/docs/Books/OnJava8/Appendix-Passing-and-Returning-Objects"}},s={},p=[{value:"\u67e5\u627e\u7c7b",id:"\u67e5\u627e\u7c7b",level:2},{value:"\u63a7\u5236\u5e8f\u5217\u5316",id:"\u63a7\u5236\u5e8f\u5217\u5316",level:2},{value:"transient \u5173\u952e\u5b57",id:"transient-\u5173\u952e\u5b57",level:3},{value:"Externalizable \u7684\u66ff\u4ee3\u65b9\u6cd5",id:"externalizable-\u7684\u66ff\u4ee3\u65b9\u6cd5",level:3},{value:"\u7248\u672c\u63a7\u5236",id:"\u7248\u672c\u63a7\u5236",level:3},{value:"\u4f7f\u7528\u6301\u4e45\u5316",id:"\u4f7f\u7528\u6301\u4e45\u5316",level:2},{value:"XML",id:"xml",level:2}],u={toc:p};function c(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"\u9644\u5f55\u5bf9\u8c61\u5e8f\u5217\u5316"},"\u9644\u5f55:\u5bf9\u8c61\u5e8f\u5217\u5316"),(0,r.kt)("p",null,"\u5f53\u4f60\u521b\u5efa\u5bf9\u8c61\u65f6\uff0c\u53ea\u8981\u4f60\u9700\u8981\uff0c\u5b83\u5c31\u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u4f46\u662f\u5728\u7a0b\u5e8f\u7ec8\u6b62\u65f6\uff0c\u65e0\u8bba\u5982\u4f55\u5b83\u90fd\u4e0d\u4f1a\u7ee7\u7eed\u5b58\u5728\u3002\u5c3d\u7ba1\u8fd9\u4e48\u505a\u80af\u5b9a\u662f\u6709\u610f\u4e49\u7684\uff0c\u4f46\u662f\u4ecd\u65e7\u5b58\u5728\u67d0\u4e9b\u60c5\u51b5\uff0c\u5982\u679c\u5bf9\u8c61\u80fd\u591f\u5728\u7a0b\u5e8f\u4e0d\u8fd0\u884c\u7684\u60c5\u51b5\u4e0b\u4ecd\u80fd\u5b58\u5728\u5e76\u4fdd\u5b58\u5176\u4fe1\u606f\uff0c\u90a3\u5c06\u975e\u5e38\u6709\u7528\u3002\u8fd9\u6837\uff0c\u5728\u4e0b\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u8be5\u5bf9\u8c61\u5c06\u88ab\u91cd\u5efa\u5e76\u4e14\u62e5\u6709\u7684\u4fe1\u606f\u4e0e\u5728\u7a0b\u5e8f\u4e0a\u6b21\u8fd0\u884c\u65f6\u5b83\u6240\u62e5\u6709\u7684\u4fe1\u606f\u76f8\u540c\u3002\u5f53\u7136\uff0c\u4f60\u53ef\u4ee5\u901a\u8fc7\u5c06\u4fe1\u606f\u5199\u5165\u6587\u4ef6\u6216\u6570\u636e\u5e93\u6765\u8fbe\u5230\u76f8\u540c\u7684\u6548\u679c\uff0c\u4f46\u662f\u5728\u4f7f\u4e07\u7269\u90fd\u6210\u4e3a\u5bf9\u8c61\u7684\u7cbe\u795e\u4e2d\uff0c\u5982\u679c\u80fd\u591f\u5c06\u4e00\u4e2a\u5bf9\u8c61\u58f0\u660e\u4e3a\u662f\u201c\u6301\u4e45\u6027\u201d\u7684\uff0c\u5e76\u4e3a\u6211\u4eec\u5904\u7406\u6389\u6240\u6709\u7ec6\u8282\uff0c\u90a3\u5c06\u4f1a\u663e\u5f97\u5341\u5206\u65b9\u4fbf\u3002"),(0,r.kt)("p",null,"Java \u7684\u5bf9\u8c61\u5e8f\u5217\u5316\u5c06\u90a3\u4e9b\u5b9e\u73b0\u4e86 Serializable \u63a5\u53e3\u7684\u5bf9\u8c61\u8f6c\u6362\u6210\u4e00\u4e2a\u5b57\u8282\u5e8f\u5217\uff0c\u5e76\u80fd\u591f\u5728\u4ee5\u540e\u5c06\u8fd9\u4e2a\u5b57\u8282\u5e8f\u5217\u5b8c\u5168\u6062\u590d\u4e3a\u539f\u6765\u7684\u5bf9\u8c61\u3002\u8fd9\u4e00\u8fc7\u7a0b\u751a\u81f3\u53ef\u901a\u8fc7\u7f51\u7edc\u8fdb\u884c\uff0c\u8fd9\u610f\u5473\u7740\u5e8f\u5217\u5316\u673a\u5236\u80fd\u81ea\u52a8\u5f25\u8865\u4e0d\u540c\u64cd\u4f5c\u7cfb\u7edf\u4e4b\u95f4\u7684\u5dee\u5f02\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ef\u4ee5\u5728\u8fd0\u884c Windows \u7cfb\u7edf\u7684\u8ba1\u7b97\u673a\u4e0a\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c06\u5176\u5e8f\u5217\u5316\uff0c\u901a\u8fc7\u7f51\u7edc\u5c06\u5b83\u53d1\u9001\u7ed9\u4e00\u53f0\u8fd0\u884c Unix \u7cfb\u7edf\u7684\u8ba1\u7b97\u673a\uff0c\u7136\u540e\u5728\u90a3\u91cc\u51c6\u786e\u5730\u91cd\u65b0\u7ec4\u88c5\uff0c\u800c\u5374\u4e0d\u5fc5\u62c5\u5fc3\u6570\u636e\u5728\u4e0d\u540c\u673a\u5668\u4e0a\u7684\u8868\u793a\u4f1a\u4e0d\u540c\uff0c\u4e5f\u4e0d\u5fc5\u5173\u5fc3\u5b87\u8282\u7684\u987a\u5e8f\u6216\u8005\u5176\u4ed6\u4efb\u4f55\u7ec6\u8282\u3002"),(0,r.kt)("p",null,'\u5c31\u5176\u672c\u8eab\u6765\u8bf4\uff0c\u5bf9\u8c61\u5e8f\u5217\u5316\u53ef\u4ee5\u5b9e\u73b0\u8f7b\u91cf\u7ea7\u6301\u4e45\u6027\uff08lightweight persistence\uff09\uff0c\u201c\u6301\u4e45\u6027\u201d\u610f\u5473\u7740\u4e00\u4e2a\u5bf9\u8c61\u7684\u751f\u5b58\u5468\u671f\u5e76\u4e0d\u53d6\u51b3\u4e8e\u7a0b\u5e8f\u662f\u5426\u6b63\u5728\u6267\u884c\u5b83\u53ef\u4ee5\u751f\u5b58\u4e8e\u7a0b\u5e8f\u7684\u8c03\u7528\u4e4b\u95f4\u3002\u901a\u8fc7\u5c06\u4e00\u4e2a\u5e8f\u5217\u5316\u5bf9\u8c61\u5199\u5165\u78c1\u76d8\uff0c\u7136\u540e\u5728\u91cd\u65b0\u8c03\u7528\u7a0b\u5e8f\u65f6\u6062\u590d\u8be5\u5bf9\u8c61\uff0c\u5c31\u80fd\u591f\u5b9e\u73b0\u6301\u4e45\u6027\u7684\u6548\u679c\u3002\u4e4b\u6240\u4ee5\u79f0\u5176\u4e3a\u201c\u8f7b\u91cf\u7ea7\u201d\uff0c\u662f\u56e0\u4e3a\u4e0d\u80fd\u7528\u67d0\u79cd"persistent"\uff08\u6301\u4e45\uff09\u5173\u952e\u5b57\u6765\u7b80\u5355\u5730\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5e76\u8ba9\u7cfb\u7edf\u81ea\u52a8\u7ef4\u62a4\u5176\u4ed6\u7ec6\u8282\u95ee\u9898\uff08\u5c3d\u7ba1\u5c06\u6765\u6709\u53ef\u80fd\u5b9e\u73b0\uff09\u3002\u76f8\u53cd\uff0c\u5bf9\u8c61\u5fc5\u987b\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u5730\u5e8f\u5217\u5316\uff08serialize\uff09\u548c\u53cd\u5e8f\u5217\u5316\u8fd8\u539f\uff08deserialize\uff09\uff0c\u5982\u679c\u9700\u8981\u4e2a\u66f4\u4e25\u683c\u7684\u6301\u4e45\u6027\u673a\u5236\uff0c\u53ef\u4ee5\u8003\u8651\u50cf Hibernate \u4e4b\u7c7b\u7684\u5de5\u5177\u3002'),(0,r.kt)("p",null,"\u5bf9\u8c61\u5e8f\u5217\u5316\u7684\u6982\u5ff5\u52a0\u5165\u5230\u8bed\u8a00\u4e2d\u662f\u4e3a\u4e86\u652f\u6301\u4e24\u79cd\u4e3b\u8981\u7279\u6027\u3002\u4e00\u662f Java \u7684\u8fdc\u7a0b\u65b9\u6cd5\u8c03\u7528\uff08Remote Method Invocation\uff0cRMI\uff09\uff0c\u5b83\u4f7f\u5b58\u6d3b\u4e8e\u5176\u4ed6\u8ba1\u7b97\u673a\u4e0a\u7684\u5bf9\u8c61\u4f7f\u7528\u8d77\u6765\u5c31\u50cf\u662f\u5b58\u6d3b\u4e8e\u672c\u673a\u4e0a\u4e00\u6837\u3002\u5f53\u5411\u8fdc\u7a0b\u5bf9\u8c61\u53d1\u9001\u6d88\u606f\u65f6\uff0c\u9700\u8981\u901a\u8fc7\u5bf9\u8c61\u5e8f\u5217\u5316\u6765\u4f20\u8f93\u53c2\u6570\u548c\u8fd4\u56de\u503c\u3002"),(0,r.kt)("p",null,"\u518d\u8005\uff0c\u5bf9 Java Beans \u6765\u8bf4\uff0c\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u4e5f\u662f\u5fc5\u9700\u7684\uff08\u5728\u64b0\u5199\u672c\u6587\u65f6\u88ab\u89c6\u4e3a\u5931\u8d25\u7684\u6280\u672f\uff09\uff0c\u4f7f\u7528\u4e00\u4e2a Bean \u65f6\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u662f\u5728\u8bbe\u8ba1\u9636\u6bb5\u5bf9\u5b83\u7684\u72b6\u6001\u4fe1\u606f\u8fdb\u884c\u914d\u7f6e\u3002\u8fd9\u79cd\u72b6\u6001\u4fe1\u606f\u5fc5\u987b\u4fdd\u5b58\u4e0b\u6765\uff0c\u5e76\u5728\u7a0b\u5e8f\u542f\u52a8\u65f6\u8fdb\u884c\u540e\u671f\u6062\u590d\uff0c\u8fd9\u79cd\u5177\u4f53\u5de5\u4f5c\u5c31\u662f\u7531\u5bf9\u8c61\u5e8f\u5217\u5316\u5b8c\u6210\u7684\u3002"),(0,r.kt)("p",null,"\u53ea\u8981\u5bf9\u8c61\u5b9e\u73b0\u4e86 Serializable \u63a5\u53e3\uff08\u8be5\u63a5\u53e3\u4ec5\u662f\u4e00\u4e2a\u6807\u8bb0\u63a5\u53e3\uff0c\u4e0d\u5305\u62ec\u4efb\u4f55\u65b9\u6cd5\uff09\uff0c\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u5904\u7406\u5c31\u4f1a\u975e\u5e38\u7b80\u5355\u3002\u5f53\u5e8f\u5217\u5316\u7684\u6982\u5ff5\u88ab\u52a0\u5165\u5230\u8bed\u8a00\u4e2d\u65f6\uff0c\u8bb8\u591a\u6807\u51c6\u5e93\u7c7b\u90fd\u53d1\u751f\u4e86\u6539\u53d8\uff0c\u4ee5\u4fbf\u5177\u5907\u5e8f\u5217\u5316\u7279\u6027-\u5176\u4e2d\u5305\u62ec\u6240\u6709\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7684\u5c01\u88c5\u5668\u3001\u6240\u6709\u5bb9\u5668\u7c7b\u4ee5\u53ca\u8bb8\u591a\u5176\u4ed6\u7684\u4e1c\u897f\u3002\u751a\u81f3 Class \u5bf9\u8c61\u4e5f\u53ef\u4ee5\u88ab\u5e8f\u5217\u5316\u3002"),(0,r.kt)("p",null,"\u8981\u5e8f\u5217\u5316\u4e00\u4e2a\u5bf9\u8c61\uff0c\u9996\u5148\u8981\u521b\u5efa\u67d0\u4e9b OutputStream \u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u5176\u5c01\u88c5\u5728\u4e00\u4e2a ObjectOutputStream \u5bf9\u8c61\u5185\u3002\u8fd9\u65f6\uff0c\u53ea\u9700\u8c03\u7528 writeObject() \u5373\u53ef\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\uff0c\u5e76\u5c06\u5176\u53d1\u9001\u7ed9 OutputStream\uff08\u5bf9\u8c61\u5316\u5e8f\u5217\u662f\u57fa\u4e8e\u5b57\u8282\u7684\uff0c\u56e0\u8981\u4f7f\u7528 InputStream \u548c OutputStream \u7ee7\u627f\u5c42\u6b21\u7ed3\u6784\uff09\u3002\u8981\u53cd\u5411\u8fdb\u884c\u8be5\u8fc7\u7a0b\uff08\u5373\u5c06\u4e00\u4e2a\u5e8f\u5217\u8fd8\u539f\u4e3a\u4e00\u4e2a\u5bf9\u8c61\uff09\uff0c\u9700\u8981\u5c06\u4e00\u4e2a InputStream \u5c01\u88c5\u5728 ObjectInputStream \u5185\uff0c\u7136\u540e\u8c03\u7528 readObject()\u3002\u548c\u5f80\u5e38\u4e00\u6837\uff0c\u6211\u4eec\u6700\u540e\u83b7\u5f97\u7684\u662f\u4e00\u4e2a\u5f15\u7528\uff0c\u5b83\u6307\u5411\u4e00\u4e2a\u5411\u4e0a\u8f6c\u578b\u7684 Object\uff0c\u6240\u4ee5\u5fc5\u987b\u5411\u4e0b\u8f6c\u578b\u624d\u80fd\u76f4\u63a5\u8bbe\u7f6e\u5b83\u4eec\u3002"),(0,r.kt)("p",null,"\u5bf9\u8c61\u5e8f\u5217\u5316\u7279\u522b\u201c\u806a\u660e\u201d\u7684\u4e00\u4e2a\u5730\u65b9\u662f\u5b83\u4e0d\u4ec5\u4fdd\u5b58\u4e86\u5bf9\u8c61\u7684\u201c\u5168\u666f\u56fe\u201d\uff0c\u800c\u4e14\u80fd\u8ffd\u8e2a\u5bf9\u8c61\u5185\u6240\u5305\u542b\u7684\u6240\u6709\u5f15\u7528\uff0c\u5e76\u4fdd\u5b58\u90a3\u4e9b\u5bf9\u8c61\uff1b\u63a5\u7740\u53c8\u80fd\u5bf9\u5bf9\u8c61\u5185\u5305\u542b\u7684\u6bcf\u4e2a\u8fd9\u6837\u7684\u5f15\u7528\u8fdb\u884c\u8ffd\u8e2a\uff0c\u4f9d\u6b64\u7c7b\u63a8\u3002\u8fd9\u79cd\u60c5\u51b5\u6709\u65f6\u88ab\u79f0\u4e3a\u201c\u5bf9\u8c61\u7f51\u201d\uff0c\u5355\u4e2a\u5bf9\u8c61\u53ef\u4e0e\u4e4b\u5efa\u7acb\u8fde\u63a5\uff0c\u800c\u4e14\u5b83\u8fd8\u5305\u542b\u4e86\u5bf9\u8c61\u7684\u5f15\u7528\u6570\u7ec4\u4ee5\u53ca\u6210\u5458\u5bf9\u8c61\u3002\u5982\u679c\u5fc5\u987b\u4fdd\u6301\u4e00\u5957\u81ea\u5df1\u7684\u5bf9\u8c61\u5e8f\u5217\u5316\u673a\u5236\uff0c\u90a3\u4e48\u7ef4\u62a4\u90a3\u4e9b\u53ef\u8ffd\u8e2a\u5230\u6240\u6709\u94fe\u63a5\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u663e\u5f97\u975e\u5e38\u9ebb\u70e6\u3002\u7136\u800c\uff0c\u7531\u4e8e Java \u7684\u5bf9\u8c61\u5e8f\u5217\u5316\u4f3c\u4e4e\u627e\u4e0d\u51fa\u4ec0\u4e48\u7f3a\u70b9\uff0c\u6240\u4ee5\u8bf7\u5c3d\u91cf\u4e0d\u8981\u81ea\u5df1\u52a8\u624b\uff0c\u8ba9\u5b83\u7528\u4f18\u5316\u7684\u7b97\u6cd5\u81ea\u52a8\u7ef4\u62a4\u6574\u4e2a\u5bf9\u8c61\u7f51\u3002\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u901a\u8fc7\u5bf9\u94fe\u63a5\u7684\u5bf9\u8c61\u751f\u6210\u4e00\u4e2a worm\uff08\u8815\u866b\uff09\u5bf9\u5e8f\u5217\u5316\u673a\u5236\u8fdb\u884c\u4e86\u6d4b\u8bd5\u3002\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u4e0e worm \u4e2d\u7684\u4e0b\u4e00\u6bb5\u94fe\u63a5\uff0c\u540c\u65f6\u53c8\u4e0e\u5c5e\u4e8e\u4e0d\u540c\u7c7b\uff08Data\uff09\u7684\u5bf9\u8c61\u5f15\u7528\u6570\u7ec4\u94fe\u63a5\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/Worm.java\n// Demonstrates object serialization\nimport java.io.*;\nimport java.util.*;\nclass Data implements Serializable {\n    private int n;\n    Data(int n) { this.n = n; }\n    @Override\n    public String toString() {\n        return Integer.toString(n);\n    }\n}\npublic class Worm implements Serializable {\n    private static Random rand = new Random(47);\n    private Data[] d = {\n            new Data(rand.nextInt(10)),\n            new Data(rand.nextInt(10)),\n            new Data(rand.nextInt(10))\n    };\n    private Worm next;\n    private char c;\n    // Value of i == number of segments\n    public Worm(int i, char x) {\n        System.out.println("Worm constructor: " + i);\n        c = x;\n        if(--i > 0)\n            next = new Worm(i, (char)(x + 1));\n    }\n    public Worm() {\n        System.out.println("No-arg constructor");\n    }\n    @Override\n    public String toString() {\n        StringBuilder result = new StringBuilder(":");\n        result.append(c);\n        result.append("(");\n        for(Data dat : d)\n            result.append(dat);\n        result.append(")");\n        if(next != null)\n            result.append(next);\n        return result.toString();\n    }\n    public static void\n    main(String[] args) throws ClassNotFoundException,\n            IOException {\n        Worm w = new Worm(6, \'a\');\n        System.out.println("w = " + w);\n        try(\n                ObjectOutputStream out = new ObjectOutputStream(\n                        new FileOutputStream("worm.dat"))\n        ) {\n            out.writeObject("Worm storage\\n");\n            out.writeObject(w);\n        }\n        try(\n                ObjectInputStream in = new ObjectInputStream(\n                        new FileInputStream("worm.dat"))\n        ) {\n            String s = (String)in.readObject();\n            Worm w2 = (Worm)in.readObject();\n            System.out.println(s + "w2 = " + w2);\n        }\n        try(\n                ByteArrayOutputStream bout =\n                        new ByteArrayOutputStream();\n                ObjectOutputStream out2 =\n                        new ObjectOutputStream(bout)\n        ) {\n            out2.writeObject("Worm storage\\n");\n            out2.writeObject(w);\n            out2.flush();\n            try(\n                    ObjectInputStream in2 = new ObjectInputStream(\n                            new ByteArrayInputStream(\n                                    bout.toByteArray()))\n            ) {\n                String s = (String)in2.readObject();\n                Worm w3 = (Worm)in2.readObject();\n                System.out.println(s + "w3 = " + w3);\n            }\n        }\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Worm constructor: 6\nWorm constructor: 5\nWorm constructor: 4\nWorm constructor: 3\nWorm constructor: 2\nWorm constructor: 1\nw = :a(853):b(119):c(802):d(788):e(199):f(881)\nWorm storage\nw2 = :a(853):b(119):c(802):d(788):e(199):f(881)\nWorm storage\nw3 = :a(853):b(119):c(802):d(788):e(199):f(881)\n")),(0,r.kt)("p",null,"\u66f4\u6709\u8da3\u7684\u662f\uff0cWorm \u5185\u7684 Data \u5bf9\u8c61\u6570\u7ec4\u662f\u7528\u968f\u673a\u6570\u521d\u59cb\u5316\u7684\uff08\u8fd9\u6837\u5c31\u4e0d\u7528\u6000\u7591\u7f16\u8bd1\u5668\u4fdd\u7559\u4e86\u67d0\u79cd\u539f\u59cb\u4fe1\u606f\uff09\uff0c\u6bcf\u4e2a Worm \u6bb5\u90fd\u7528\u4e00\u4e2a char \u52a0\u4ee5\u6807\u8bb0\u3002\u8be5 char \u662f\u5728\u9012\u5f52\u751f\u6210\u94fe\u63a5\u7684 Worm \u5217\u8868\u65f6\u81ea\u52a8\u4ea7\u751f\u7684\u3002\u8981\u521b\u5efa\u4e00\u4e2a Worm\uff0c\u5fc5\u987b\u544a\u8bc9\u6784\u9020\u5668\u4f60\u6240\u5e0c\u671b\u7684\u5b83\u7684\u957f\u5ea6\u3002\u5728\u4ea7\u751f\u4e0b\u4e00\u4e2a\u5f15\u7528\u65f6\uff0c\u8981\u8c03\u7528 Worm \u6784\u9020\u5668\uff0c\u5e76\u5c06\u957f\u5ea6\u51cf 1\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u6700\u540e\u4e00\u4e2a next \u5f15\u7528\u5219\u4e3a null\uff08\u7a7a\uff09\uff0c\u8868\u793a\u5df2\u5230\u8fbe Worm \u7684\u5c3e\u90e8"),(0,r.kt)("p",null,"\u4ee5\u4e0a\u8fd9\u4e9b\u64cd\u4f5c\u90fd\u4f7f\u5f97\u4e8b\u60c5\u53d8\u5f97\u66f4\u52a0\u590d\u6742\uff0c\u4ece\u800c\u52a0\u5927\u4e86\u5bf9\u8c61\u5e8f\u5217\u5316\u7684\u96be\u5ea6\u3002\u7136\u800c\uff0c\u771f\u6b63\u7684\u5e8f\u5217\u5316\u8fc7\u7a0b\u5374\u662f\u975e\u5e38\u7b80\u5355\u7684\u3002\u4e00\u65e6\u4ece\u53e6\u5916\u67d0\u4e2a\u6d41\u521b\u5efa\u4e86 ObjectOutputstream\uff0cwriteObject() \u5c31\u4f1a\u5c06\u5bf9\u8c61\u5e8f\u5217\u5316\u3002\u6ce8\u610f\u4e5f\u53ef\u4ee5\u4e3a\u4e00\u4e2a String \u8c03\u7528 writeObject() \u4e5f\u53ef\u4ee5\u7528\u4e0e DataOutputStream \u76f8\u540c\u7684\u65b9\u6cd5\u5199\u4eba\u6240\u6709\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff08\u5b83\u4eec\u5177\u6709\u540c\u6837\u7684\u63a5\u53e3\uff09\u3002"),(0,r.kt)("p",null,"\u6709\u4e24\u6bb5\u770b\u8d77\u6765\u76f8\u4f3c\u7684\u72ec\u7acb\u7684\u4ee3\u7801\u3002\u4e00\u4e2a\u8bfb\u5199\u7684\u662f\u6587\u4ef6\uff0c\u800c\u53e6\u4e00\u4e2a\u8bfb\u5199\u7684\u662f\u5b57\u8282\u6570\u7ec4\uff08ByteArray\uff09\uff0c\u53ef\u5229\u7528\u5e8f\u5217\u5316\u5c06\u5bf9\u8c61\u8bfb\u5199\u5230\u4efb\u4f55 DatalnputStream \u6216\u8005 DataOutputStream\u3002"),(0,r.kt)("p",null,"\u4ece\u8f93\u51fa\u4e2d\u53ef\u4ee5\u770b\u51fa\uff0c\u88ab\u8fd8\u539f\u540e\u7684\u5bf9\u8c61\u786e\u5b9e\u5305\u542b\u4e86\u539f\u5bf9\u8c61\u4e2d\u7684\u6240\u6709\u94fe\u63a5\u3002"),(0,r.kt)("p",null,"\u6ce8\u610f\u5728\u5bf9\u4e00\u4e2a Serializable \u5bf9\u8c61\u8fdb\u884c\u8fd8\u539f\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6ca1\u6709\u8c03\u7528\u4efb\u4f55\u6784\u9020\u5668\uff0c\u5305\u62ec\u9ed8\u8ba4\u7684\u6784\u9020\u5668\u3002\u6574\u4e2a\u5bf9\u8c61\u90fd\u662f\u901a\u8fc7\u4ece InputStream \u4e2d\u53d6\u5f97\u6570\u636e\u6062\u590d\u800c\u6765\u7684\u3002"),(0,r.kt)("h2",{id:"\u67e5\u627e\u7c7b"},"\u67e5\u627e\u7c7b"),(0,r.kt)("p",null,"\u4f60\u6216\u8bb8\u4f1a\u5947\u602a\uff0c\u5c06\u4e00\u4e2a\u5bf9\u8c61\u4ece\u5b83\u7684\u5e8f\u5217\u5316\u72b6\u6001\u4e2d\u6062\u590d\u51fa\u6765\uff0c\u6709\u54ea\u4e9b\u5de5\u4f5c\u662f\u5fc5\u987b\u7684\u5462\uff1f\u4e3e\u4e2a\u4f8b\u5b50\u6765\u8bf4\uff0c\u5047\u5982\u6211\u4eec\u5c06\u4e00\u4e2a\u5bf9\u8c61\u5e8f\u5217\u5316\uff0c\u5e76\u901a\u8fc7\u7f51\u7edc\u5c06\u5176\u4f5c\u4e3a\u6587\u4ef6\u4f20\u9001\u7ed9\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a\uff0c\u90a3\u4e48\uff0c\u53e6\u4e00\u53f0\u8ba1\u7b97\u673a\u4e0a\u7684\u7a0b\u5e8f\u53ef\u4ee5\u53ea\u5229\u7528\u8be5\u6587\u4ef6\u5185\u5bb9\u6765\u8fd8\u539f\u8fd9\u4e2a\u5bf9\u8c61\u5417\uff1f"),(0,r.kt)("p",null,"\u56de\u7b54\u8fd9\u4e2a\u95ee\u9898\u7684\u6700\u597d\u65b9\u6cd5\u5c31\u662f\u505a\u4e00\u4e2a\u5b9e\u9a8c\u3002\u4e0b\u9762\u8fd9\u4e2a\u6587\u4ef6\u4f4d\u4e8e\u672c\u7ae0\u7684\u5b50\u76ee\u5f55\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"// serialization/Alien.java\n// A serializable class\nimport java.io.*;\npublic class Alien implements Serializable {}\n")),(0,r.kt)("p",null,"\u800c\u7528\u4e8e\u521b\u5efa\u548c\u5e8f\u5217\u5316\u4e00\u4e2a Alien \u5bf9\u8c61\u7684\u6587\u4ef6\u4e5f\u4f4d\u4e8e\u76f8\u540c\u7684\u76ee\u5f55\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/FreezeAlien.java\n// Create a serialized output file\nimport java.io.*;\npublic class FreezeAlien {\n    public static void main(String[] args) throws Exception {\n        try(\n                ObjectOutputStream out = new ObjectOutputStream(\n                        new FileOutputStream("X.file"));\n        ) {\n            Alien quellek = new Alien();\n            out.writeObject(quellek);\n        }\n    }\n}\n')),(0,r.kt)("p",null,"\u4e00\u65e6\u8be5\u7a0b\u5e8f\u88ab\u7f16\u8bd1\u548c\u8fd0\u884c\uff0c\u5b83\u5c31\u4f1a\u5728 c12 \u76ee\u5f55\u4e0b\u4ea7\u751f\u4e00\u4e2a\u540d\u4e3a X.file \u7684\u6587\u4ef6\u3002\u4ee5\u4e0b\u4ee3\u7801\u4f4d\u4e8e\u4e00\u4e2a\u540d\u4e3a xiles \u7684\u5b50\u76ee\u5f55\u4e0b\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/xfiles/ThawAlien.java\n// Recover a serialized file\n// {java serialization.xfiles.ThawAlien}\n// {RunFirst: FreezeAlien}\npackage serialization.xfiles;\nimport java.io.*;\npublic class ThawAlien {\n    public static void main(String[] args) throws Exception {\n        ObjectInputStream in = new ObjectInputStream(\n                new FileInputStream(new File("X.file")));\n        Object mystery = in.readObject();\n        System.out.println(mystery.getClass());\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"class Alien\n")),(0,r.kt)("p",null,"\u4e3a\u4e86\u6b63\u5e38\u8fd0\u884c\uff0c\u5fc5\u987b\u4fdd\u8bc1 Java \u865a\u62df\u673a\u80fd\u627e\u5230\u76f8\u5173\u7684.class \u6587\u4ef6\u3002"),(0,r.kt)("h2",{id:"\u63a7\u5236\u5e8f\u5217\u5316"},"\u63a7\u5236\u5e8f\u5217\u5316"),(0,r.kt)("p",null,"\u6b63\u5982\u5927\u5bb6\u6240\u770b\u5230\u7684\uff0c\u9ed8\u8ba4\u7684\u5e8f\u5217\u5316\u673a\u5236\u5e76\u4e0d\u96be\u64cd\u7eb5\u3002\u7136\u800c\uff0c\u5982\u679c\u6709\u7279\u6b8a\u7684\u9700\u8981\u90a3\u53c8\u8be5\u600e\u4e48\u529e\u5462\uff1f\u4f8b\u5982\uff0c\u4e5f\u8bb8\u8981\u8003\u8651\u7279\u6b8a\u7684\u5b89\u5168\u95ee\u9898\uff0c\u800c\u4e14\u4f60\u4e0d\u5e0c\u671b\u5bf9\u8c61\u7684\u67d0\u4e00\u90e8\u5206\u88ab\u5e8f\u5217\u5316\uff1b\u6216\u8005\u4e00\u4e2a\u5bf9\u8c61\u88ab\u8fd8\u539f\u4ee5\u540e\uff0c\u67d0\u5b50\u5bf9\u8c61\u9700\u8981\u91cd\u65b0\u521b\u5efa\uff0c\u4ece\u800c\u4e0d\u5fc5\u5c06\u8be5\u5b50\u5bf9\u8c61\u5e8f\u5217\u5316\u3002"),(0,r.kt)("p",null,"\u5728\u8fd9\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u53ef\u901a\u8fc7\u5b9e\u73b0 Externalizable \u63a5\u53e3\u2014\u2014\u4ee3\u66ff\u5b9e\u73b0 Serializable \u63a5\u53e3-\u6765\u5bf9\u5e8f\u5217\u5316\u8fc7\u7a0b\u8fdb\u884c\u63a7\u5236\u3002\u8fd9\u4e2a Externalizable \u63a5\u53e3\u7ee7\u627f\u4e86 Serializable \u63a5\u53e3\uff0c\u540c\u65f6\u589e\u6dfb\u4e86\u4e24\u4e2a\u65b9\u6cd5\uff1awriteExternal() \u548c readExternal()\u3002\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u4f1a\u5728\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u8fd8\u539f\u7684\u8fc7\u7a0b\u4e2d\u88ab\u81ea\u52a8\u8c03\u7528\uff0c\u4ee5\u4fbf\u6267\u884c\u4e00\u4e9b\u7279\u6b8a\u64cd\u4f5c\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u5c55\u793a\u4e86 Externalizable \u63a5\u53e3\u65b9\u6cd5\u7684\u7b80\u5355\u5b9e\u73b0\u3002\u6ce8\u610f Blip1 \u548c Blip2 \u9664\u4e86\u7ec6\u5fae\u7684\u5dee\u522b\u4e4b\u5916\uff0c\u51e0\u4e4e\u5b8c\u5168\u4e00\u81f4\uff08\u7814\u7a76\u4e00\u4e0b\u4ee3\u7801\uff0c\u770b\u770b\u4f60\u80fd\u5426\u53d1\u73b0\uff09\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/Blips.java\n// Simple use of Externalizable & a pitfall\nimport java.io.*;\nclass Blip1 implements Externalizable {\n    public Blip1() {\n        System.out.println("Blip1 Constructor");\n    }\n    @Override\n    public void writeExternal(ObjectOutput out)\n            throws IOException {\n        System.out.println("Blip1.writeExternal");\n    }\n    @Override\n    public void readExternal(ObjectInput in)\n            throws IOException, ClassNotFoundException {\n        System.out.println("Blip1.readExternal");\n    }\n}\nclass Blip2 implements Externalizable {\n    Blip2() {\n        System.out.println("Blip2 Constructor");\n    }\n    @Override\n    public void writeExternal(ObjectOutput out)\n            throws IOException {\n        System.out.println("Blip2.writeExternal");\n    }\n    @Override\n    public void readExternal(ObjectInput in)\n            throws IOException, ClassNotFoundException {\n        System.out.println("Blip2.readExternal");\n    }\n}\npublic class Blips {\n    public static void main(String[] args) {\n        System.out.println("Constructing objects:");\n        Blip1 b1 = new Blip1();\n        Blip2 b2 = new Blip2();\n        try(\n                ObjectOutputStream o = new ObjectOutputStream(\n                        new FileOutputStream("Blips.serialized"))\n        ) {\n            System.out.println("Saving objects:");\n            o.writeObject(b1);\n            o.writeObject(b2);\n        } catch(IOException e) {\n            throw new RuntimeException(e);\n        }\n        // Now get them back:\n        System.out.println("Recovering b1:");\n        try(\n                ObjectInputStream in = new ObjectInputStream(\n                        new FileInputStream("Blips.serialized"))\n        ) {\n            b1 = (Blip1)in.readObject();\n        } catch(IOException | ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n        // OOPS! Throws an exception:\n        //- System.out.println("Recovering b2:");\n        //- b2 = (Blip2)in.readObject();\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Constructing objects:\nBlip1 Constructor\nBlip2 Constructor\nSaving objects:\nBlip1.writeExternal\nBlip2.writeExternal\nRecovering b1:\nBlip1 Constructor\nBlip1.readExternal\n")),(0,r.kt)("p",null,"\u6ca1\u6709\u6062\u590d Blip2 \u5bf9\u8c61\u7684\u539f\u56e0\u662f\u90a3\u6837\u505a\u4f1a\u5bfc\u81f4\u4e00\u4e2a\u5f02\u5e38\u3002\u4f60\u627e\u51fa Blip1 \u548c Blip2 \u4e4b\u95f4\u7684\u533a\u522b\u4e86\u5417\uff1fBlipl \u7684\u6784\u9020\u5668\u662f\u201c\u516c\u5171\u7684\u201d\uff08public\uff09\uff0cBlip2 \u7684\u6784\u9020\u5668\u5374\u4e0d\u662f\uff0c\u8fd9\u6837\u5c31\u4f1a\u5728\u6062\u590d\u65f6\u9020\u6210\u5f02\u5e38\u3002\u8bd5\u8bd5\u5c06 Blip2 \u7684\u6784\u9020\u5668\u53d8\u6210 public \u7684\uff0c\u7136\u540e\u5220\u9664//\u6ce8\u91ca\u6807\u8bb0\uff0c\u770b\u770b\u662f\u5426\u80fd\u5f97\u5230\u6b63\u786e\u7684\u7ed3\u679c\u3002"),(0,r.kt)("p",null,"\u6062\u590d b1 \u540e\uff0c\u4f1a\u8c03\u7528 Blip1 \u9ed8\u8ba4\u6784\u9020\u5668\u3002\u8fd9\u4e0e\u6062\u590d\u4e00\u4e2a Serializable \u5bf9\u8c61\u4e0d\u540c\u3002\u5bf9\u4e8e Serializable \u5bf9\u8c61\uff0c\u5bf9\u8c61\u5b8c\u5168\u4ee5\u5b83\u5b58\u50a8\u7684\u4e8c\u8fdb\u5236\u4f4d\u4e3a\u57fa\u7840\u6765\u6784\u9020\uff0c\u800c\u4e0d\u8c03\u7528\u6784\u9020\u5668\u3002\u800c\u5bf9\u4e8e\u4e00\u4e2a Externalizable \u5bf9\u8c61\uff0c\u6240\u6709\u666e\u901a\u7684\u9ed8\u8ba4\u6784\u9020\u5668\u90fd\u4f1a\u88ab\u8c03\u7528\uff08\u5305\u62ec\u5728\u5b57\u6bb5\u5b9a\u4e49\u65f6\u7684\u521d\u59cb\u5316\uff09\uff0c\u7136\u540e\u8c03\u7528 readExternal() \u5fc5\u987b\u6ce8\u610f\u8fd9\u4e00\u70b9--\u6240\u6709\u9ed8\u8ba4\u7684\u6784\u9020\u5668\u90fd\u4f1a\u88ab\u8c03\u7528\uff0c\u624d\u80fd\u4f7f Externalizable \u5bf9\u8c61\u4ea7\u751f\u6b63\u786e\u7684\u884c\u4e3a\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u793a\u8303\u4e86\u5982\u4f55\u5b8c\u6574\u4fdd\u5b58\u548c\u6062\u590d\u4e00\u4e2a Externalizable \u5bf9\u8c61\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/Blip3.java\n// Reconstructing an externalizable object\nimport java.io.*;\npublic class Blip3 implements Externalizable {\n    private int i;\n    private String s; // No initialization\n    public Blip3() {\n        System.out.println("Blip3 Constructor");\n// s, i not initialized\n    }\n    public Blip3(String x, int a) {\n        System.out.println("Blip3(String x, int a)");\n        s = x;\n        i = a;\n// s & i initialized only in non-no-arg constructor.\n    }\n    @Override\n    public String toString() { return s + i; }\n    @Override\n    public void writeExternal(ObjectOutput out)\n            throws IOException {\n        System.out.println("Blip3.writeExternal");\n// You must do this:\n        out.writeObject(s);\n        out.writeInt(i);\n    }\n    @Override\n    public void readExternal(ObjectInput in)\n            throws IOException, ClassNotFoundException {\n        System.out.println("Blip3.readExternal");\n// You must do this:\n        s = (String)in.readObject();\n        i = in.readInt();\n    }\n    public static void main(String[] args) {\n        System.out.println("Constructing objects:");\n        Blip3 b3 = new Blip3("A String ", 47);\n        System.out.println(b3);\n        try(\n                ObjectOutputStream o = new ObjectOutputStream(\n                        new FileOutputStream("Blip3.serialized"))\n        ) {\n            System.out.println("Saving object:");\n            o.writeObject(b3);\n        } catch(IOException e) {\n            throw new RuntimeException(e);\n        }\n// Now get it back:\n        System.out.println("Recovering b3:");\n        try(\n                ObjectInputStream in = new ObjectInputStream(\n                        new FileInputStream("Blip3.serialized"))\n        ) {\n            b3 = (Blip3)in.readObject();\n        } catch(IOException | ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n        System.out.println(b3);\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Constructing objects:\nBlip3(String x, int a)\nA String 47\nSaving object:\nBlip3.writeExternal\nRecovering b3:\nBlip3 Constructor\nBlip3.readExternal\nA String 47\n")),(0,r.kt)("p",null,'\u5176\u4e2d\uff0c\u5b57\u6bb5 s \u548c i \u53ea\u5728\u7b2c\u4e8c\u4e2a\u6784\u9020\u5668\u4e2d\u521d\u59cb\u5316\uff0c\u800c\u4e0d\u662f\u5728\u9ed8\u8ba4\u7684\u6784\u9020\u5668\u4e2d\u521d\u59cb\u5316\u3002\u8fd9\u610f\u5473\u7740\u5047\u5982\u4e0d\u5728 readExternal() \u4e2d\u521d\u59cb\u5316 s \u548c i\uff0cs \u5c31\u4f1a\u4e3a null\uff0c\u800c i \u5c31\u4f1a\u4e3a\u96f6\uff08\u56e0\u4e3a\u5728\u521b\u5efa\u5bf9\u8c61\u7684\u7b2c\u4e00\u6b65\u4e2d\u5c06\u5bf9\u8c61\u7684\u5b58\u50a8\u7a7a\u95f4\u6e05\u7406\u4e3a 0\uff09\u3002\u5982\u679c\u6ce8\u91ca\u6389\u8ddf\u968f\u4e8e"You must do this\u201d\u540e\u9762\u7684\u4e24\u884c\u4ee3\u7801\uff0c\u7136\u540e\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5c31\u4f1a\u53d1\u73b0\u5f53\u5bf9\u8c61\u88ab\u8fd8\u539f\u540e\uff0cs \u662f null\uff0c\u800c i \u662f\u96f6\u3002'),(0,r.kt)("p",null,"\u6211\u4eec\u5982\u679c\u4ece\u4e00\u4e2a Externalizable \u5bf9\u8c61\u7ee7\u627f\uff0c\u901a\u5e38\u9700\u8981\u8c03\u7528\u57fa\u7c7b\u7248\u672c\u7684 writeExternal() \u548c readExternal() \u6765\u4e3a\u57fa\u7c7b\u7ec4\u4ef6\u63d0\u4f9b\u6070\u5f53\u7684\u5b58\u50a8\u548c\u6062\u590d\u529f\u80fd\u3002"),(0,r.kt)("p",null,"\u56e0\u6b64\uff0c\u4e3a\u4e86\u6b63\u5e38\u8fd0\u884c\uff0c\u6211\u4eec\u4e0d\u4ec5\u9700\u8981\u5728 writeExternal() \u65b9\u6cd5\uff08\u6ca1\u6709\u4efb\u4f55\u9ed8\u8ba4\u884c\u4e3a\u6765\u4e3a Externalizable \u5bf9\u8c61\u5199\u5165\u4efb\u4f55\u6210\u5458\u5bf9\u8c61\uff09\u4e2d\u5c06\u6765\u81ea\u5bf9\u8c61\u7684\u91cd\u8981\u4fe1\u606f\u5199\u5165\uff0c\u8fd8\u5fc5\u987b\u5728 readExternal() \u65b9\u6cd5\u4e2d\u6062\u590d\u6570\u636e\u3002\u8d77\u5148\uff0c\u53ef\u80fd\u4f1a\u6709\u4e00\u70b9\u8ff7\u60d1\uff0c\u56e0\u4e3a Externalizable \u5bf9\u8c61\u7684\u9ed8\u8ba4\u6784\u9020\u884c\u4e3a\u4f7f\u5176\u770b\u8d77\u6765\u4f3c\u4e4e\u50cf\u67d0\u79cd\u81ea\u52a8\u53d1\u751f\u7684\u5b58\u50a8\u4e0e\u6062\u590d\u64cd\u4f5c\u3002\u4f46\u5b9e\u9645\u4e0a\u5e76\u975e\u5982\u6b64\u3002"),(0,r.kt)("h3",{id:"transient-\u5173\u952e\u5b57"},"transient \u5173\u952e\u5b57"),(0,r.kt)("p",null,"\u5f53\u6211\u4eec\u5bf9\u5e8f\u5217\u5316\u8fdb\u884c\u63a7\u5236\u65f6\uff0c\u53ef\u80fd\u67d0\u4e2a\u7279\u5b9a\u5b50\u5bf9\u8c61\u4e0d\u60f3\u8ba9 Java \u7684\u5e8f\u5217\u5316\u673a\u5236\u81ea\u52a8\u4fdd\u5b58\u4e0e\u6062\u590d\u3002\u5982\u679c\u5b50\u5bf9\u8c61\u8868\u793a\u7684\u662f\u6211\u4eec\u4e0d\u5e0c\u671b\u5c06\u5176\u5e8f\u5217\u5316\u7684\u654f\u611f\u4fe1\u606f\uff08\u5982\u5bc6\u7801\uff09\uff0c\u901a\u5e38\u5c31\u4f1a\u9762\u4e34\u8fd9\u79cd\u60c5\u51b5\u3002\u5373\u4f7f\u5bf9\u8c61\u4e2d\u7684\u8fd9\u4e9b\u4fe1\u606f\u662f private\uff08\u79c1\u6709\uff09\u5c5e\u6027\uff0c\u4e00\u7ecf\u5e8f\u5217\u5316\u5904\u7406\uff0c\u4eba\u4eec\u5c31\u53ef\u4ee5\u901a\u8fc7\u8bfb\u53d6\u6587\u4ef6\u6216\u8005\u62e6\u622a\u7f51\u7edc\u4f20\u8f93\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u5230\u5b83\u3002"),(0,r.kt)("p",null,"\u6709\u4e00\u79cd\u529e\u6cd5\u53ef\u9632\u6b62\u5bf9\u8c61\u7684\u654f\u611f\u90e8\u5206\u88ab\u5e8f\u5217\u5316\uff0c\u5c31\u662f\u5c06\u7c7b\u5b9e\u73b0\u4e3a Externalizable\uff0c\u5982\u524d\u9762\u6240\u793a\u3002\u8fd9\u6837\u4e00\u6765\uff0c\u6ca1\u6709\u4efb\u4f55\u4e1c\u897f\u53ef\u4ee5\u81ea\u52a8\u5e8f\u5217\u5316\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728 writeExternal() \u5185\u90e8\u53ea\u5bf9\u6240\u9700\u90e8\u5206\u8fdb\u884c\u663e\u5f0f\u7684\u5e8f\u5217\u5316\u3002"),(0,r.kt)("p",null,'\u7136\u800c\uff0c\u5982\u679c\u6211\u4eec\u6b63\u5728\u64cd\u4f5c\u7684\u662f\u4e00\u4e2a Seralizable \u5bf9\u8c61\uff0c\u90a3\u4e48\u6240\u6709\u5e8f\u5217\u5316\u64cd\u4f5c\u90fd\u4f1a\u81ea\u52a8\u8fdb\u884c\u3002\u4e3a\u4e86\u80fd\u591f\u4e88\u4ee5\u63a7\u5236\uff0c\u53ef\u4ee5\u7528 transient\uff08\u77ac\u65f6\uff09\u5173\u952e\u5b57\u9010\u4e2a\u5b57\u6bb5\u5730\u5173\u95ed\u5e8f\u5217\u5316\uff0c\u5b83\u7684\u610f\u601d\u662f\u201c\u4e0d\u7528\u9ebb\u70e6\u4f60\u4fdd\u5b58\u6216\u6062\u590d\u6570\u636e\u2014\u2014\u6211\u81ea\u5df1\u4f1a\u5904\u7406\u7684"\u3002'),(0,r.kt)("p",null,"\u4f8b\u5982\uff0c\u5047\u8bbe\u67d0\u4e2a Logon \u5bf9\u8c61\u4fdd\u5b58\u67d0\u4e2a\u7279\u5b9a\u7684\u767b\u5f55\u4f1a\u8bdd\u4fe1\u606f\uff0c\u767b\u5f55\u7684\u5408\u6cd5\u6027\u901a\u8fc7\u6821\u9a8c\u4e4b\u540e\uff0c\u6211\u4eec\u60f3\u628a\u6570\u636e\u4fdd\u5b58\u4e0b\u6765\uff0c\u4f46\u4e0d\u5305\u62ec\u5bc6\u7801\u3002\u4e3a\u505a\u5230\u8fd9\u4e00\u70b9\uff0c\u6700\u7b80\u5355\u7684\u529e\u6cd5\u662f\u5b9e\u73b0 Serializable\uff0c\u5e76\u5c06 password \u5b57\u6bb5\u6807\u5fd7\u4e3a transient\uff0c\u4e0b\u9762\u662f\u5177\u4f53\u7684\u4ee3\u7801\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/Logon.java\n// Demonstrates the "transient" keyword\nimport java.util.concurrent.*;\nimport java.io.*;\nimport java.util.*;\nimport onjava.Nap;\npublic class Logon implements Serializable {\n    private Date date = new Date();\n    private String username;\n    private transient String password;\n    public Logon(String name, String pwd) {\n        username = name;\n        password = pwd;\n    }\n    @Override\n    public String toString() {\n        return "logon info: \\n username: " +\n                username + "\\n date: " + date +\n                "\\n password: " + password;\n    }\n    public static void main(String[] args) {\n        Logon a = new Logon("Hulk", "myLittlePony");\n        System.out.println("logon a = " + a);\n        try(\n                ObjectOutputStream o =\n                        new ObjectOutputStream(\n                                new FileOutputStream("Logon.dat"))\n        ) {\n            o.writeObject(a);\n        } catch(IOException e) {\n            throw new RuntimeException(e);\n        }\n        new Nap(1);\n// Now get them back:\n        try(\n                ObjectInputStream in = new ObjectInputStream(\n                        new FileInputStream("Logon.dat"))\n        ) {\n            System.out.println(\n                    "Recovering object at " + new Date());\n            a = (Logon)in.readObject();\n        } catch(IOException | ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n        System.out.println("logon a = " + a);\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"logon a = logon info:\nusername: Hulk\ndate: Tue May 09 06:07:47 MDT 2017\npassword: myLittlePony\nRecovering object at Tue May 09 06:07:49 MDT 2017\nlogon a = logon info:\nusername: Hulk\ndate: Tue May 09 06:07:47 MDT 2017\npassword: null\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0c\u5176\u4e2d\u7684 date \u548c username \u662f\u4e00\u822c\u7684\uff08\u4e0d\u662f transient \u7684\uff09\uff0c\u6240\u4ee5\u5b83\u4eec\u4f1a\u88ab\u81ea\u52a8\u5e8f\u5217\u5316\u3002\u800c password \u662f transient \u7684\uff0c\u6240\u4ee5\u4e0d\u4f1a\u88ab\u81ea\u52a8\u4fdd\u5b58\u5230\u78c1\u76d8\uff1b\u53e6\u5916\uff0c\u81ea\u52a8\u5e8f\u5217\u5316\u673a\u5236\u4e5f\u4e0d\u4f1a\u5c1d\u8bd5\u53bb\u6062\u590d\u5b83\u3002\u5f53\u5bf9\u8c61\u88ab\u6062\u590d\u65f6\uff0cpassword \u5c31\u4f1a\u53d8\u6210 null\u3002\u6ce8\u610f\uff0c\u867d\u7136 toString() \u662f\u7528\u91cd\u8f7d\u540e\u7684+\u8fd0\u7b97\u7b26\u6765\u8fde\u63a5 String \u5bf9\u8c61\uff0c\u4f46\u662f null \u5f15\u7528\u4f1a\u88ab\u81ea\u52a8\u8f6c\u6362\u6210\u5b57\u7b26\u4e32 null\u3002"),(0,r.kt)("p",null,"\u6211\u4eec\u8fd8\u53ef\u4ee5\u53d1\u73b0\uff1adate \u5b57\u6bb5\u88ab\u5b58\u50a8\u4e86\u5230\u78c1\u76d8\u5e76\u4ece\u78c1\u76d8\u4e0a\u88ab\u6062\u590d\u4e86\u51fa\u6765\uff0c\u800c\u4e14\u6ca1\u6709\u518d\u91cd\u65b0\u751f\u6210\u3002\u7531\u4e8e Externalizable \u5bf9\u8c61\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u4e0d\u4fdd\u5b58\u5b83\u4eec\u7684\u4efb\u4f55\u5b57\u6bb5\uff0c\u6240\u4ee5 transient \u5173\u952e\u5b57\u53ea\u80fd\u548c Serializable \u5bf9\u8c61\u4e00\u8d77\u4f7f\u7528\u3002"),(0,r.kt)("h3",{id:"externalizable-\u7684\u66ff\u4ee3\u65b9\u6cd5"},"Externalizable \u7684\u66ff\u4ee3\u65b9\u6cd5"),(0,r.kt)("p",null,"\u5982\u679c\u4e0d\u662f\u7279\u522b\u575a\u6301\u5b9e\u73b0 Externalizable \u63a5\u53e3\uff0c\u90a3\u4e48\u8fd8\u6709\u53e6\u4e00\u79cd\u65b9\u6cd5\u3002\u6211\u4eec\u53ef\u4ee5\u5b9e\u73b0 Serializable \u63a5\u53e3\uff0c\u5e76\u6dfb\u52a0\uff08\u6ce8\u610f\u6211\u8bf4\u7684\u662f\u201c\u6dfb\u52a0\u201d\uff0c\u800c\u975e\u201c\u8986\u76d6\u201d\u6216\u8005\u201c\u5b9e\u73b0\u201d\uff09\u540d\u4e3a writeObject() \u548c readObject() \u7684\u65b9\u6cd5\u3002\u8fd9\u6837\u4e00\u65e6\u5bf9\u8c61\u88ab\u5e8f\u5217\u5316\u6216\u8005\u88ab\u53cd\u5e8f\u5217\u5316\u8fd8\u539f\uff0c\u5c31\u4f1a\u81ea\u52a8\u5730\u5206\u522b\u8c03\u7528\u8fd9\u4e24\u4e2a\u65b9\u6cd5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u53ea\u8981\u6211\u4eec\u63d0\u4f9b\u4e86\u8fd9\u4e24\u4e2a\u65b9\u6cd5\uff0c\u5c31\u4f1a\u4f7f\u7528\u5b83\u4eec\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684\u5e8f\u5217\u5316\u673a\u5236\u3002"),(0,r.kt)("p",null,"\u8fd9\u4e9b\u65b9\u6cd5\u5fc5\u987b\u5177\u6709\u51c6\u786e\u7684\u65b9\u6cd5\u7279\u5f81\u7b7e\u540d\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"private void writeObject(ObjectOutputStream stream) throws IOException\n\nprivate void readObject(ObjectInputStream stream) throws IOException, ClassNotFoundException\n")),(0,r.kt)("p",null,"\u4ece\u8bbe\u8ba1\u7684\u89c2\u70b9\u6765\u770b\uff0c\u73b0\u5728\u4e8b\u60c5\u53d8\u5f97\u771f\u662f\u4e0d\u53ef\u601d\u8bae\u3002\u9996\u5148\uff0c\u6211\u4eec\u53ef\u80fd\u4f1a\u8ba4\u4e3a\u7531\u4e8e\u8fd9\u4e9b\u65b9\u6cd5\u4e0d\u662f\u57fa\u7c7b\u6216\u8005 Serializable \u63a5\u53e3\u7684\u4e00\u90e8\u5206\uff0c\u6240\u4ee5\u5e94\u8be5\u5728\u5b83\u4eec\u81ea\u5df1\u7684\u63a5\u53e3\u4e2d\u8fdb\u884c\u5b9a\u4e49\u3002\u4f46\u662f\u6ce8\u610f\u5b83\u4eec\u88ab\u5b9a\u4e49\u6210\u4e86 private\uff0c\u8fd9\u610f\u5473\u7740\u5b83\u4eec\u4ec5\u80fd\u88ab\u8fd9\u4e2a\u7c7b\u7684\u5176\u4ed6\u6210\u5458\u8c03\u7528\u3002\u7136\u800c\uff0c\u5b9e\u9645\u4e0a\u6211\u4eec\u5e76\u6ca1\u6709\u4ece\u8fd9\u4e2a\u7c7b\u7684\u5176\u4ed6\u65b9\u6cd5\u4e2d\u8c03\u7528\u5b83\u4eec\uff0c\u800c\u662f ObjectOutputStream \u548c ObjectInputStream \u5bf9\u8c61\u7684 writeObject() \u548c readobject() \u65b9\u6cd5\u8c03\u7528\u4f60\u7684\u5bf9\u8c61\u7684 writeObject() \u548c readObject() \u65b9\u6cd5\uff08\u6ce8\u610f\u5173\u4e8e\u8fd9\u91cc\u7528\u5230\u7684\u76f8\u540c\u65b9\u6cd5\u540d\uff0c\u6211\u5c3d\u91cf\u6291\u5236\u4f4f\u4e0d\u53bb\u8c29\u9a82\u3002\u4e00\u53e5\u8bdd\uff1a\u6df7\u4e71\uff09\u3002\u8bfb\u8005\u53ef\u80fd\u60f3\u77e5\u9053 ObjectOutputStream \u548c ObjectInputStream \u5bf9\u8c61\u662f\u600e\u6837\u8bbf\u95ee\u4f60\u7684\u7c7b\u4e2d\u7684 private \u65b9\u6cd5\u7684\u3002\u6211\u4eec\u53ea\u80fd\u5047\u8bbe\u8fd9\u6b63\u662f\u5e8f\u5217\u5316\u795e\u5947\u7684\u4e00\u90e8\u5206\u3002"),(0,r.kt)("p",null,"\u5728\u63a5\u53e3\u4e2d\u5b9a\u4e49\u7684\u6240\u6709\u4e1c\u897f\u90fd\u81ea\u52a8\u662f public \u7684\uff0c\u56e0\u6b64\u5982\u679c writeObject() \u548c readObject() \u5fc5\u987b\u662f private \u7684\uff0c\u90a3\u4e48\u5b83\u4eec\u4e0d\u4f1a\u662f\u63a5\u53e3\u7684\u4e00\u90e8\u5206\u3002\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u8981\u5b8c\u5168\u9075\u5faa\u5176\u65b9\u6cd5\u7279\u5f81\u7b7e\u540d\uff0c\u6240\u4ee5\u5176\u6548\u679c\u5c31\u548c\u5b9e\u73b0\u4e86\u63a5\u53e3\u4e00\u6837\u3002"),(0,r.kt)("p",null,"\u5728\u8c03\u7528 ObjectOutputStream.writeObject() \u65f6\uff0c\u4f1a\u68c0\u67e5\u6240\u4f20\u9012\u7684 Serializable \u5bf9\u8c61\uff0c\u770b\u770b\u662f\u5426\u5b9e\u73b0\u4e86\u5b83\u81ea\u5df1\u7684 writeObject()\u3002\u5982\u679c\u662f\u8fd9\u6837\uff0c\u5c31\u8df3\u8fc7\u6b63\u5e38\u7684\u5e8f\u5217\u5316\u8fc7\u7a0b\u5e76\u8c03\u7528\u5b83\u7684 writeObiect()\u3002readObject() \u7684\u60c5\u5f62\u4e0e\u6b64\u76f8\u540c\u3002"),(0,r.kt)("p",null,"\u8fd8\u6709\u53e6\u5916\u4e00\u4e2a\u6280\u5de7\u3002\u5728\u4f60\u7684 writeObject() \u5185\u90e8\uff0c\u53ef\u4ee5\u8c03\u7528 defaultWriteObject() \u6765\u9009\u62e9\u6267\u884c\u9ed8\u8ba4\u7684 writeObject()\u3002\u7c7b\u4f3c\u5730\uff0c\u5728 readObject() \u5185\u90e8\uff0c\u6211\u4eec\u53ef\u4ee5\u8c03\u7528 defaultReadObject()\uff0c\u4e0b\u9762\u8fd9\u4e2a\u7b80\u5355\u7684\u4f8b\u5b50\u6f14\u793a\u4e86\u5982\u4f55\u5bf9\u4e00\u4e2a Serializable \u5bf9\u8c61\u7684\u5b58\u50a8\u4e0e\u6062\u590d\u8fdb\u884c\u63a7\u5236\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/SerialCtl.java\n// Controlling serialization by adding your own\n// writeObject() and readObject() methods\nimport java.io.*;\npublic class SerialCtl implements Serializable {\n    private String a;\n    private transient String b;\n    public SerialCtl(String aa, String bb) {\n        a = "Not Transient: " + aa;\n        b = "Transient: " + bb;\n    }\n    @Override\n    public String toString() { return a + "\\n" + b; }\n    private void writeObject(ObjectOutputStream stream)\n            throws IOException {\n        stream.defaultWriteObject();\n        stream.writeObject(b);\n    }\n    private void readObject(ObjectInputStream stream)\n            throws IOException, ClassNotFoundException {\n        stream.defaultReadObject();\n        b = (String)stream.readObject();\n    }\n    public static void main(String[] args) {\n        SerialCtl sc = new SerialCtl("Test1", "Test2");\n        System.out.println("Before:\\n" + sc);\n        try (\n                ByteArrayOutputStream buf =\n                        new ByteArrayOutputStream();\n                ObjectOutputStream o =\n                        new ObjectOutputStream(buf);\n        ) {\n            o.writeObject(sc);\n// Now get it back:\n            try (\n                    ObjectInputStream in =\n                            new ObjectInputStream(\n                                    new ByteArrayInputStream(\n                                            buf.toByteArray()));\n            ) {\n                SerialCtl sc2 = (SerialCtl)in.readObject();\n                System.out.println("After:\\n" + sc2);\n            }\n        } catch(IOException | ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Before:\nNot Transient: Test1\nTransient: Test2\nAfter:\nNot Transient: Test1\nTransient: Test2\n")),(0,r.kt)("p",null,"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6709\u4e00\u4e2a String \u5b57\u6bb5\u662f\u666e\u901a\u5b57\u6bb5\uff0c\u800c\u53e6\u4e00\u4e2a\u662f transient \u5b57\u6bb5\uff0c\u7528\u6765\u8bc1\u660e\u975e transient \u5b57\u6bb5\u7531 defaultWriteObject() \u65b9\u6cd5\u4fdd\u5b58\uff0c\u800c transient \u5b57\u6bb5\u5fc5\u987b\u5728\u7a0b\u5e8f\u4e2d\u660e\u786e\u4fdd\u5b58\u548c\u6062\u590d\u3002\u5b57\u6bb5\u662f\u5728\u6784\u9020\u5668\u5185\u90e8\u800c\u4e0d\u662f\u5728\u5b9a\u4e49\u5904\u8fdb\u884c\u521d\u59cb\u5316\u7684\uff0c\u4ee5\u6b64\u53ef\u4ee5\u8bc1\u5b9e\u5b83\u4eec\u5728\u53cd\u5e8f\u5217\u5316\u8fd8\u539f\u671f\u95f4\u6ca1\u6709\u88ab\u4e00\u4e9b\u81ea\u52a8\u5316\u673a\u5236\u521d\u59cb\u5316\u3002"),(0,r.kt)("p",null,"\u5982\u679c\u6211\u4eec\u6253\u7b97\u4f7f\u7528\u9ed8\u8ba4\u673a\u5236\u5199\u5165\u5bf9\u8c61\u7684\u975e transient \u90e8\u5206\uff0c\u90a3\u4e48\u5fc5\u987b\u8c03\u7528 defaultwriteObject() \u4f5c\u4e3a writeObject() \u4e2d\u7684\u7b2c\u4e00\u4e2a\u64cd\u4f5c\uff0c\u5e76\u8ba9 defaultReadObject() \u4f5c\u4e3a readObject() \u4e2d\u7684\u7b2c\u4e00\u4e2a\u64cd\u4f5c\u3002\u8fd9\u4e9b\u90fd\u662f\u5947\u602a\u7684\u65b9\u6cd5\u8c03\u7528\u3002\u4f8b\u5982\uff0c\u5982\u679c\u6211\u4eec\u6b63\u5728\u4e3a ObjectOutputStream \u8c03\u7528 defaultWriteObject() \u4e14\u6ca1\u6709\u4f20\u9012\u4efb\u4f55\u53c2\u6570\uff0c\u7136\u800c\u4e0d\u77e5\u4f55\u6545\u5b83\u5374\u53ef\u4ee5\u8fd0\u884c\uff0c\u5e76\u4e14\u77e5\u9053\u5bf9\u8c61\u7684\u5f15\u7528\u4ee5\u53ca\u5982\u4f55\u5199\u5165\u975e transient \u90e8\u5206\u3002\u771f\u662f\u5947\u602a\u4e4b\u6781\u3002"),(0,r.kt)("p",null,"\u5bf9 transient \u5bf9\u8c61\u7684\u5b58\u50a8\u548c\u6062\u590d\u4f7f\u7528\u4e86\u6211\u4eec\u6bd4\u8f83\u719f\u6089\u7684\u4ee3\u7801\u3002\u8bf7\u518d\u8003\u8651\u4e00\u4e0b\u5728\u8fd9\u91cc\u6240\u53d1\u751f\u7684\u4e8b\u60c5\u3002\u5728 main0\uff09\u4e2d\uff0c\u521b\u5efa SerialCtl \u5bf9\u8c61\uff0c\u7136\u540e\u5c06\u5176\u5e8f\u5217\u5316\u5230 ObjectOutputStream\uff08\u6ce8\u610f\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u7684\u662f\u7f13\u51b2\u533a\u800c\u4e0d\u662f\u6587\u4ef6-\u8fd9\u5bf9\u4e8e ObjectOutputStream \u6765\u8bf4\u662f\u5b8c\u5168\u4e00\u6837\u7684\uff09\u3002\u5e8f\u5217\u5316\u53d1\u751f\u5728\u4e0b\u9762\u8fd9\u884c\u4ee3\u7801\u5f53\u4e2d"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"o.writeObject(sc);\n")),(0,r.kt)("p",null,"writeObject() \u65b9\u6cd5\u5fc5\u987b\u68c0\u67e5 sc\uff0c\u5224\u65ad\u5b83\u662f\u5426\u62e5\u6709\u81ea\u5df1\u7684 writeObject() \u65b9\u6cd5\uff08\u4e0d\u662f\u68c0\u67e5\u63a5\u53e3\u2014\u2014\u8fd9\u91cc\u6839\u672c\u5c31\u6ca1\u6709\u63a5\u53e3\uff0c\u4e5f\u4e0d\u662f\u68c0\u67e5\u7c7b\u7684\u7c7b\u578b\uff0c\u800c\u662f\u5229\u7528\u53cd\u5c04\u6765\u771f\u6b63\u5730\u641c\u7d22\u65b9\u6cd5\uff09\u3002\u5982\u679c\u6709\uff0c\u90a3\u4e48\u5c31\u4f1a\u4f7f\u7528\u5b83\u3002\u5bf9 readObject() \u4e5f\u91c7\u7528\u4e86\u7c7b\u4f3c\u7684\u65b9\u6cd5\u3002\u6216\u8bb8\u8fd9\u662f\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u7684\u552f\u4e00\u5207\u5b9e\u53ef\u884c\u7684\u65b9\u6cd5\uff0c\u4f46\u5b83\u786e\u5b9e\u6709\u70b9\u53e4\u602a\u3002"),(0,r.kt)("h3",{id:"\u7248\u672c\u63a7\u5236"},"\u7248\u672c\u63a7\u5236"),(0,r.kt)("p",null,"\u6709\u65f6\u53ef\u80fd\u60f3\u8981\u6539\u53d8\u53ef\u5e8f\u5217\u5316\u7c7b\u7684\u7248\u672c\uff08\u6bd4\u5982\u6e90\u7c7b\u7684\u5bf9\u8c61\u53ef\u80fd\u4fdd\u5b58\u5728\u6570\u636e\u5e93\u4e2d\uff09\u3002\u867d\u7136 Java \u652f\u6301\u8fd9\u79cd\u505a\u6cd5\uff0c\u4f46\u662f\u4f60\u53ef\u80fd\u53ea\u5728\u7279\u6b8a\u7684\u60c5\u51b5\u4e0b\u624d\u8fd9\u6837\u505a\uff0c\u6b64\u5916\uff0c\u8fd8\u9700\u8981\u5bf9\u5b83\u6709\u76f8\u5f53\u6df1\u7a0b\u5ea6\u7684\u4e86\u89e3\uff08\u5728\u8fd9\u91cc\u6211\u4eec\u5c31\u4e0d\u518d\u8bd5\u56fe\u8fbe\u5230\u8fd9\u4e00\u70b9\uff09\u3002\u4ece ",(0,r.kt)("a",{parentName:"p",href:"http://java.oracle.com"},"http://java.oracle.com")," \u4e0b\u7684 JDK \u6587\u6863\u4e2d\u5bf9\u8fd9\u4e00\u4e3b\u9898\u8fdb\u884c\u4e86\u975e\u5e38\u5f7b\u5e95\u7684\u8bba\u8ff0\u3002"),(0,r.kt)("h2",{id:"\u4f7f\u7528\u6301\u4e45\u5316"},"\u4f7f\u7528\u6301\u4e45\u5316"),(0,r.kt)("p",null,"\u4e00\u4e2a\u6bd4\u8f83\u8bf1\u4eba\u7684\u4f7f\u7528\u5e8f\u5217\u5316\u6280\u672f\u7684\u60f3\u6cd5\u662f\uff1a\u5b58\u50a8\u7a0b\u5e8f\u7684\u4e00\u4e9b\u72b6\u6001\uff0c\u4ee5\u4fbf\u6211\u4eec\u968f\u540e\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u7a0b\u5e8f\u6062\u590d\u5230\u5f53\u524d\u72b6\u6001\u3002\u4f46\u662f\u5728\u6211\u4eec\u80fd\u591f\u8fd9\u6837\u505a\u4e4b\u524d\uff0c\u5fc5\u987b\u56de\u7b54\u51e0\u4e2a\u95ee\u9898\u3002\u5982\u679c\u6211\u4eec\u5c06\u4e24\u4e2a\u5bf9\u8c61-\u5b83\u4eec\u90fd\u5177\u6709\u6307\u5411\u7b2c\u4e09\u4e2a\u5bf9\u8c61\u7684\u5f15\u7528-\u8fdb\u884c\u5e8f\u5217\u5316\uff0c\u4f1a\u53d1\u751f\u4ec0\u4e48\u60c5\u51b5\uff1f\u5f53\u6211\u4eec\u4ece\u5b83\u4eec\u7684\u5e8f\u5217\u5316\u72b6\u6001\u6062\u590d\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u65f6\uff0c\u7b2c\u4e09\u4e2a\u5bf9\u8c61\u4f1a\u53ea\u51fa\u73b0\u4e00\u6b21\u5417\uff1f\u5982\u679c\u5c06\u8fd9\u4e24\u4e2a\u5bf9\u8c61\u5e8f\u5217\u5316\u6210\u72ec\u7acb\u7684\u6587\u4ef6\uff0c\u7136\u540e\u5728\u4ee3\u7801\u7684\u4e0d\u540c\u90e8\u5206\u5bf9\u5b83\u4eec\u8fdb\u884c\u53cd\u5e8f\u5217\u5316\u8fd8\u539f\uff0c\u53c8\u4f1a\u600e\u6837\u5462\uff1f"),(0,r.kt)("p",null,"\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u8bf4\u660e\u4e86\u4e0a\u8ff0\u95ee\u9898\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/MyWorld.java\nimport java.io.*;\nimport java.util.*;\nclass House implements Serializable {}\nclass Animal implements Serializable {\n    private String name;\n    private House preferredHouse;\n    Animal(String nm, House h) {\n        name = nm;\n        preferredHouse = h;\n    }\n    @Override\n    public String toString() {\n        return name + "[" + super.toString() +\n                "], " + preferredHouse + "\\n";\n    }\n}\npublic class MyWorld {\n    public static void main(String[] args) {\n        House house = new House();\n        List<Animal> animals = new ArrayList<>();\n        animals.add(\n                new Animal("Bosco the dog", house));\n        animals.add(\n                new Animal("Ralph the hamster", house));\n        animals.add(\n                new Animal("Molly the cat", house));\n        System.out.println("animals: " + animals);\n        try(\n                ByteArrayOutputStream buf1 =\n                        new ByteArrayOutputStream();\n                ObjectOutputStream o1 =\n                        new ObjectOutputStream(buf1)\n        ) {\n            o1.writeObject(animals);\n            o1.writeObject(animals); // Write a 2nd set\n// Write to a different stream:\n            try(\n                    ByteArrayOutputStream buf2 = new ByteArrayOutputStream();\n                    ObjectOutputStream o2 = new ObjectOutputStream(buf2)\n            ) {\n                o2.writeObject(animals);\n// Now get them back:\n                try(\n                        ObjectInputStream in1 =\n                                new ObjectInputStream(\n                                        new ByteArrayInputStream(\n                                                buf1.toByteArray()));\n                        ObjectInputStream in2 =\n                                new ObjectInputStream(\n                                        new ByteArrayInputStream(\n                                                buf2.toByteArray()))\n                ) {\n                    List\n                            animals1 = (List)in1.readObject(),\n                            animals2 = (List)in1.readObject(),\n                            animals3 = (List)in2.readObject();\n                    System.out.println(\n                            "animals1: " + animals1);\n                    System.out.println(\n                            "animals2: " + animals2);\n                    System.out.println(\n                            "animals3: " + animals3);\n                }\n            }\n        } catch(IOException | ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"animals: [Bosco the dog[Animal@15db9742],\nHouse@6d06d69c\n, Ralph the hamster[Animal@7852e922], House@6d06d69c\n, Molly the cat[Animal@4e25154f], House@6d06d69c\n]\nanimals1: [Bosco the dog[Animal@7ba4f24f],\nHouse@3b9a45b3\n, Ralph the hamster[Animal@7699a589], House@3b9a45b3\n, Molly the cat[Animal@58372a00], House@3b9a45b3\n]\nanimals2: [Bosco the dog[Animal@7ba4f24f],\nHouse@3b9a45b3\n, Ralph the hamster[Animal@7699a589], House@3b9a45b3\n, Molly the cat[Animal@58372a00], House@3b9a45b3\n]\nanimals3: [Bosco the dog[Animal@4dd8dc3],\nHouse@6d03e736\n, Ralph the hamster[Animal@568db2f2], House@6d03e736\n, Molly the cat[Animal@378bf509], House@6d03e736\n]\n")),(0,r.kt)("p",null,'\u8fd9\u91cc\u6709\u4e00\u4ef6\u6709\u8da3\u7684\u4e8b\uff1a\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u5b57\u8282\u6570\u7ec4\u6765\u4f7f\u7528\u5bf9\u8c61\u5e8f\u5217\u5316\uff0c\u4ece\u800c\u5b9e\u73b0\u5bf9\u4efb\u4f55\u53ef Serializable \u5bf9\u8c61\u7684\u201c\u6df1\u5ea6\u590d\u5236"\uff08deep copy\uff09\u2014\u2014 \u6df1\u5ea6\u590d\u5236\u610f\u5473\u7740\u6211\u4eec\u590d\u5236\u7684\u662f\u6574\u4e2a\u5bf9\u8c61\u7f51\uff0c\u800c\u4e0d\u4ec5\u4ec5\u662f\u57fa\u672c\u5bf9\u8c61\u53ca\u5176\u5f15\u7528\u3002\u590d\u5236\u5bf9\u8c61\u5c06\u5728\u672c\u4e66\u7684 ',(0,r.kt)("a",{parentName:"p",href:"./Appendix-Passing-and-Returning-Objects"},"\u9644\u5f55\uff1a\u4f20\u9012\u548c\u8fd4\u56de\u5bf9\u8c61")," \u4e00\u7ae0\u4e2d\u8fdb\u884c\u6df1\u5165\u5730\u63a2\u8ba8\u3002"),(0,r.kt)("p",null,"\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0cAnimal \u5bf9\u8c61\u5305\u542b\u6709 House \u7c7b\u578b\u7684\u5b57\u6bb5\u3002\u5728 main() \u65b9\u6cd5\u4e2d\uff0c\u521b\u5efa\u4e86\u4e00\u4e2a Animal \u5217\u8868\u5e76\u5c06\u5176\u4e24\u6b21\u5e8f\u5217\u5316\uff0c\u5206\u522b\u9001\u81f3\u4e0d\u540c\u7684\u6d41\u3002\u5f53\u5176\u88ab\u53cd\u5e8f\u5217\u5316\u8fd8\u539f\u5e76\u88ab\u6253\u5370\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u6240\u793a\u7684\u6267\u884c\u67d0\u6b21\u8fd0\u884c\u540e\u7684\u7ed3\u679c\uff08\u6bcf\u6b21\u8fd0\u884c\u65f6\uff0c\u5bf9\u8c61\u5c06\u4f1a\u5904\u5728\u4e0d\u540c\u7684\u5185\u5b58\u5730\u5740\uff09\u3002"),(0,r.kt)("p",null,"\u5f53\u7136\uff0c\u6211\u4eec\u671f\u671b\u8fd9\u4e9b\u53cd\u5e8f\u5217\u5316\u8fd8\u539f\u540e\u7684\u5bf9\u8c61\u5730\u5740\u4e0e\u539f\u6765\u7684\u5730\u5740\u4e0d\u540c\u3002\u4f46\u8bf7\u6ce8\u610f\uff0c\u5728 animals1 \u548c animals2 \u4e2d\u5374\u51fa\u73b0\u4e86\u76f8\u540c\u7684\u5730\u5740\uff0c\u5305\u62ec\u4e8c\u8005\u5171\u4eab\u7684\u90a3\u4e2a\u6307\u5411 House \u5bf9\u8c61\u7684\u5f15\u7528\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5f53\u6062\u590d animals3 \u65f6\uff0c\u7cfb\u7edf\u65e0\u6cd5\u77e5\u9053\u53e6\u4e00\u4e2a\u6d41\u5185\u7684\u5bf9\u8c61\u662f\u7b2c\u4e00\u4e2a\u6d41\u5185\u7684\u5bf9\u8c61\u7684\u522b\u540d\uff0c\u56e0\u6b64\u5b83\u4f1a\u4ea7\u751f\u51fa\u5b8c\u5168\u4e0d\u540c\u7684\u5bf9\u8c61\u7f51\u3002"),(0,r.kt)("p",null,"\u53ea\u8981\u5c06\u4efb\u4f55\u5bf9\u8c61\u5e8f\u5217\u5316\u5230\u5355\u4e00\u6d41\u4e2d\uff0c\u5c31\u53ef\u4ee5\u6062\u590d\u51fa\u4e0e\u6211\u4eec\u5199\u51fa\u65f6\u4e00\u6837\u7684\u5bf9\u8c61\u7f51\uff0c\u5e76\u4e14\u6ca1\u6709\u4efb\u4f55\u610f\u5916\u91cd\u590d\u590d\u5236\u51fa\u7684\u5bf9\u8c61\u3002\u5f53\u7136\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u5199\u51fa\u7b2c\u4e00\u4e2a\u5bf9\u8c61\u548c\u5199\u51fa\u6700\u540e\u4e00\u4e2a\u5bf9\u8c61\u671f\u95f4\u6539\u53d8\u8fd9\u4e9b\u5bf9\u8c61\u7684\u72b6\u6001\uff0c\u4f46\u662f\u8fd9\u662f\u6211\u4eec\u81ea\u5df1\u7684\u4e8b\uff0c\u65e0\u8bba\u5bf9\u8c61\u5728\u88ab\u5e8f\u5217\u5316\u65f6\u5904\u4e8e\u4ec0\u4e48\u72b6\u6001\uff08\u65e0\u8bba\u5b83\u4eec\u548c\u5176\u4ed6\u5bf9\u8c61\u6709\u4ec0\u4e48\u6837\u7684\u8fde\u63a5\u5173\u7cfb\uff09\uff0c\u5b83\u4eec\u90fd\u53ef\u4ee5\u88ab\u5199\u51fa\u3002"),(0,r.kt)("p",null,"\u6700\u5b89\u5168\u7684\u505a\u6cd5\u662f\u5c06\u5176\u4f5c\u4e3a\u201c\u539f\u5b50\u201d\u64cd\u4f5c\u8fdb\u884c\u5e8f\u5217\u5316\u3002\u5982\u679c\u6211\u4eec\u5e8f\u5217\u5316\u4e86\u67d0\u4e9b\u4e1c\u897f\uff0c\u518d\u53bb\u505a\u5176\u4ed6\u4e00\u4e9b\u5de5\u4f5c\uff0c\u518d\u6765\u5e8f\u5217\u5316\u66f4\u591a\u7684\u4e1c\u897f\uff0c\u5982\u6b64\u7b49\u7b49\uff0c\u90a3\u4e48\u5c06\u65e0\u6cd5\u5b89\u5168\u5730\u4fdd\u5b58\u7cfb\u7edf\u72b6\u6001\u3002\u53d6\u800c\u4ee3\u4e4b\u7684\u662f\uff0c\u5c06\u6784\u6210\u7cfb\u7edf\u72b6\u6001\u7684\u6240\u6709\u5bf9\u8c61\u90fd\u7f6e\u5165\u5355\u4e00\u5bb9\u5668\u5185\uff0c\u5e76\u5728\u4e00\u4e2a\u64cd\u4f5c\u4e2d\u5c06\u8be5\u5bb9\u5668\u76f4\u63a5\u5199\u51fa\u3002\u7136\u540e\u540c\u6837\u53ea\u9700\u4e00\u6b21\u65b9\u6cd5\u8c03\u7528\uff0c\u5373\u53ef\u4ee5\u5c06\u5176\u6062\u590d\u3002"),(0,r.kt)("p",null,"\u4e0b\u9762\u8fd9\u4e2a\u4f8b\u5b50\u662f\u4e00\u4e2a\u60f3\u8c61\u7684\u8ba1\u7b97\u673a\u8f85\u52a9\u8bbe\u8ba1\uff08CAD\uff09\u7cfb\u7edf\uff0c\u8be5\u4f8b\u6f14\u793a\u4e86\u8fd9\u4e00\u65b9\u6cd5\u3002\u6b64\u5916\uff0c\u5b83\u8fd8\u5f15\u5165\u4e86 static \u5b57\u6bb5\u7684\u95ee\u9898\uff1a\u5982\u679c\u6211\u4eec\u67e5\u770b JDK \u6587\u6863\uff0c\u5c31\u4f1a\u53d1\u73b0 Class \u662f Serializable \u7684\uff0c\u56e0\u6b64\u53ea\u9700\u76f4\u63a5\u5bf9 Class \u5bf9\u8c61\u5e8f\u5217\u5316\uff0c\u5c31\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u4fdd\u5b58 static \u5b57\u6bb5\u3002\u5728\u4efb\u4f55\u60c5\u51b5\u4e0b\uff0c\u8fd9\u90fd\u662f\u4e00\u79cd\u660e\u667a\u7684\u505a\u6cd5\u3002"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/AStoreCADState.java\n// Saving the state of a fictitious CAD system\nimport java.io.*;\nimport java.util.*;\nimport java.util.stream.*;\nenum Color { RED, BLUE, GREEN }\nabstract class Shape implements Serializable {\n    private int xPos, yPos, dimension;\n    private static Random rand = new Random(47);\n    private static int counter = 0;\n    public abstract void setColor(Color newColor);\n    public abstract Color getColor();\n    Shape(int xVal, int yVal, int dim) {\n        xPos = xVal;\n        yPos = yVal;\n        dimension = dim;\n    }\n    public String toString() {\n        return getClass() + "color[" + getColor() +\n                "] xPos[" + xPos + "] yPos[" + yPos +\n                "] dim[" + dimension + "]\\n";\n    }\n    public static Shape randomFactory() {\n        int xVal = rand.nextInt(100);\n        int yVal = rand.nextInt(100);\n        int dim = rand.nextInt(100);\n        switch(counter++ % 3) {\n            default:\n            case 0: return new Circle(xVal, yVal, dim);\n            case 1: return new Square(xVal, yVal, dim);\n            case 2: return new Line(xVal, yVal, dim);\n        }\n    }\n}\nclass Circle extends Shape {\n    private static Color color = Color.RED;\n    Circle(int xVal, int yVal, int dim) {\n        super(xVal, yVal, dim);\n    }\n    public void setColor(Color newColor) {\n        color = newColor;\n    }\n    public Color getColor() { return color; }\n}\nclass Square extends Shape {\n    private static Color color = Color.RED;\n    Square(int xVal, int yVal, int dim) {\n        super(xVal, yVal, dim);\n    }\n    public void setColor(Color newColor) {\n        color = newColor;\n    }\n    public Color getColor() { return color; }\n}\nclass Line extends Shape {\n    private static Color color = Color.RED;\n    public static void\n    serializeStaticState(ObjectOutputStream os)\n            throws IOException { os.writeObject(color); }\n    public static void\n    deserializeStaticState(ObjectInputStream os)\n            throws IOException, ClassNotFoundException {\n        color = (Color)os.readObject();\n    }\n    Line(int xVal, int yVal, int dim) {\n        super(xVal, yVal, dim);\n    }\n    public void setColor(Color newColor) {\n        color = newColor;\n    }\n    public Color getColor() { return color; }\n}\npublic class AStoreCADState {\n    public static void main(String[] args) {\n        List<Class<? extends Shape>> shapeTypes =\n                Arrays.asList(\n                        Circle.class, Square.class, Line.class);\n        List<Shape> shapes = IntStream.range(0, 10)\n                .mapToObj(i -> Shape.randomFactory())\n                .collect(Collectors.toList());\n        // Set all the static colors to GREEN:\n        shapes.forEach(s -> s.setColor(Color.GREEN));\n        // Save the state vector:\n        try(\n                ObjectOutputStream out =\n                        new ObjectOutputStream(\n                                new FileOutputStream("CADState.dat"))\n        ) {\n            out.writeObject(shapeTypes);\n            Line.serializeStaticState(out);\n            out.writeObject(shapes);\n        } catch(IOException e) {\n            throw new RuntimeException(e);\n        }\n        // Display the shapes:\n        System.out.println(shapes);\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"[class Circlecolor[GREEN] xPos[58] yPos[55] dim[93]\n, class Squarecolor[GREEN] xPos[61] yPos[61] dim[29]\n, class Linecolor[GREEN] xPos[68] yPos[0] dim[22]\n, class Circlecolor[GREEN] xPos[7] yPos[88] dim[28]\n, class Squarecolor[GREEN] xPos[51] yPos[89] dim[9]\n, class Linecolor[GREEN] xPos[78] yPos[98] dim[61]\n, class Circlecolor[GREEN] xPos[20] yPos[58] dim[16]\n, class Squarecolor[GREEN] xPos[40] yPos[11] dim[22]\n, class Linecolor[GREEN] xPos[4] yPos[83] dim[6]\n, class Circlecolor[GREEN] xPos[75] yPos[10] dim[42]\n]\n")),(0,r.kt)("p",null,"Shape \u7c7b\u5b9e\u73b0\u4e86 Serializable\uff0c\u6240\u4ee5\u4efb\u4f55\u81ea Shape \u7ee7\u627f\u7684\u7c7b\u4e5f\u90fd\u4f1a\u81ea\u52a8\u662f Serializable \u7684\u3002\u6bcf\u4e2a Shape \u90fd\u542b\u6709\u6570\u636e\uff0c\u800c\u4e14\u6bcf\u4e2a\u6d3e\u751f\u81ea Shape \u7684\u7c7b\u90fd\u5305\u542b\u4e00\u4e2a static \u5b57\u6bb5\uff0c\u7528\u6765\u786e\u5b9a\u5404\u79cd Shape \u7c7b\u578b\u7684\u989c\u8272\uff08\u5982\u679c\u5c06 static \u5b57\u6bb5\u7f6e\u5165\u57fa\u7c7b\uff0c\u53ea\u4f1a\u4ea7\u751f\u4e00\u4e2a static \u5b57\u6bb5\uff0c\u56e0\u4e3a static \u5b57\u6bb5\u4e0d\u80fd\u5728\u6d3e\u751f\u7c7b\u4e2d\u590d\u5236\uff09\u3002\u53ef\u5bf9\u57fa\u7c7b\u4e2d\u7684\u65b9\u6cd5\u8fdb\u884c\u91cd\u8f7d\uff0c\u4ee5\u4fbf\u4e3a\u4e0d\u540c\u7684\u7c7b\u578b\u8bbe\u7f6e\u989c\u8272\uff08static \u65b9\u6cd5\u4e0d\u4f1a\u52a8\u6001\u7ed1\u5b9a\uff0c\u6240\u4ee5\u8fd9\u4e9b\u90fd\u662f\u666e\u901a\u7684\u65b9\u6cd5\uff09\u3002\u6bcf\u6b21\u8c03\u7528 randomFactory() \u65b9\u6cd5\u65f6\uff0c\u5b83\u90fd\u4f1a\u4f7f\u7528\u4e0d\u540c\u7684\u968f\u673a\u6570\u4f5c\u4e3a Shape \u7684\u6570\u636e\uff0c\u4ece\u800c\u521b\u5efa\u4e0d\u540c\u7684 Shape\u3002"),(0,r.kt)("p",null,"\u5728 main() \u4e2d\uff0c\u4e00\u4e2a ArrayList \u7528\u4e8e\u4fdd\u5b58 Class \u5bf9\u8c61\uff0c\u800c\u53e6\u4e00\u4e2a\u7528\u4e8e\u4fdd\u5b58\u51e0\u4f55\u5f62\u72b6\u3002"),(0,r.kt)("p",null,"\u6062\u590d\u5bf9\u8c61\u76f8\u5f53\u76f4\u89c2\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/RecoverCADState.java\n// Restoring the state of the fictitious CAD system\n// {RunFirst: AStoreCADState}\nimport java.io.*;\nimport java.util.*;\npublic class RecoverCADState {\n    @SuppressWarnings("unchecked")\n    public static void main(String[] args) {\n        try(\n                ObjectInputStream in =\n                        new ObjectInputStream(\n                                new FileInputStream("CADState.dat"))\n        ) {\n// Read in the same order they were written:\n            List<Class<? extends Shape>> shapeTypes =\n                    (List<Class<? extends Shape>>)in.readObject();\n            Line.deserializeStaticState(in);\n            List<Shape> shapes =\n                    (List<Shape>)in.readObject();\n            System.out.println(shapes);\n        } catch(IOException | ClassNotFoundException e) {\n            throw new RuntimeException(e);\n        }\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},"[class Circlecolor[RED] xPos[58] yPos[55] dim[93]\n, class Squarecolor[RED] xPos[61] yPos[61] dim[29]\n, class Linecolor[GREEN] xPos[68] yPos[0] dim[22]\n, class Circlecolor[RED] xPos[7] yPos[88] dim[28]\n, class Squarecolor[RED] xPos[51] yPos[89] dim[9]\n, class Linecolor[GREEN] xPos[78] yPos[98] dim[61]\n, class Circlecolor[RED] xPos[20] yPos[58] dim[16]\n, class Squarecolor[RED] xPos[40] yPos[11] dim[22]\n, class Linecolor[GREEN] xPos[4] yPos[83] dim[6]\n, class Circlecolor[RED] xPos[75] yPos[10] dim[42]\n]\n")),(0,r.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\uff0cxPos\uff0cyPos \u4ee5\u53ca dim \u7684\u503c\u90fd\u88ab\u6210\u529f\u5730\u4fdd\u5b58\u548c\u6062\u590d\u4e86\uff0c\u4f46\u662f\u5bf9 static \u4fe1\u606f\u7684\u8bfb\u53d6\u5374\u51fa\u73b0\u4e86\u95ee\u9898\u3002\u6240\u6709\u8bfb\u56de\u7684\u989c\u8272\u5e94\u8be5\u90fd\u662f\u201c3\u201d\uff0c\u4f46\u662f\u771f\u5b9e\u60c5\u51b5\u5374\u5e76\u975e\u5982\u6b64\u3002Circle \u7684\u503c\u4e3a 1\uff08\u5b9a\u4e49\u4e3a RED\uff09\uff0c\u800c Square \u7684\u503c\u4e3a 0\uff08\u8bb0\u4f4f\uff0c\u5b83\u4eec\u662f\u5728\u6784\u9020\u5668\u4e2d\u88ab\u521d\u59cb\u5316\u7684\uff09\u3002\u770b\u4e0a\u53bb\u4f3c\u4e4e static \u6570\u636e\u6839\u672c\u6ca1\u6709\u88ab\u5e8f\u5217\u5316\uff01\u786e\u5b9e\u5982\u6b64\u2014\u2014\u5c3d\u7ba1 Class \u7c7b\u662f Serializable \u7684\uff0c\u4f46\u5b83\u5374\u4e0d\u80fd\u6309\u6211\u4eec\u6240\u671f\u671b\u7684\u65b9\u5f0f\u8fd0\u884c\u3002\u6240\u4ee5\u5047\u5982\u60f3\u5e8f\u5217\u5316 static \u503c\uff0c\u5fc5\u987b\u81ea\u5df1\u52a8\u624b\u53bb\u5b9e\u73b0\u3002"),(0,r.kt)("p",null,"\u8fd9\u6b63\u662f Line \u4e2d\u7684 serializeStaticState() \u548c deserializeStaticState() \u4e24\u4e2a static \u65b9\u6cd5\u7684\u7528\u9014\u3002\u53ef\u4ee5\u770b\u5230\uff0c\u5b83\u4eec\u662f\u4f5c\u4e3a\u5b58\u50a8\u548c\u8bfb\u53d6\u8fc7\u7a0b\u7684\u4e00\u90e8\u5206\u88ab\u663e\u5f0f\u5730\u8c03\u7528\u7684\u3002\uff08\u6ce8\u610f\u5fc5\u987b\u7ef4\u62a4\u5199\u5165\u5e8f\u5217\u5316\u6587\u4ef6\u548c\u4ece\u8be5\u6587\u4ef6\u4e2d\u8bfb\u56de\u7684\u987a\u5e8f\u3002\uff09\u56e0\u6b64\uff0c\u4e3a\u4e86\u4f7f CADStatejava \u6b63\u786e\u8fd0\u8f6c\u8d77\u6765\uff0c\u4f60\u5fc5\u987b\uff1a"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"\u4e3a\u51e0\u4f55\u5f62\u72b6\u6dfb\u52a0 serializeStaticState() \u548c deserializeStaticState()"),(0,r.kt)("li",{parentName:"ol"},"\u79fb\u9664 ArrayList shapeTypes \u4ee5\u53ca\u4e0e\u4e4b\u6709\u5173\u7684\u6240\u6709\u4ee3\u7801\u3002"),(0,r.kt)("li",{parentName:"ol"},"\u5728\u51e0\u4f55\u5f62\u72b6\u5185\u6dfb\u52a0\u5bf9\u65b0\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u8fd8\u539f\u9759\u6001\u65b9\u6cd5\u7684\u8c03\u7528\u3002")),(0,r.kt)("p",null,"\u53e6\u4e00\u4e2a\u8981\u6ce8\u610f\u7684\u95ee\u9898\u662f\u5b89\u5168\uff0c\u56e0\u4e3a\u5e8f\u5217\u5316\u4e5f\u4f1a\u5c06 private \u6570\u636e\u4fdd\u5b58\u4e0b\u6765\u3002\u5982\u679c\u4f60\u5173\u5fc3\u5b89\u5168\u95ee\u9898\uff0c\u90a3\u4e48\u5e94\u5c06\u5176\u6807\u8bb0\u6210 transient\uff0c\u4f46\u662f\u8fd9\u4e4b\u540e\uff0c\u8fd8\u5fc5\u987b\u8bbe\u8ba1\u4e00\u79cd\u5b89\u5168\u7684\u4fdd\u5b58\u4fe1\u606f\u7684\u65b9\u6cd5\uff0c\u4ee5\u4fbf\u5728\u6267\u884c\u6062\u590d\u65f6\u53ef\u4ee5\u590d\u4f4d\u90a3\u4e9b private \u53d8\u91cf\u3002"),(0,r.kt)("h2",{id:"xml"},"XML"),(0,r.kt)("p",null,"\u5bf9\u8c61\u5e8f\u5217\u5316\u7684\u4e00\u4e2a\u91cd\u8981\u9650\u5236\u662f\u5b83\u53ea\u662f Java \u7684\u89e3\u51b3\u65b9\u6848\uff1a\u53ea\u6709 Java \u7a0b\u5e8f\u624d\u80fd\u53cd\u5e8f\u5217\u5316\u8fd9\u79cd\u5bf9\u8c61\u3002\u4e00\u79cd\u66f4\u5177\u4e92\u64cd\u4f5c\u6027\u7684\u89e3\u51b3\u65b9\u6848\u662f\u5c06\u6570\u636e\u8f6c\u6362\u4e3a XML \u683c\u5f0f\uff0c\u8fd9\u53ef\u4ee5\u4f7f\u5176\u88ab\u5404\u79cd\u5404\u6837\u7684\u5e73\u53f0\u548c\u8bed\u8a00\u4f7f\u7528\u3002"),(0,r.kt)("p",null,"\u56e0\u4e3a XML \u5341\u5206\u6d41\u884c\uff0c\u6240\u4ee5\u7528\u5b83\u6765\u7f16\u7a0b\u65f6\u7684\u5404\u79cd\u9009\u62e9\u4e0d\u80dc\u679a\u4e3e\uff0c\u5305\u62ec\u968f JDK \u53d1\u5e03\u7684 javax.xml.*\u7c7b\u5e93\u3002\u6211\u9009\u62e9\u4f7f\u7528 Elliotte Rusty Harold \u7684\u5f00\u6e90 XOM \u7c7b\u5e93\uff08\u53ef\u4ece ",(0,r.kt)("a",{parentName:"p",href:"http://www.xom.nu"},"www.xom.nu")," \u4e0b\u8f7d\u5e76\u83b7\u5f97\u6587\u6863\uff09\uff0c\u56e0\u4e3a\u5b83\u770b\u8d77\u6765\u6700\u7b80\u5355\uff0c\u540c\u65f6\u4e5f\u662f\u6700\u76f4\u89c2\u7684\u7528 Java \u4ea7\u751f\u548c\u4fee\u6539 XML \u7684\u65b9\u5f0f\u3002\u53e6\u5916\uff0cXOM \u8fd8\u5f3a\u8c03\u4e86 XML \u7684\u6b63\u786e\u6027\u3002"),(0,r.kt)("p",null,"\u4f5c\u4e3a\u4e00\u4e2a\u793a\u4f8b\uff0c\u5047\u8bbe\u6709\u4e00\u4e2a APerson \u5bf9\u8c61\uff0c\u5b83\u5305\u542b\u59d3\u548c\u540d\uff0c\u4f60\u60f3\u5c06\u5b83\u4eec\u5e8f\u5217\u5316\u5230 XML \u4e2d\u3002\u4e0b\u9762\u7684 APerson \u7c7b\u6709\u4e00\u4e2a getXML() \u65b9\u6cd5\uff0c\u5b83\u4f7f\u7528 XOM \u6765\u4ea7\u751f\u88ab\u8f6c\u6362\u4e3a XML \u7684 Element \u5bf9\u8c61\u7684 APerson \u6570\u636e\uff1b\u8fd8\u6709\u4e00\u4e2a\u6784\u9020\u5668\uff0c\u63a5\u53d7 Element \u5e76\u4ece\u4e2d\u62bd\u53d6\u6070\u5f53\u7684 APerson \u6570\u636e\uff08\u6ce8\u610f\uff0cXML \u793a\u4f8b\u90fd\u5728\u5b83\u4eec\u81ea\u5df1\u7684\u5b50\u76ee\u5f55\u4e2d\uff09\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/APerson.java\n// Use the XOM library to write and read XML\n// nu.xom.Node comes from http://www.xom.nu\nimport nu.xom.*;\nimport java.io.*;\nimport java.util.*;\npublic class APerson {\n    private String first, last;\n    public APerson(String first, String last) {\n        this.first = first;\n        this.last = last;\n    }\n    // Produce an XML Element from this APerson object:\n    public Element getXML() {\n        Element person = new Element("person");\n        Element firstName = new Element("first");\n        firstName.appendChild(first);\n        Element lastName = new Element("last");\n        lastName.appendChild(last);\n        person.appendChild(firstName);\n        person.appendChild(lastName);\n        return person;\n    }\n    // Constructor restores a APerson from XML:\n    public APerson(Element person) {\n        first = person\n                .getFirstChildElement("first").getValue();\n        last = person\n                .getFirstChildElement("last").getValue();\n    }\n    @Override\n    public String toString() {\n        return first + " " + last;\n    }\n    // Make it human-readable:\n    public static void\n    format(OutputStream os, Document doc)\n            throws Exception {\n        Serializer serializer =\n                new Serializer(os,"ISO-8859-1");\n        serializer.setIndent(4);\n        serializer.setMaxLength(60);\n        serializer.write(doc);\n        serializer.flush();\n    }\n    public static void main(String[] args) throws Exception {\n        List<APerson> people = Arrays.asList(\n                new APerson("Dr. Bunsen", "Honeydew"),\n                new APerson("Gonzo", "The Great"),\n                new APerson("Phillip J.", "Fry"));\n        System.out.println(people);\n        Element root = new Element("people");\n        for(APerson p : people)\n            root.appendChild(p.getXML());\n        Document doc = new Document(root);\n        format(System.out, doc);\n        format(new BufferedOutputStream(\n                new FileOutputStream("People.xml")), doc);\n    }\n}\n')),(0,r.kt)("p",null,"\u8f93\u51fa\u4e3a\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'[Dr. Bunsen Honeydew, Gonzo The Great, Phillip J. Fry]\n<?xml version="1.0" encoding="ISO-8859-1"?>\n<people>\n    <person>\n        <first>Dr. Bunsen</first>\n        <last>Honeydew</last>\n    </person>\n    <person>\n        <first>Gonzo</first>\n        <last>The Great</last>\n    </person>\n    <person>\n        <first>Phillip J.</first>\n        <last>Fry</last>\n    </person>\n</people>\n')),(0,r.kt)("p",null,"XOM \u7684\u65b9\u6cd5\u90fd\u5177\u6709\u76f8\u5f53\u7684\u81ea\u89e3\u91ca\u6027\uff0c\u53ef\u4ee5\u5728 XOM \u6587\u6863\u4e2d\u627e\u5230\u5b83\u4eec\u3002XOM \u8fd8\u5305\u542b\u4e00\u4e2a Serializer \u7c7b\uff0c\u4f60\u53ef\u4ee5\u5728 format() \u65b9\u6cd5\u4e2d\u770b\u5230\u5b83\u88ab\u7528\u6765\u5c06 XML \u8f6c\u6362\u4e3a\u66f4\u5177\u53ef\u8bfb\u6027\u7684\u683c\u5f0f\u3002\u5982\u679c\u53ea\u8c03\u7528 toXML()\uff0c\u90a3\u4e48\u6240\u6709\u4e1c\u897f\u90fd\u4f1a\u6df7\u5728\u4e00\u8d77\uff0c\u56e0\u6b64 Serializer \u662f\u4e00\u79cd\u4fbf\u5229\u5de5\u5177\u3002"),(0,r.kt)("p",null,"\u4ece XML \u6587\u4ef6\u4e2d\u53cd\u5e8f\u5217\u5316 Person \u5bf9\u8c61\u4e5f\u5f88\u7b80\u5355\uff1a"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-java"},'// serialization/People.java\n// nu.xom.Node comes from http://www.xom.nu\n// {RunFirst: APerson}\nimport nu.xom.*;\nimport java.io.File;\nimport java.util.*;\npublic class People extends ArrayList<APerson> {\n    public People(String fileName) throws Exception {\n        Document doc =\n                new Builder().build(new File(fileName));\n        Elements elements =\n                doc.getRootElement().getChildElements();\n        for(int i = 0; i < elements.size(); i++)\n            add(new APerson(elements.get(i)));\n    }\n    public static void main(String[] args) throws Exception {\n        People p = new People("People.xml");\n        System.out.println(p);\n    }\n}\n/* Output:\n[Dr. Bunsen Honeydew, Gonzo The Great, Phillip J. Fry]\n*/\n')),(0,r.kt)("p",null,"People \u6784\u9020\u5668\u4f7f\u7528 XOM \u7684 Builder.build() \u65b9\u6cd5\u6253\u5f00\u5e76\u8bfb\u53d6\u4e00\u4e2a\u6587\u4ef6\uff0c\u800c getChildElements() \u65b9\u6cd5\u4ea7\u751f\u4e86\u4e00\u4e2a Elements \u5217\u8868\uff08\u4e0d\u662f\u6807\u51c6\u7684 Java List\uff0c\u53ea\u662f\u4e00\u4e2a\u62e5\u6709 size() \u548c get() \u65b9\u6cd5\u7684\u5bf9\u8c61\uff0c\u56e0\u4e3a Harold \u4e0d\u60f3\u5f3a\u5236\u4eba\u4eec\u4f7f\u7528\u7279\u5b9a\u7248\u672c\u7684 Java\uff0c\u4f46\u662f\u4ecd\u65e7\u5e0c\u671b\u4f7f\u7528\u7c7b\u578b\u5b89\u5168\u7684\u5bb9\u5668\uff09\u3002\u5728\u8fd9\u4e2a\u5217\u8868\u4e2d\u7684\u6bcf\u4e2a Element \u90fd\u8868\u793a\u4e00\u4e2a Person \u5bf9\u8c61\uff0c\u56e0\u6b64\u5b83\u53ef\u4ee5\u4f20\u9012\u7ed9\u7b2c\u4e8c\u4e2a Person \u6784\u9020\u5668\u3002\u6ce8\u610f\uff0c\u8fd9\u8981\u6c42\u4f60\u63d0\u524d\u77e5\u9053 XML \u6587\u4ef6\u7684\u786e\u5207\u7ed3\u6784\uff0c\u4f46\u662f\u8fd9\u7ecf\u5e38\u4f1a\u6709\u4e9b\u95ee\u9898\u3002\u5982\u679c\u6587\u4ef6\u7ed3\u6784\u4e0e\u4f60\u9884\u671f\u7684\u7ed3\u6784\u4e0d\u5339\u914d\uff0c\u90a3\u4e48 XOM \u5c06\u629b\u51fa\u5f02\u5e38\u3002\u5bf9\u4f60\u6765\u8bf4\uff0c\u5982\u679c\u4f60\u7f3a\u4e4f\u6709\u5173\u5c06\u6765\u7684 XML \u7ed3\u6784\u7684\u4fe1\u606f\uff0c\u90a3\u4e48\u5c31\u6709\u53ef\u80fd\u4f1a\u7f16\u5199\u66f4\u590d\u6742\u7684\u4ee3\u7801\u53bb\u63a2\u6d4b XML \u6587\u6863\uff0c\u800c\u4e0d\u662f\u53ea\u5bf9\u5176\u505a\u51fa\u5047\u8bbe\u3002"),(0,r.kt)("p",null,"\u4e3a\u4e86\u83b7\u53d6\u8fd9\u4e9b\u793a\u4f8b\u53bb\u7f16\u8bd1\u5b83\u4eec\uff0c\u4f60\u5fc5\u987b\u5c06 XOM \u53d1\u5e03\u5305\u4e2d\u7684 JAR \u6587\u4ef6\u653e\u7f6e\u5230\u4f60\u7684\u7c7b\u8def\u5f84\u4e2d\u3002"),(0,r.kt)("p",null,"\u8fd9\u91cc\u53ea\u7ed9\u51fa\u4e86\u7528 Java \u548c XOM \u7c7b\u5e93\u8fdb\u884c XML \u7f16\u7a0b\u7684\u7b80\u4ecb\uff0c\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f\u53ef\u4ee5\u6d4f\u89c8 ",(0,r.kt)("a",{parentName:"p",href:"http://www.xom.nu"},"www.xom.nu")," \u3002"))}c.isMDXComponent=!0}}]);